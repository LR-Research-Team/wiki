{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to the Fabula Nova Crystallis Modding Wiki!</p> <p></p>"},{"location":"file-formats/","title":"File formats","text":"<p>This section contains information about the different file formats that are found throughout the trilogy.</p> <p>Warning</p> <p>Most of the file formats aren't fully researched. please consider everything here as WIP.</p>"},{"location":"file-formats/archive-formats/white-bin/","title":"White BIN files","text":"<p>These are the main archive files that contain all of the game's data and always have a paired filelist file. the filename for this archive type have \"white\" in their filenames along with a platform code (.win32, .ps3, and .x360).  The filelist file structure is the only thing that you would need to know if you want to extract or repack files from the white BIN archive and so only the structs for that is given here.</p>"},{"location":"file-formats/archive-formats/white-bin/#final-fantasy-xiii","title":"Final Fantasy XIII","text":""},{"location":"file-formats/archive-formats/white-bin/#filelist-header-section","title":"Filelist Header section","text":"Offset Size Type Description 0x0 0x4 UInt32 Chunk Info start Offset 0x4 0x4 UInt32 Chunk data start offset 0x8 0x4 UInt32 Total number of files"},{"location":"file-formats/archive-formats/white-bin/#file-entry-section","title":"File Entry section","text":"Offset Size Type Description 0x0 0x4 UInt32 The File Code 0x4 0x2 UInt16 Chunk number in which the file info string is stored 0x6 0x2 UInt16 Position of the file info string in the chunk <p>The filecode contains information that determines how the game is supposed to parse the file. this code contains info that determine the file type, the file id or number, and its category or group.</p>"},{"location":"file-formats/archive-formats/white-bin/#chunk-info-section","title":"Chunk Info section","text":"Offset Size Type Description 0x0 0x4 UInt32 Chunk Uncompressed size 0x4 0x4 UInt32 Chunk Compressed size 0x8 0x4 UInt32 Chunk position, relative from Chunk data start offset <p>A chunk is a collection of file path strings that contain the filepath, file position, and the size of the file inside the white BIN archive. each chunk is zlib compressed and you would have to decompress it to get readable file path strings.</p>"},{"location":"file-formats/archive-formats/white-bin/#chunk-data-section","title":"Chunk Data section","text":"<p>Here is how a single decompressed file path string looks like: <pre><code>64:1000:2f5:mot/pc/sk_c005_va/t1.white.win32.bin\n</code></pre> The <code>:</code> is used to separate the data into multiple parts and all of the numerical values at the first three parts would have to be converted from hexadecimal to decimal</p>"},{"location":"file-formats/archive-formats/white-bin/#path-string-structure","title":"Path string structure","text":"Value Info Description 0x64 File Position in the white BIN archive Multiply this value with 0x800 0x1000 Uncompressed file size Actual file size 0x2F5 Compressed file size Size of the file when its zlib compressed, this is the size of the file when stored in the archive mot/pc/sk_c005_va/t1.white.win32.bin Virtual path The virtual path string <p>Most of the files inside the white BIN archive are compressed with zlib compression while few of the files aren't compressed. if the uncompressed and the compressed values given in the string is similar, then that file is not compressed in the archive. </p> <p>When rebuilding the archive, you have to ensure that the position at which you are placing a file is divisible by 0x800. if the position isn't divisible, then add some null bytes till the next closest divisible by 0x800 position value.</p>"},{"location":"file-formats/archive-formats/white-bin/#final-fantasy-xiii-2-and-lightning-returns-final-fantasy-xiii","title":"Final Fantasy XIII-2 and Lightning Returns: Final Fantasy XIII","text":"<p>The filelist files of XIII-2 and Lightning Returns are encrypted and due to the presence of the encryption's header, the filelist header section and the rest of the important data starts from position 0x20 onwards. the main header and the chunk info sections contain the same info as the first game with the only difference being in the File Entry section. </p> <p>The filelist file has to be decrypted with the WhiteCryptTool first before you begin reading the necessary offsets. do note that some of the filelist files aren't encrypted and you can determine this by checking if the below encryption header is present in the filelist file.</p>"},{"location":"file-formats/archive-formats/white-bin/#filelist-encryption-header","title":"Filelist Encryption header","text":"Offset Size Type Description 0x0 0x10 UInt32[4] Encryption Seed, MD5 hash of the decrypted filelist data 0x10 0x4 UInt32 (BE) Filelist data size 0x14 0x4 UInt32 Encryption tag. value is always 501232760 0x18 0x8 UInt32[2] Reserved, always null <p>Note: The MD5 hash is just for the decrypted filelist data without the additional padding at the end of the filelist data, as well as without the Filelist Encryption Header and Filelist Encryption Footer sections.</p>"},{"location":"file-formats/archive-formats/white-bin/#filelist-header-section_1","title":"Filelist Header section","text":"Offset Size Type Description 0x20 0x4 UInt32 Chunk Info start Offset 0x4 0x4 UInt32 Chunk data start offset 0x8 0x4 UInt32 Total number of files <p>These offsets have to be taken relatively from position 0x20 onwards due to the encryption header (eg. 0x20 + Chunk Info start offset, 0x20 + Chunk data start offset). </p>"},{"location":"file-formats/archive-formats/white-bin/#file-entry-section_1","title":"File Entry section","text":"Offset Size Type Description 0x0 0x4 UInt32 The File Code 0x4 0x2 UInt16 Position of the file info string in the chunk 0x6 0x1 UInt8 Chunk number in which the file info string is stored 0x7 0x1 UInt8 File type ID <p>The position value of the file info string in the odd number chunks, will start from 32768 onwards and resets to 0 after an odd numbered chunk. it again starts from 32768 for the next odd numbered chunk and again switches back to 0 after that chunk. </p> <p>You have to take the actual position value of the file path string in the chunk and add it to 32768. the resulting value will be the position value in this Entry section.</p> <p>For example 32768 would be position 0, 32819 would be position 51 and so on. (32768 + 51 = 32819) </p>"},{"location":"file-formats/archive-formats/white-bin/#filelist-encryption-footer","title":"Filelist Encryption Footer","text":"<p>The following offsets are present at the end of the filelist file and is part of the encryption.</p> Offset Size Type Description 0x0 0x4 UInt32 Filelist data size. same as the encryption header but in LE 0x4 0x4 UInt32 Filelist checksum <p>If you are rebuilding the filelist file, then make sure to update the filelist data size values present in the header, and footer sections. the MD5 hash need not be updated as the game directly uses those bytes in the header as a seed for the decryption process. the size of the filelist data has to be divisible by 8 and if its not divisible, then add some null bytes at the end to pad the size to the next closest divisible by 8 value. </p> <p>After you are done building the filelist, encrypt the file with WhiteCryptTool's encryption function. this will also calculate the checksum of the filelist before encrypting it.</p>"},{"location":"file-formats/archive-formats/wpd-pack/","title":"WPD Pack files","text":"<p>The WPD pack files (not to be confused with the WDB files), is like a mini archive that can hold a lot of files inside it. they come in .bin, .wpd, .wpk, .xgr, .xfv, .xwb, and .xwp file extensions. Sometimes these files can also have a paired IMGB file which can contain header less DDS texture or image related data for all txbh files (SEDBtxb section only data), that are packed inside this archive file.</p>"},{"location":"file-formats/archive-formats/wpd-pack/#section-header","title":"Section Header","text":"<p>N.B.: The below sections are all in Big Endian.</p>"},{"location":"file-formats/archive-formats/wpd-pack/#wpd-header-section","title":"WPD Header section","text":"Offset Size Type Description 0x0 0x4 String FourCC, Always WPD (\"White Packed Data\") 0x4 0x4 UInt32 File count 0x8 0x8 UInt32[2] Reserved, always null"},{"location":"file-formats/archive-formats/wpd-pack/#wpd-file-info-section","title":"WPD File info section","text":"Offset Size Type Description 0x10 0x10 String File Name, null bytes are added if length is less than 0x10 0x20 0x4 UInt32 File data start offset 0x24 0x4 UInt32 File size 0x28 0x4 String File's Extension 0x2C 0x4 UInt32 Reserved, always null"},{"location":"file-formats/audio-format/scd/","title":"SCD","text":"<p>SCD is a sound container file format that is used in the trilogy for storing all of its audio files. the underlying audio stream can be of different formats like Vorbis, MP3, XMA, or ADPCM. this wiki mainly focuses on the PC version SCDs, which store the audio streams in Vorbis (for music) and ADPCM (for sfx and voiceovers). </p> <p>Important: The bytes have to be read in Little Endian for the PC version files and in Big Endian for the console version files.</p>"},{"location":"file-formats/audio-format/scd/#main-header-section","title":"Main Header section","text":"Offset Size Type Description 0x0 0x4 UInt32 FourCC. Always 0x53454442 (SEDB, \"Section Data Binary\") 0x4 0x4 UInt32 Resource FourCC, always SSCF 0x8 0x4 UInt32 Unknown (Version ?, always 3) 0xC 0x2 UInt16 Unknown, always 1024 0xE 0x2 UInt16 Unknown, always 48 0x10 0x8 UInt64 File size 0x18 0x8 UInt64 Reserved, always null 0x20 0x8 UInt64 Reserved, always null 0x28 0x8 UInt64 Reserved, always null"},{"location":"file-formats/audio-format/scd/#sub-header-section","title":"Sub Header section","text":"<p>N.B.: The sub header begins from offset 0x30 onwards. as some parts of the sub header are not properly reversed, they are marked as unknown. offsets given in the Offset coloumns are all relative from the sub header start, while the offsets given in the Description columns are absolute.</p> Offset Size Type Description 0x0 0x2 UInt16 Number of 'A' chunks 0x2 0x2 UInt16 Number of 'B' chunks 0x4 0x2 UInt16 Number of 'Stream-info' chunks 0x6 0x2 UInt16 Numbered sound folder id 0x8 0x4 UInt32 Chunk-B table offset 0xC 0x4 UInt32 Stream-info table offset 0x10 0x4 UInt32 Chunk-C table offset 0x14 0x4 UInt32 Reserved, always null 0x18 0x4 UInt32 Chunk-D table offset 0x30 0x4 UInt32 SCD File number, sometimes present when there are multiple streams"},{"location":"file-formats/audio-format/scd/#chunk-a-table","title":"Chunk-A table","text":"<p>This table begins from 0x50 (absolute) onwards and would contain 4 offsets for each Chunk-A chunk in this file. music files (Vorbis type) will have just one Chunk-A chunk which means one Chunk-A chunk offset, while the non music files (ADPCM type) can have more than one Chunk-A chunks. the secondary offsets will be null if there is only one Chunk-A chunk.</p> Offset Size Type Description 0x50 0x4 UInt32 Chunk-A chunk offset"},{"location":"file-formats/audio-format/scd/#chunk-b-table","title":"Chunk-B table","text":"<p>This table begins after the Chunk-A table and would contain 4 offsets for each Chunk-B chunk in this file.</p> Offset Size Type Description 0x00 0x4 UInt32 Chunk-B chunk offset"},{"location":"file-formats/audio-format/scd/#stream-info-table","title":"Stream Info table","text":"<p>Depending on the number of stream info offsets, there should be a UInt32 offset for each sound stream info in the file. music files (Vorbis type) will have just one stream which means one stream info offset, while the non music files (ADPCM type) can have more than one stream so more than one stream info offset. do note that there can be info offsets that lead to dummy data or offset that do not have a valid audio stream related info.</p> Offset Size Type Description 0x00 0x4 UInt32 Stream Info offset"},{"location":"file-formats/audio-format/scd/#chunk-c-table","title":"Chunk-C table","text":"<p>This table begins after the Stream Info table and would contain 4 offsets for each Chunk-C chunk in this file. as of now there is no way to determine how many of these chunks are present in a SCD file.</p> Offset Size Type Description 0x00 0x4 UInt32 Chunk-C chunk offset"},{"location":"file-formats/audio-format/scd/#chunk-a","title":"Chunk-A","text":"<p>The Chunk-A offset is given in the Chunk-A table.</p> Offset Size Type Description 0x0 0x3 char[3] Unknown 0x4 0x1 UInt8 Switching tracks flag, see Switching tracks flag info 0x8 0x4 Float32 SCD volume, volume of the file ingame 0x12 0x2 UInt16 SCD file number, part of the filecode <p>The file number is sometimes not present if there are multiple streams in the SCD file.</p>"},{"location":"file-formats/audio-format/scd/#chunk-b","title":"Chunk-B","text":"<p>The Chunk-B offset is given in the Chunk-B table. as of now this chunk is not properly reversed.</p> Offset Size Type Description"},{"location":"file-formats/audio-format/scd/#stream-info","title":"Stream Info","text":"<p>The info section offset is given in the Stream Info table.</p> Offset Size Type Description 0x0 0x4 UInt32 Audio stream size 0x4 0x4 UInt32 Number of Channels 0x8 0x4 UInt32 Sample Rate 0xC 0x4 UInt32 Format flag, see Flag info 0x10 0x4 UInt32 Loop Start 0x14 0x4 UInt32 Loop End 0x18 0x4 UInt32 Partial Header/XOR chunk size"},{"location":"file-formats/audio-format/scd/#chunk-c","title":"Chunk-C","text":"<p>The Chunk-C offset is given in the Chunk-C table. as of now this chunk is not properly reversed.</p> Offset Size Type Description"},{"location":"file-formats/audio-format/scd/#switching-tracks-flag","title":"Switching tracks flag","text":"<p>An UInt8 value is used to determine whether the SCD file switches to play the secondary track from the top and bottom channels, when enemies appear onscreen. </p> Value Description 1 normal stereo channel scd file 2 multi track quad channel scd file"},{"location":"file-formats/audio-format/scd/#flag-info","title":"Flag info","text":"<p>An UInt32 value is used to determine the format of the underlying audio stream that is stored inside the SCD file. </p> Value Description 6 Vorbis 7 Mpeg3 11 XMA2 12 ADPCM"},{"location":"file-formats/audio-format/scd/#partial-headerxor-chunk","title":"Partial Header/XOR chunk","text":"<p>This chunk begins 4 bytes after its size offset in the Stream Info and varies according to the game and the type of audio stream. do note that only the Partial Header chunk for ADPCM type stream is given. - If this is a Vorbis type stream from Final Fantasy XIII, then this chunk would have to be considered as a Partial Header and is not required for audio extraction and replacement.</p> <ul> <li> <p>If this is a Vorbis type stream from Final Fantasy XIII-2 and Lightning Returns: Final Fantasy XIII, then this would be considered as a XOR chunk which is required for audio extraction. </p> </li> <li> <p>For ADPCM streams from the trilogy, you have to consider this chunk as a Partial Header and use it for audio extraction and replacement.</p> </li> </ul> <p>Partial Header chunk (ADPCM)</p> Offset Size Type Description 0x0 0x2 UInt16 ADPCM format tag, always 2 0x3 0x2 UInt16 Number of Channels, same as in Info section 0x4 0x4 UInt32 Sample Rate, same as in Info section 0x8 0x4 UInt32 Average bytes per sample 0xC 0x2 UInt16 Block align 0xE 0x2 UInt16 Bits per Sample, always 4 0x10 0x2 UInt16 CbSize, always 32 0x12 0x2 UInt16 Samples per block 0x14 0x2 UInt16 Number of entries in Coefficients, always 7 0x16 0x1C Char Array of compression coefficients, always common <p>ADPCM Compression Coefficients: These byte values are always common and each one should be parsed as an UInt16 and Int16 (signed) accordingly. if you are just extracting the audio file, then you can just copy paste all the 28 bytes of this array into your extracted audio file with a valid ADPCM header.</p> <p>XOR chunk (Vorbis only)</p> Offset Size Type Description 0x0 0x2 UInt16 Encryption flag, always 8194 0x2 0x1 UInt8 UnXOR magic number 0x3 0x1 UInt8 Reserved, always null 0x4 0x4 UInt32 Reserved, always null 0x8 0x4 UInt32 Unknown 0xC 0x4 UInt32 Unknown, always 1036831949 0x10 0x4 UInt32 Ogg page table size 0x14 0x4 UInt32 Vorbis Header size, also applies for the XOR'ed data 0x18 0x4 UInt32 Unknown 0x1C 0x4 UInt32 Unknown <p>The rest of the data in this chunk are the <code>OggS</code> page offsets and the XOR'ed vorbis header. each page offset will lead to the start of an <code>OggS</code> page in the audio stream data while the XOR'ed vorbis header data has to be UnXOR'ed to get a valid vorbis header for the audio stream data. </p> <p>You can get the relative start position of the XOR'ed header data from this MetaData/Encoder/XOR chunk with this formulae:  XOR'ed data start = Ogg page table size + 32 </p> <p>Refer to the UnXOR'ing logic for UnXOR'ing the header data.</p>"},{"location":"file-formats/audio-format/scd/#audio-stream-info","title":"Audio stream info","text":"<p>Vorbis type streams have the audio header, while the ADPCM ones do not. you have to manually generate a WAV ADPCM header with the necessary info given in the Stream Info Section and the Partial Header/XOR Chunk.  Conversion Notes:</p> <ul> <li> <p>Vorbis streams from the game aren't serialized. if you are trying to replace an existing vorbis type SCD file, then ensure that your vorbis converter doesn't serialize the converted audio file. you can use the VorbisEncoder tool that comes with the NovaChrysalia Mod manager to convert your audio track to vorbis. make sure to update the offsets in the Stream Info Section to reflect your new vorbis file.</p> </li> <li> <p>If you are trying to replace an existing ADPCM type SCD file, then you have to strip the WAV header from your encoded file as well as update the number of channels, sample rate, average bytes per sample, block align, and the samples per block offsets in the Partial Header/XOR chunk. the values that you have to put in these offsets can all be found in your newly encoded ADPCM file's header. </p> </li> </ul>"},{"location":"file-formats/audio-format/scd/#unxoring-logic","title":"UnXOR'ing logic","text":"<p>Final Fantasy XIII-2 and Lightning Returns: Final Fantasy XIII have its Vorbis type stream's header XOR'ed. you would have to use this following logic below to decrypt the header.  We will use the file \"music_Academia.win32.scd\" from Final Fantasy XIII-2 JP audio data as an example to explain the logic.</p> <ul> <li> <p>Lets take the UnXOR magic number from the Partial Header/XOR chunk of this file. this number will be <code>0x36</code>. </p> </li> <li> <p>Go to the XOR'ed data start position in this file and take the first byte here which will be <code>0x79</code>.</p> </li> <li> <p>XOR <code>0x79</code> with the magic number <code>0x36</code> and we get <code>0x4F</code>. this would be our first UnXOR'ed vorbis header byte.</p> </li> <li> <p>Do the same for the rest of the bytes in the XOR'ed data and once you have completely UnXOR'ed the data, copy the UnXOR'ed bytes into a new empty file. </p> </li> <li> <p>Now copy the audio stream data after the UnXOR'ed bytes into this new file and save the file with a <code>.ogg</code> extension. this should now allow you to open/play the file in any media player that supports the vorbis audio format.</p> </li> </ul>"},{"location":"file-formats/database-format/wdb-field-names/","title":"WDB Field Names","text":"<p>The field names in the WDB files indicates how to parse each record's binary data and is present only in XIII-2 and XIII-LR's WDB files. each field would begin with a single letter that indicates the type of field, a number that indicates the amount of bits used by that field's value, and a small description about what the field is supposed to do ingame. </p>"},{"location":"file-formats/database-format/wdb-field-names/#field-name-types","title":"Field name types","text":"<p>The following list contains commonly used starting letters for the field names.</p> Field Letter Description f represents a floating point value field f# represents a non decimal signed integer value field i# represents a signed integer value field s represents a string value field s# represents a string value field. the value points to the string item's index in the !!strArray section u# represents an unsigned integer value field"},{"location":"file-formats/database-format/wdb-field-names/#field-names-for-final-fantasy-xiiis-wdbs","title":"Field names for FINAL FANTASY XIII's WDBs","text":"<p>This section contains manually reversed field names for each WDB file from FINAL FANTASY XIII. as of now the field names are given only for some of the WDB files and more will be added to this page slowly when their field names are identified. do know that some of them may not be correct and if you encounter such incorrect fields, please report them in the Fabula Nova Chrystalis discord server.</p> <p>All the offsets values are stored in Big Endian order. for non 32bit type fields, the fields would have to be applied from a right to left order on a 4byte set of a record's data. if you run out of bits in that 4bytes set, then apply the fields to the next 4bytes set, in the same right to left order.</p>"},{"location":"file-formats/database-format/wdb-field-names/#auto_clipwdb","title":"auto_clip.wdb","text":"Field Type Description sTitle UInt32 relative offset in !!string section sTarget UInt32 relative offset in !!string section sTarget2 UInt32 relative offset in !!string section sText UInt32 relative offset in !!string section sPicture UInt32 relative offset in !!string section u4Category Bits Unsigned 4 bits u7Sort Bits Unsigned 7 bits u4Chapter Bits Unsigned 4 bits"},{"location":"file-formats/database-format/wdb-field-names/#actioneffectwdb","title":"actioneffect.wdb","text":"Field Type Description sEffectId UInt32 relative offset in !!string section iEffectArg1 Int32 int32 value sSoundId UInt32 relative offset in !!string section"},{"location":"file-formats/database-format/wdb-field-names/#attreffectwdb","title":"attreffect.wdb","text":"Field Type Description sFootSoundResourceNameDefaultAttr UInt32 relative offset in !!string section sFootSoundResourceNameDrySoilAttr UInt32 relative offset in !!string section sFootSoundResourceNameDampSoilAttr UInt32 relative offset in !!string section sFootSoundResourceNameGrassAttr UInt32 relative offset in !!string section sFootSoundResourceNameBushAttr UInt32 relative offset in !!string section sFootSoundResourceNameSandAttr UInt32 relative offset in !!string section sFootSoundResourceNameWoodAttr UInt32 relative offset in !!string section sFootSoundResourceNameBoardAttr UInt32 relative offset in !!string section sFootSoundResourceNameFlooringAttr UInt32 relative offset in !!string section sFootSoundResourceNameStoneAttr UInt32 relative offset in !!string section sFootSoundResourceNameGravelAttr UInt32 relative offset in !!string section sFootSoundResourceNameIronAttr UInt32 relative offset in !!string section sFootSoundResourceNameThinIronAttr UInt32 relative offset in !!string section sFootSoundResourceNameClothAttr UInt32 relative offset in !!string section sFootSoundResourceNameEartenwareAttr UInt32 relative offset in !!string section sFootSoundResourceNameCrystalAttr UInt32 relative offset in !!string section sFootSoundResourceNameGlassAttr UInt32 relative offset in !!string section sFootSoundResourceNameIceAttr UInt32 relative offset in !!string section sFootSoundResourceNameWaterAttr UInt32 relative offset in !!string section sFootSoundResourceNameAsphaltAttr UInt32 relative offset in !!string section sFootSoundResourceNameNoneAttr UInt32 relative offset in !!string section sFootSoundResourceNameWireNetAttr UInt32 relative offset in !!string section sFootSoundResourceNameBranchOfMachineAttr UInt32 relative offset in !!string section sFootSoundResourceNameBranchOfNatureAttr UInt32 relative offset in !!string section sFootSoundResourceNameCorkAttr UInt32 relative offset in !!string section sFootSoundResourceNameMarbleAttr UInt32 relative offset in !!string section sFootSoundResourceNameHologramAttr UInt32 relative offset in !!string section sFootVfxResourceNameDefaultAttr UInt32 relative offset in !!string section sFootVfxResourceNameDrySoilAttr UInt32 relative offset in !!string section sFootVfxResourceNameDampSoilAttr UInt32 relative offset in !!string section sFootVfxResourceNameGrassAttr UInt32 relative offset in !!string section sFootVfxResourceNameBushAttr UInt32 relative offset in !!string section sFootVfxResourceNameSandAttr UInt32 relative offset in !!string section sFootVfxResourceNameWoodAttr UInt32 relative offset in !!string section sFootVfxResourceNameBoardAttr UInt32 relative offset in !!string section sFootVfxResourceNameFlooringAttr UInt32 relative offset in !!string section sFootVfxResourceNameStoneAttr UInt32 relative offset in !!string section sFootVfxResourceNameGravelAttr UInt32 relative offset in !!string section sFootVfxResourceNameIronAttr UInt32 relative offset in !!string section sFootVfxResourceNameThinIronAttr UInt32 relative offset in !!string section sFootVfxResourceNameClothAttr UInt32 relative offset in !!string section sFootVfxResourceNameEartenwareAttr UInt32 relative offset in !!string section sFootVfxResourceNameCrystalAttr UInt32 relative offset in !!string section sFootVfxResourceNameGlassAttr UInt32 relative offset in !!string section sFootVfxResourceNameIceAttr UInt32 relative offset in !!string section sFootVfxResourceNameWaterAttr UInt32 relative offset in !!string section sFootVfxResourceNameAsphaltAttr UInt32 relative offset in !!string section sFootVfxResourceNameNoneAttr UInt32 relative offset in !!string section sFootVfxResourceNameWireNetAttr UInt32 relative offset in !!string section sFootVfxResourceNameBranchOfMachineAttr UInt32 relative offset in !!string section sFootVfxResourceNameBranchOfNatureAttr UInt32 relative offset in !!string section sFootVfxResourceNameCorkAttr UInt32 relative offset in !!string section sFootVfxResourceNameMarbleAttr UInt32 relative offset in !!string section sFootVfxResourceNameHologramAttr UInt32 relative offset in !!string section"},{"location":"file-formats/database-format/wdb-field-names/#attreffectstatewdb","title":"attreffectstate.wdb","text":"Field Type Description sWalk UInt32 relative offset in !!string section sRun UInt32 relative offset in !!string section sJump UInt32 relative offset in !!string section sRetreat UInt32 relative offset in !!string section sLanding UInt32 relative offset in !!string section sSliding UInt32 relative offset in !!string section sSquat UInt32 relative offset in !!string section sStand UInt32 relative offset in !!string section sFly UInt32 relative offset in !!string section"},{"location":"file-formats/database-format/wdb-field-names/#bt_abilitywdb","title":"bt_ability.wdb","text":"Field Type Description sStringResId UInt32 relative offset in !!string section sInfoStResId UInt32 relative offset in !!string section sScriptId UInt32 relative offset in !!string section sAblArgStr0 UInt32 relative offset in !!string section sAblArgStr1 UInt32 relative offset in !!string section sAutoAblStEff0 UInt32 relative offset in !!string section fDistanceMin Float32 float value fDistanceMax Float32 float value fMaxJumpHeight Float32 float value fYDistanceMin Float32 float value fYDistanceMax Float32 float value fAirJpHeight Float32 float value fAirJpTime Float32 float value sReplaceAirAttack UInt32 relative offset in !!string section sReplaceAirAir UInt32 relative offset in !!string section sReplaceRangeAtk UInt32 relative offset in !!string section sReplaceFinAtk UInt32 relative offset in !!string section sReplaceEnAttr UInt32 relative offset in !!string section iExceptionID Int32 int32 value sActionId0 UInt32 relative offset in !!string section sActionId1 UInt32 relative offset in !!string section sActionId2 UInt32 relative offset in !!string section sActionId3 UInt32 relative offset in !!string section sRtDamSrc UInt32 relative offset in !!string section sRefDamSrc UInt32 relative offset in !!string section sSubRefDamSrc UInt32 relative offset in !!string section sSlamDamSrc UInt32 relative offset in !!string section sCamArtsSeqId0 UInt32 relative offset in !!string section sCamArtsSeqId1 UInt32 relative offset in !!string section sCamArtsSeqId2 UInt32 relative offset in !!string section sCamArtsSeqId3 UInt32 relative offset in !!string section sRedirectAbility0 UInt32 relative offset in !!string section sRedirectTo0 UInt32 relative offset in !!string section sRedirectAbility1 UInt32 relative offset in !!string section sRedirectTo1 UInt32 relative offset in !!string section sRedirectAbility2 UInt32 relative offset in !!string section sRedirectTo2 UInt32 relative offset in !!string section sRedirectAbility3 UInt32 relative offset in !!string section sRedirectTo3 UInt32 relative offset in !!string section sSysEffId0 UInt32 relative offset in !!string section iSysEffArg0 Int32 int32 value sSysSndId0 UInt32 relative offset in !!string section sRtEffId0 UInt32 relative offset in !!string section iRtEffArg0 Int32 int32 value sRtSndId0 UInt32 relative offset in !!string section sRtEffId1 UInt32 relative offset in !!string section iRtEffArg1 Int32 int32 value sRtSndId1 UInt32 relative offset in !!string section sRtEffId2 UInt32 relative offset in !!string section iRtEffArg2 Int32 int32 value sRtSndId2 UInt32 relative offset in !!string section sRtEffId3 UInt32 relative offset in !!string section iRtEffArg3 Int32 int32 value sRtSndId3 UInt32 relative offset in !!string section sRtEffId4 UInt32 relative offset in !!string section iRtEffArg4 Int32 int32 value sRtSndId4 UInt32 relative offset in !!string section u1ComAbility Bits Unsigned 1 bit u1RsvFlag0 Bits Unsigned 1 bit u1RsvFlag1 Bits Unsigned 1 bit u1RsvFlag2 Bits Unsigned 1 bit u1RsvFlag3 Bits Unsigned 1 bit u1RsvFlag4 Bits Unsigned 1 bit u1RsvFlag5 Bits Unsigned 1 bit u1RsvFlag6 Bits Unsigned 1 bit u4ArtsNameHideKd Bits Unsigned 4 bits u16ArtsNameFrame Bits Unsigned 16 bits u4UseRole Bits Unsigned 4 bits u8AblSndKind Bits Unsigned 8 bits u4MenuCategory Bits Unsigned 4 bits i16MenuSortNo Bits Signed 16 bits u1NoDespel Bits Unsigned 1 bit i16ScriptArg0 Bits Signed 16 bits i16ScriptArg1 Bits Signed 16 bits u8AbilityKind Bits Unsigned 8 bits u4TargetListKind Bits Unsigned 4 bits i16AblArgInt0 Bits Signed 16 bits u4UpAblKind Bits Unsigned 4 bits i16AblArgInt1 Bits Signed 16 bits i16AtbCount Bits Signed 16 bits i16AtRnd Bits Signed 16 bits i16KeepVal Bits Signed 16 bits i16IntRsv0 Bits Signed 16 bits i16IntRsv1 Bits Signed 16 bits u1TgFoge Bits Unsigned 1 bit u1NoBackStep Bits Unsigned 1 bit u1AIWanderFlag Bits Unsigned 1 bit u16TgElemId Bits Unsigned 16 bits u10OpProp0 Bits Unsigned 10 bits u1AutoAblStEfEd0 Bits Unsigned 1 bit u1CheckAutoRpl Bits Unsigned 1 bit u1SeqParts Bits Unsigned 1 bit i16AutoAblStEfTi0 Bits Signed 16 bits u4YRgCheckType Bits Unsigned 4 bits u4AtDistKind Bits Unsigned 4 bits u4JumpAttackType Bits Unsigned 4 bits u1SeqTermination Bits Unsigned 1 bit u5ActSelType Bits Unsigned 5 bits u4LoopFinCond Bits Unsigned 4 bits u16LoopFinArg Bits Unsigned 16 bits u4RedirectMargeNof0 Bits Unsigned 4 bits i16RefDamSrcRpt Bits Signed 16 bits i16SubRefDamSrcRp Bits Signed 16 bits i8AreaRad Bits Signed 8 bits u8CamArtsSelType Bits Unsigned 8 bits u4RedirectMargeNof1 Bits Unsigned 4 bits u4RedirectMargeNof2 Bits Unsigned 4 bits u4RedirectMargeNof3 Bits Unsigned 4 bits u16SysEffPos0 Bits Unsigned 16 bits u16RtEffPos0 Bits Unsigned 16 bits u16RtEffPos1 Bits Unsigned 16 bits u16RtEffPos2 Bits Unsigned 16 bits u16RtEffPos3 Bits Unsigned 16 bits u16RtEffPos4 Bits Unsigned 16 bits"},{"location":"file-formats/database-format/wdb-field-names/#bt_auto_abilitywdb","title":"bt_auto_ability.wdb","text":"Field Type Description sStringResId UInt32 relative offset in !!string section sInfoStResId UInt32 relative offset in !!string section sScriptId UInt32 relative offset in !!string section sAutoAblArgStr0 UInt32 relative offset in !!string section sAutoAblArgStr1 UInt32 relative offset in !!string section u1RsvFlag0 Bits Unsigned 1 bit u1RsvFlag1 Bits Unsigned 1 bit u1RsvFlag2 Bits Unsigned 1 bit u1RsvFlag3 Bits Unsigned 1 bit u4UseRole Bits Unsigned 4 bits u4MenuCategory Bits Unsigned 4 bits i16MenuSortNo Bits Signed 16 bits i16ScriptArg0 Bits Signed 16 bits i16ScriptArg1 Bits Signed 16 bits u8AutoAblKind Bits Unsigned 8 bits i16AutoAblArgInt0 Bits Signed 16 bits i16AutoAblArgInt1 Bits Signed 16 bits i16WepLvArg0 Bits Signed 16 bits i16WepLvArg1 Bits Signed 16 bits"},{"location":"file-formats/database-format/wdb-field-names/#bt_chainbonuswdb","title":"bt_chainbonus.wdb","text":"Field Type Description u6WhoFrom Bits Unsigned 6 bits u6When0 Bits Unsigned 6 bits u6When1 Bits Unsigned 6 bits u6When2 Bits Unsigned 6 bits u6WhatState Bits Unsigned 6 bits u6WhoTo Bits Unsigned 6 bits u6DoWhat Bits Unsigned 6 bits u6Where Bits Unsigned 6 bits u6How Bits Unsigned 6 bits u16Bonus Bits Unsigned 16 bits"},{"location":"file-formats/database-format/wdb-field-names/#bt_chara_propwdb","title":"bt_chara_prop.wdb","text":"Field Type Description sInfoStrId UInt32 relative offset in !!string section sOpenCondArgS0 UInt32 relative offset in !!string section u1NoLibra Bits Unsigned 1 bit u8OpenCond Bits Unsigned 8 bits u8AiOrderEn Bits Unsigned 8 bits u8AiOrderJm Bits Unsigned 8 bits u4FlavorAtk Bits Unsigned 4 bits u4FlavorBla Bits Unsigned 4 bits u4FlavorDef Bits Unsigned 4 bits"},{"location":"file-formats/database-format/wdb-field-names/#bt_constantswdb","title":"bt_constants.wdb","text":"Field Type Description iiVal Int32 int32 value ffVal Float32 float value ssVal UInt32 relative offset in !!string section"},{"location":"file-formats/database-format/wdb-field-names/#bt_summonwdb","title":"bt_summon.wdb","text":"Field Type Description iSummonKind Int32 int32 value sCharaSet UInt32 relative offset in !!string section sCharaSet UInt32 relative offset in !!string section sBtChSpec0 UInt32 relative offset in !!string section sBtChSpec1 UInt32 relative offset in !!string section sSummonInEv UInt32 relative offset in !!string section sDriveInEv UInt32 relative offset in !!string section sFinishArtsEv UInt32 relative offset in !!string section iMaxSp0 Int32 int32 value iMaxSp1 Int32 int32 value iMaxSp2 Int32 int32 value iMaxSp3 Int32 int32 value iMaxSp4 Int32 int32 value iMaxSp5 Int32 int32 value iMaxSp6 Int32 int32 value iMaxSp7 Int32 int32 value iMaxSp8 Int32 int32 value iMaxSp9 Int32 int32 value iMaxSp10 Int32 int32 value iMaxSp11 Int32 int32 value iMaxSp12 Int32 int32 value iMaxSp13 Int32 int32 value iMaxSp14 Int32 int32 value iMaxSp15 Int32 int32 value iMaxSp16 Int32 int32 value u16Str0 Bits Unsigned 16 bits u16Str1 Bits Unsigned 16 bits u16Str2 Bits Unsigned 16 bits u16Str3 Bits Unsigned 16 bits u16Str4 Bits Unsigned 16 bits u16Str5 Bits Unsigned 16 bits u16Str6 Bits Unsigned 16 bits u16Str7 Bits Unsigned 16 bits u16Str8 Bits Unsigned 16 bits u16Str9 Bits Unsigned 16 bits u16Str10 Bits Unsigned 16 bits u16Str11 Bits Unsigned 16 bits u16Str12 Bits Unsigned 16 bits u16Str13 Bits Unsigned 16 bits u16Str14 Bits Unsigned 16 bits u16Str15 Bits Unsigned 16 bits u16Str16 Bits Unsigned 16 bits u16Mag0 Bits Unsigned 16 bits u16Mag1 Bits Unsigned 16 bits u16Mag2 Bits Unsigned 16 bits u16Mag3 Bits Unsigned 16 bits u16Mag4 Bits Unsigned 16 bits u16Mag5 Bits Unsigned 16 bits u16Mag6 Bits Unsigned 16 bits u16Mag7 Bits Unsigned 16 bits u16Mag8 Bits Unsigned 16 bits u16Mag9 Bits Unsigned 16 bits u16Mag10 Bits Unsigned 16 bits u16Mag11 Bits Unsigned 16 bits u16Mag12 Bits Unsigned 16 bits u16Mag13 Bits Unsigned 16 bits u16Mag14 Bits Unsigned 16 bits u16Mag15 Bits Unsigned 16 bits u16Mag16 Bits Unsigned 16 bits"},{"location":"file-formats/database-format/wdb-field-names/#charasetwdb","title":"charaset.wdb","text":"Field Type Description iMemorySizeLimit Int32 int32 value iVideoMemorySizeLimit Int32 int32 value sCharaSpecId0 UInt32 relative offset in !!string section sCharaSpecId1 UInt32 relative offset in !!string section sCharaSpecId2 UInt32 relative offset in !!string section sCharaSpecId3 UInt32 relative offset in !!string section sCharaSpecId4 UInt32 relative offset in !!string section sCharaSpecId5 UInt32 relative offset in !!string section sCharaSpecId6 UInt32 relative offset in !!string section sCharaSpecId7 UInt32 relative offset in !!string section sCharaSpecId8 UInt32 relative offset in !!string section sCharaSpecId9 UInt32 relative offset in !!string section sCharaSpecId10 UInt32 relative offset in !!string section sCharaSpecId11 UInt32 relative offset in !!string section sCharaSpecId12 UInt32 relative offset in !!string section sCharaSpecId13 UInt32 relative offset in !!string section sCharaSpecId14 UInt32 relative offset in !!string section sCharaSpecId15 UInt32 relative offset in !!string section sCharaSpecId16 UInt32 relative offset in !!string section sCharaSpecId17 UInt32 relative offset in !!string section sCharaSpecId18 UInt32 relative offset in !!string section sCharaSpecId19 UInt32 relative offset in !!string section sCharaSpecId20 UInt32 relative offset in !!string section sCharaSpecId21 UInt32 relative offset in !!string section sCharaSpecId22 UInt32 relative offset in !!string section sCharaSpecId23 UInt32 relative offset in !!string section sCharaSpecId24 UInt32 relative offset in !!string section sCharaSpecId25 UInt32 relative offset in !!string section sCharaSpecId26 UInt32 relative offset in !!string section sCharaSpecId27 UInt32 relative offset in !!string section sCharaSpecId28 UInt32 relative offset in !!string section sCharaSpecId29 UInt32 relative offset in !!string section sCharaSpecId30 UInt32 relative offset in !!string section sCharaSpecId31 UInt32 relative offset in !!string section sCharaSpecId32 UInt32 relative offset in !!string section sCharaSpecId33 UInt32 relative offset in !!string section sCharaSpecId34 UInt32 relative offset in !!string section sCharaSpecId35 UInt32 relative offset in !!string section sCharaSpecId36 UInt32 relative offset in !!string section sCharaSpecId37 UInt32 relative offset in !!string section sCharaSpecId38 UInt32 relative offset in !!string section sCharaSpecId39 UInt32 relative offset in !!string section sCharaSpecId40 UInt32 relative offset in !!string section sCharaSpecId41 UInt32 relative offset in !!string section sCharaSpecId42 UInt32 relative offset in !!string section sCharaSpecId43 UInt32 relative offset in !!string section sCharaSpecId44 UInt32 relative offset in !!string section sCharaSpecId45 UInt32 relative offset in !!string section sCharaSpecId46 UInt32 relative offset in !!string section sCharaSpecId47 UInt32 relative offset in !!string section sCharaSpecId48 UInt32 relative offset in !!string section sCharaSpecId49 UInt32 relative offset in !!string section sCharaSpecId50 UInt32 relative offset in !!string section sCharaSpecId51 UInt32 relative offset in !!string section sCharaSpecId52 UInt32 relative offset in !!string section sCharaSpecId53 UInt32 relative offset in !!string section sCharaSpecId54 UInt32 relative offset in !!string section sCharaSpecId55 UInt32 relative offset in !!string section sCharaSpecId56 UInt32 relative offset in !!string section sCharaSpecId57 UInt32 relative offset in !!string section sCharaSpecId58 UInt32 relative offset in !!string section sCharaSpecId59 UInt32 relative offset in !!string section sCharaSpecId60 UInt32 relative offset in !!string section sCharaSpecId61 UInt32 relative offset in !!string section sCharaSpecId62 UInt32 relative offset in !!string section sCharaSpecId63 UInt32 relative offset in !!string section u1PartyLoadRequestIndex0 Bits Unsigned 1 bit u1PartyLoadRequestIndex1 Bits Unsigned 1 bit u1PartyLoadRequestIndex2 Bits Unsigned 1 bit u1PartyLoadRequestIndex3 Bits Unsigned 1 bit u1PartyLoadRequestIndex4 Bits Unsigned 1 bit u1PartyLoadRequestIndex5 Bits Unsigned 1 bit"},{"location":"file-formats/database-format/wdb-field-names/#crystal-wdb-files","title":"crystal wdb files","text":"<ul> <li>crystal_fang.wdb</li> <li>crystal_hope.wdb</li> <li>crystal_lightning.wdb</li> <li>crystal_sazh.wdb</li> <li>crystal_snow.wdb</li> <li>crystal_vanille.wdb</li> </ul> Field Type Description uCPCost UInt32 uint32 value sAbilityID UInt32 relative offset in !!string section u4Role Bits Unsigned 4 bits u4CrystalStage Bits Unsigned 4 bits u8NodeType Bits Unsigned 8 bits u16NodeVal Bits Unsigned 16 bits"},{"location":"file-formats/database-format/wdb-field-names/#emotion_voicewdb","title":"emotion_voice.wdb","text":"Field Type Description u4RandomMax0 Bits Unsigned 4 bits u4RandomMax1 Bits Unsigned 4 bits u4RandomMax2 Bits Unsigned 4 bits u4RandomMax3 Bits Unsigned 4 bits u4RandomMax4 Bits Unsigned 4 bits u4RandomMax5 Bits Unsigned 4 bits u4RandomMax6 Bits Unsigned 4 bits u4RandomMax7 Bits Unsigned 4 bits u4RandomMax8 Bits Unsigned 4 bits u4RandomMax9 Bits Unsigned 4 bits u4AIRandomMax0 Bits Unsigned 4 bits u4AIRandomMax1 Bits Unsigned 4 bits u4AIRandomMax2 Bits Unsigned 4 bits u4AIRandomMax3 Bits Unsigned 4 bits u4AIRandomMax4 Bits Unsigned 4 bits u4AIRandomMax5 Bits Unsigned 4 bits u4AIRandomMax6 Bits Unsigned 4 bits u4AIRandomMax7 Bits Unsigned 4 bits u4AIRandomMax8 Bits Unsigned 4 bits u4AIRandomMax9 Bits Unsigned 4 bits"},{"location":"file-formats/database-format/wdb-field-names/#event_flagwdb","title":"event_flag.wdb","text":"Field Type Description iFlagIndex Int32 int32 value"},{"location":"file-formats/database-format/wdb-field-names/#fieldcamerawdb","title":"fieldcamera.wdb","text":"Field Type Description fFreeCameraRotationInterporationSpeedAdjustMode Float32 float value fFreeCameraRunStopMoveSpeed Float32 float value fFreeCameraAimRotationSpeedAtMoving Float32 float value fFreeCameraCompositionAimRate Float32 float value fFreeCameraAimHeight Float32 float value fFreeCameraAimHeightDuringWatchingFoot Float32 float value fCollisionSolveInterporationRateX Float32 float value fCollisionSolveInterporationRateY Float32 float value fCollisionSolveInterporationRateZ Float32 float value fInterporationRateAtForward Float32 float value fInterporationRateAtBack Float32 float value fInterporationRateAtForwardRunning Float32 float value fInterporationRateAtBackRunning Float32 float value fFreeCameraYAxisRotateAttenuationRateRunning Float32 float value fFreeCameraXAxisRotateAttenuationRateRunning Float32 float value fFreeCameraYAxisRotateAttenuationRate Float32 float value fFreeCameraXAxisRotateAttenuationRate Float32 float value fFreeCameraYaxisRotationSpeedRate Float32 float value fFreeCameraYaxisRotationSpeedRateAtIdle Float32 float value fFreeCameraXaxisRotationSpeedRate Float32 float value fFreeCameraXaxisRotationSpeedRateAtIdle Float32 float value fFreeCameraFollowingSpeedRate Float32 float value fCharacterChangingAlphaTime Float32 float value fRailCameraFollowingDistance Float32 float value fRailCameraFollowingRate Float32 float value fRailCameraYOffset Float32 float value fCameraNearZDefault Float32 float value fCameraFarZDefault Float32 float value fAspectRateDefault Float32 float value f9FreeCameraEyeHeight Bits signed 9 bits parsed as float value f10EyeAimDistanceAtMoving Bits signed 10 bits parsed as float value f10EyeAimDistanceDuringWatchingFoot Bits signed 10 bits parsed as float value f10EyeAimDistanceAtStop Bits signed 10 bits parsed as float value f14FreeCameraeFov Bits signed 14 bits parsed as float value f14CompositAimChangeAngleThrreshold Bits signed 14 bits parsed as float value f16DelayTimeBetweenPlayerAndCamera Bits signed 16 bits parsed as float value f18CharacterChangingAlphaDistanceMax Bits signed 18 bits parsed as float value f14FreeCameraXaxisRotationLimitAngle Bits signed 14 bits parsed as float value f18CharacterChangingAlphaDistanceMax_PC Bits signed 18 bits parsed as float value f14FreeRailSwitchAngle Bits signed 14 bits parsed as float value f18CharacterChangingAlphaDistanceMin Bits signed 18 bits parsed as float value f14CameraRadius Bits signed 14 bits parsed as float value f18CharacterChangingAlphaDistanceMin_PC Bits signed 18 bits parsed as float value f14FreeCameraPullupLimitAngle Bits signed 14 bits parsed as float value f19CameraInterporationTimeDefault Bits signed 19 bits parsed as float value f18CharacterChangingAlphaLosen Bits signed 18 bits parsed as float value f18FreeCameraPullupTimeAtJump Bits signed 18 bits parsed as float value"},{"location":"file-formats/database-format/wdb-field-names/#itemwdb","title":"item.wdb","text":"Field Type Description sItemNameStringId UInt32 relative offset in !!string section sHelpStringId UInt32 relative offset in !!string section sScriptId UInt32 relative offset in !!string section uPurchasePrice UInt32 uint32 value uSellPrice UInt32 uint32 value u8MenuIcon Bits Unsigned 8 bits u8ItemCategory Bits Unsigned 8 bits i16ScriptArg0 Bits Signed 16 bits i16ScriptArg1 Bits Signed 16 bits u1IsUseBattleMenu Bits Unsigned 1 bit u1IsUseMenu Bits Unsigned 1 bit u1IsDisposable Bits Unsigned 1 bit u1IsSellable Bits Unsigned 1 bit u5Rank Bits Unsigned 5 bits u6Genre Bits Unsigned 6 bits u1IsIgnoreGenre Bits Unsigned 1 bit u16SortAllByKCategory Bits Unsigned 16 bits u16SortCategoryByCategory Bits Unsigned 16 bits u16Experience Bits Unsigned 16 bits i8Mulitplier Bits Signed 8 bits u1IsUseItemChange Bits Unsigned 1 bit"},{"location":"file-formats/database-format/wdb-field-names/#item_consumewdb","title":"item_consume.wdb","text":"Field Type Description sAbilityId UInt32 relative offset in !!string section sLearnAbilityId UInt32 relative offset in !!string section u1IsUseRemodel Bits Unsigned 1 bit u1IsUseGrow Bits Unsigned 1 bit u16ConsumeAP Bits Unsigned 16 bits"},{"location":"file-formats/database-format/wdb-field-names/#item_weaponwdb","title":"item_weapon.wdb","text":"<p>N.B: Only reversed partially</p> Field Type Description sWeaponCharaSpecId UInt32 relative offset in !!string section sWeaponCharaSpecId2 UInt32 relative offset in !!string section sAbility UInt32 relative offset in !!string section sAbility2 UInt32 relative offset in !!string section sAbility3 UInt32 relative offset in !!string section sUpgradeAbility UInt32 relative offset in !!string section sAbilityHelpStringId UInt32 relative offset in !!string section uBuyPriceIncrement UInt32 uint32 value uSellPriceIncrement UInt32 uint32 value sDisasItem1 UInt32 relative offset in !!string section sDisasItem2 UInt32 relative offset in !!string section sDisasItem3 UInt32 relative offset in !!string section sDisasItem4 UInt32 relative offset in !!string section sDisasItem5 UInt32 relative offset in !!string section u8UnkVal1 Bits Unsigned 8 bits u8UnkVal2 Bits Unsigned 8 bits u2UnkVal3 Bits Unsigned 2 bits u7MaxLvl Bits Unsigned 7 bits u4UnkVal4 Bits Unsigned 4 bits u1UnkBool1 Bits Unsigned 1 bit u1UnkBool2 Bits Unsigned 1 bit u1UnkBool3 Bits Unsigned 1 bit i10ExpRate1 Bits Signed 10 bits i10ExpRate2 Bits Signed 10 bits i10ExpRate3 Bits Signed 10 bits u1UnkBool4 Bits Unsigned 1 bit u1UnkBool5 Bits Unsigned 1 bit u8StatusModKind0 Bits Unsigned 8 bits u8StatusModKind1 Bits Unsigned 8 bits u4StatusModType Bits Unsigned 4 bits u1UnkBool6 Bits Unsigned 1 bit u1UnkBool7 Bits Unsigned 1 bit u16UnkVal5 Bits Unsigned 16 bits i16StatusModVal Bits Signed 16 bits u16UnkVal6 Bits Unsigned 16 bits i16AttackModVal Bits Signed 16 bits u16UnkVal7 Bits Unsigned 16 bits i16MagicModVal Bits Signed 16 bits i16AtbModVal Bits Signed 16 bits u16UnkVal8 Bits Unsigned 16 bits u16UnkVal9 Bits Unsigned 16 bits u16UnkVal10 Bits Unsigned 16 bits u14DisasRate1 Bits Unsigned 14 bits u7UnkVal11 Bits Unsigned 7 bits u7UnkVal12 Bits Unsigned 7 bits u14DisasRate2 Bits Unsigned 14 bits u14DisasRate3 Bits Unsigned 14 bits u7UnkVal13 Bits Unsigned 7 bits u14DisasRate4 Bits Unsigned 14 bits u7UnkVal14 Bits Unsigned 7 bits u14DisasRate5 Bits Unsigned 14 bits"},{"location":"file-formats/database-format/wdb-field-names/#mapsetwdb","title":"mapset.wdb","text":"<p>N.B: also applies to mapset_loc###.wdb files present inside the db\\bg folder</p> Field Type Description iMemorySizeLimit Int32 int32 value iVideoMemoryLimit Int32 int32 value sScriptIdOnLoaded UInt32 relative offset in !!string section sMapNameResourceId UInt32 relative offset in !!string section sBattleFreeSpaceResourceId UInt32 relative offset in !!string section i20LoadingTime Bits Signed 20 bits i11LocationNum Bits Signed 11 bits i16FieldSceneDataNum Bits Signed 16 bits i16BattleSceneDataNum Bits Signed 16 bits i12PartyPositionMarkerGroup Bits Signed 12 bits i10FieldMapNum0 Bits Signed 10 bits i10FieldMapNum1 Bits Signed 10 bits i10FieldMapNum2 Bits Signed 10 bits i10FieldMapNum3 Bits Signed 10 bits i10FieldMapNum4 Bits Signed 10 bits i10FieldMapNum5 Bits Signed 10 bits i10FieldMapNum6 Bits Signed 10 bits i10FieldMapNum7 Bits Signed 10 bits i10FieldMapNum8 Bits Signed 10 bits i10FieldMapNum9 Bits Signed 10 bits i10FieldMapNum10 Bits Signed 10 bits i10FieldMapNum11 Bits Signed 10 bits i10FieldMapNum12 Bits Signed 10 bits i10FieldMapNum13 Bits Signed 10 bits i10FieldMapNum14 Bits Signed 10 bits i10FieldMapNum15 Bits Signed 10 bits i10FieldMapNum16 Bits Signed 10 bits i10FieldMapNum17 Bits Signed 10 bits i10FieldMapNum18 Bits Signed 10 bits i10FieldMapNum19 Bits Signed 10 bits i10VfxMapNum0 Bits Signed 10 bits i10VfxMapNum1 Bits Signed 10 bits i10VfxMapNum2 Bits Signed 10 bits i10VfxMapNum3 Bits Signed 10 bits i10BattleMapNum0 Bits Signed 10 bits i10BattleMapNum1 Bits Signed 10 bits i10BattleMapNum2 Bits Signed 10 bits i10BattleMapNum3 Bits Signed 10 bits i10BattleMapNum4 Bits Signed 10 bits i10BattleMapNum5 Bits Signed 10 bits"},{"location":"file-formats/database-format/wdb-field-names/#missionwdb","title":"mission.wdb","text":"Field Type Description sMissionTitleStringId UInt32 relative offset in !!string section sMissionExplanationStringId UInt32 relative offset in !!string section sMissionTargetStringId UInt32 relative offset in !!string section sMissionPosStringId UInt32 relative offset in !!string section sMissionMarkPosStringId UInt32 relative offset in !!string section sPosMarkerName UInt32 relative offset in !!string section sTreasureBoxId0 UInt32 relative offset in !!string section sTreasureBoxId1 UInt32 relative offset in !!string section sTreasureBoxId2 UInt32 relative offset in !!string section sCharasetId0 UInt32 relative offset in !!string section sCharasetId1 UInt32 relative offset in !!string section sCharasetId2 UInt32 relative offset in !!string section sCharasetId3 UInt32 relative offset in !!string section sCharaspecId0 UInt32 relative offset in !!string section sCharaspecId1 UInt32 relative offset in !!string section sCharaspecId2 UInt32 relative offset in !!string section sCharaspecId3 UInt32 relative offset in !!string section sCharaspecId4 UInt32 relative offset in !!string section sAreaActivationName UInt32 relative offset in !!string section iBattleSceneNum Int32 int32 value u8ZoneNum Bits Unsigned 8 bits u6IndexInMapMenu Bits Unsigned 6 bits u4Class Bits Unsigned 4 bits u6MissionPictureId Bits Unsigned 6 bits u1UnkBool1 Bits Unsigned 1 bit u1UnkBool2 Bits Unsigned 1 bit u1UnkBool3 Bits Unsigned 1 bit"},{"location":"file-formats/database-format/wdb-field-names/#monster_bookwdb","title":"monster_book.wdb","text":"Field Type Description u6MbookId Bits Unsigned 6 bits u9SortId Bits Unsigned 9 bits u9PictureId Bits Unsigned 9 bits u1UnkBool Bits Unsigned 1 bit"},{"location":"file-formats/database-format/wdb-field-names/#moviewdb","title":"movie.wdb","text":"Field Type Description sZone0 UInt32 relative offset in !!string section sZone1 UInt32 relative offset in !!string section"},{"location":"file-formats/database-format/wdb-field-names/#movie_itemswin32wdb","title":"movie_items.win32.wdb","text":"<p>N.B: also applies to movie_items.win32_us.wdb file</p> Field Type Description sZoneName UInt32 relative offset in !!string section uCinemaSize UInt32 uint32 value uReserved UInt32 uint32 value uCinemaStart UInt32 uint32 value <p>The ps3 version of this file uses the uReserved and uCinemaStart fields together as an UInt64 value.</p>"},{"location":"file-formats/database-format/wdb-field-names/#partywdb","title":"party.wdb","text":"Field Type Description sCharaSpecId UInt32 relative offset in !!string section sSubCharaSpecId0 UInt32 relative offset in !!string section sSubCharaSpecId1 UInt32 relative offset in !!string section sSubCharaSpecId2 UInt32 relative offset in !!string section sSubCharaSpecId3 UInt32 relative offset in !!string section sSubCharaSpecId4 UInt32 relative offset in !!string section sSubCharaSpecId5 UInt32 relative offset in !!string section sSubCharaSpecId6 UInt32 relative offset in !!string section sSubCharaSpecId7 UInt32 relative offset in !!string section sSubCharaSpecId8 UInt32 relative offset in !!string section sRideObjectCharaSpecId0 UInt32 relative offset in !!string section sRideObjectCharaSpecId1 UInt32 relative offset in !!string section sFieldFreeCameraSettingResourceId UInt32 relative offset in !!string section sIconResourceId UInt32 relative offset in !!string section sScriptIdOnPartyCharaAIStarted UInt32 relative offset in !!string section sScriptIdOnIdle UInt32 relative offset in !!string section sBattleCharaSpecId UInt32 relative offset in !!string section sSummonId UInt32 relative offset in !!string section fStopDistance Float32 float value fWalkDistance Float32 float value fPlayerRestraint Float32 float value u1IsEnableUserControl Bits Unsigned 1 bit u5OrderNumForCrest Bits Unsigned 5 bits u8OrderNumForTool Bits Unsigned 8 bits u7Expresspower Bits Unsigned 7 bits u7Willpower Bits Unsigned 7 bits u7Brightness Bits Unsigned 7 bits u7Cognition Bits Unsigned 7 bits"},{"location":"file-formats/database-format/wdb-field-names/#savepointwdb","title":"savepoint.wdb","text":"Field Type Description sLoadScriptId UInt32 relative offset in !!string section i17PartyPositionMarkerGroupIndex Bits Signed 17 bits u15SaveIconBackgroundImageIndex Bits Unsigned 15 bits i16SaveIconOverrideImageIndex Bits Signed 16 bits"},{"location":"file-formats/database-format/wdb-field-names/#scriptwdb","title":"script.wdb","text":"<p>N.B: also applies to script#####.wdb files present inside the db\\script folder</p> Field Type Description sClassName UInt32 relative offset in !!string section sMethodName UInt32 relative offset in !!string section iAdditionalArgCount Int32 int32 value iAdditionalArg0 Int32 int32 value iAdditionalArg1 Int32 int32 value iAdditionalArg2 Int32 int32 value iAdditionalArg3 Int32 int32 value iAdditionalStringArgCount Int32 int32 value sAdditionalStringArg0 UInt32 relative offset in !!string section sAdditionalStringArg1 UInt32 relative offset in !!string section sAdditionalStringArg2 UInt32 relative offset in !!string section"},{"location":"file-formats/database-format/wdb-field-names/#shopwdb","title":"shop.wdb","text":"Field Type Description sFlagItemId UInt32 relative offset in !!string section sUnlockEventID UInt32 relative offset in !!string section sShopNameLabel UInt32 relative offset in !!string section sSignId UInt32 relative offset in !!string section sExplanationLabel UInt32 relative offset in !!string section sUnkStringVal1 UInt32 relative offset in !!string section sItemLabel1 UInt32 relative offset in !!string section sItemLabel2 UInt32 relative offset in !!string section sItemLabel3 UInt32 relative offset in !!string section sItemLabel4 UInt32 relative offset in !!string section sItemLabel5 UInt32 relative offset in !!string section sItemLabel6 UInt32 relative offset in !!string section sItemLabel7 UInt32 relative offset in !!string section sItemLabel8 UInt32 relative offset in !!string section sItemLabel9 UInt32 relative offset in !!string section sItemLabel10 UInt32 relative offset in !!string section sItemLabel11 UInt32 relative offset in !!string section sItemLabel12 UInt32 relative offset in !!string section sItemLabel13 UInt32 relative offset in !!string section sItemLabel14 UInt32 relative offset in !!string section sItemLabel15 UInt32 relative offset in !!string section sItemLabel16 UInt32 relative offset in !!string section sItemLabel17 UInt32 relative offset in !!string section sItemLabel18 UInt32 relative offset in !!string section sItemLabel19 UInt32 relative offset in !!string section sItemLabel20 UInt32 relative offset in !!string section sItemLabel21 UInt32 relative offset in !!string section sItemLabel22 UInt32 relative offset in !!string section sItemLabel23 UInt32 relative offset in !!string section sItemLabel24 UInt32 relative offset in !!string section sItemLabel25 UInt32 relative offset in !!string section sItemLabel26 UInt32 relative offset in !!string section sItemLabel27 UInt32 relative offset in !!string section sItemLabel28 UInt32 relative offset in !!string section sItemLabel29 UInt32 relative offset in !!string section sItemLabel30 UInt32 relative offset in !!string section sItemLabel31 UInt32 relative offset in !!string section sItemLabel32 UInt32 relative offset in !!string section u4Version Bits Unsigned 4 bits u13ZoneNum Bits Unsigned 13 bits"},{"location":"file-formats/database-format/wdb-field-names/#sound_fileid_dicwdb","title":"sound_fileid_dic.wdb","text":"<p>N.B: also applies to sound_fileid_dic_us.wdb file</p> Field Type Description i31FileId Bits Signed 31 bits u1IsStream Bits Unsigned 1 bit"},{"location":"file-formats/database-format/wdb-field-names/#sound_filename_dicwdb","title":"sound_filename_dic.wdb","text":"<p>N.B: also applies to sound_filename_dic_us.wdb</p> Field Type Description sResourceName UInt32 relative offset in !!string section"},{"location":"file-formats/database-format/wdb-field-names/#special_abilitywdb","title":"special_ability.wdb","text":"Field Type Description sAbility UInt32 relative offset in !!string section u6Genre Bits Unsigned 6 bits u3Count Bits Unsigned 3 bits"},{"location":"file-formats/database-format/wdb-field-names/#successionwdb","title":"succession.wdb","text":"Field Type Description u1RideOffChocobo Bits Unsigned 1 bit i2NaviMapMode Bits Signed 2 bits i2PartyCharaAIMode Bits Signed 2 bits i2UserControlMode Bits Signed 2 bits i9ZoneStateChangeTriggerOnEnter Bits Signed 9 bits i9ZoneStateWait Bits Signed 9 bits u1EventSkipAble Bits Unsigned 1 bit u1FieldCommonObjectHide Bits Unsigned 1 bit u1EnablePause Bits Unsigned 1 bit u1SuspendFieldObject Bits Unsigned 1 bit u1DisableTalk Bits Unsigned 1 bit i9ZoneStateChangeTriggerOnExit Bits Signed 9 bits i9ZoneStateExit Bits Signed 9 bits u13CameraInterporationTimeOnEnter Bits Unsigned 13 bits u1FieldActiveFlag Bits Unsigned 1 bit u13CameraInterporationTimeOnExit Bits Unsigned 13 bits u1HighModelEventFlag Bits Unsigned 1 bit u1ApplyFieldCameraByPlayerMatrix Bits Unsigned 1 bit"},{"location":"file-formats/database-format/wdb-field-names/#treasureboxwdb","title":"treasurebox.wdb","text":"Field Type Description sItemResourceId UInt32 relative offset in !!string section iItemCount Int32 int32 value sNextTreasureBoxResourceId UInt32 relative offset in !!string section"},{"location":"file-formats/database-format/wdb-field-names/#whitewdb","title":"white.wdb","text":"Field Type Description fVal Float32 float value iVal1 Int32 int32 value sResourceName UInt32 relative offset in !!string section fPosX Float32 float value fPosY Float32 float value fPosZ Float32 float value"},{"location":"file-formats/database-format/wdb-field-names/#zonelistwdb","title":"zonelist.wdb","text":"Field Type Description fMovieTotalTimeSec Float32 float value iImageSize Int32 int32 value u8RefZoneNum0 Bits Unsigned 8 bits u8RefZoneNum1 Bits Unsigned 8 bits u8RefZoneNum2 Bits Unsigned 8 bits u8RefZoneNum3 Bits Unsigned 8 bits u8RefZoneNum4 Bits Unsigned 8 bits u8RefZoneNum5 Bits Unsigned 8 bits u8RefZoneNum6 Bits Unsigned 8 bits u8RefZoneNum7 Bits Unsigned 8 bits u8RefZoneNum8 Bits Unsigned 8 bits u8RefZoneNum9 Bits Unsigned 8 bits u8RefZoneNum10 Bits Unsigned 8 bits u1OnDisk0 Bits Unsigned 1 bit u1OnDisk1 Bits Unsigned 1 bit u1OnDisk2 Bits Unsigned 1 bit u1OnDisk3 Bits Unsigned 1 bit u1On1stLayerPS3 Bits Unsigned 1 bit u1On2ndtLayerPS3 Bits Unsigned 1 bit"},{"location":"file-formats/database-format/wdb-field-names/#zwdb","title":"z###.wdb","text":"<p>N.B: applies to the wdb files present inside each zone\\z### folders</p> Field Type Description iBaseNum Int32 int32 value sName0 UInt32 relative offset in !!string section sName1 UInt32 relative offset in !!string section"},{"location":"file-formats/database-format/wdb/","title":"WDB","text":"<p>This is the main format used for all database files from the trilogy. the format structure is similar to the WPD Pack files with some minor differences.</p>"},{"location":"file-formats/database-format/wdb/#section-header","title":"Section Header","text":"<p>N.B.: The below sections are all in Big Endian.</p>"},{"location":"file-formats/database-format/wdb/#wdb-header-section","title":"WDB Header section","text":"Offset Size Type Description 0x0 0x4 String FourCC, Always WPD (\"White Packed Data\") 0x4 0x4 UInt32 Record count 0x8 0x8 UInt32[2] Reserved, always null"},{"location":"file-formats/database-format/wdb/#wdb-record-info-section","title":"WDB Record info section","text":"Offset Size Type Description 0x10 0x10 String Record Name, null bytes are added if string length is less than 0x10 0x20 0x4 UInt32 Record's data start offset 0x24 0x4 UInt32 Record's data size 0x28 0x8 UInt32[2] Reserved, always null"},{"location":"file-formats/database-format/wdb/#database-structure","title":"Database Structure","text":"<p>Each WDB file contains these common sections/records at the starting portion of the file. </p> <ul> <li> <p>!!string</p> </li> <li> <p>!!strtypelist</p> </li> <li> <p>!!typelist</p> </li> <li> <p>!!version</p> </li> </ul> <p>The structure underwent few changes in XIII-2 and LR where a section for the field names was introduced. this section gives information on how to parse each record's data and this being completely absent in XIII-1's wdb files, made parsing the wdb files from that game a bit difficult. the !!strtypelist section got changed to !!strtypelistb, while the !!typelist section will be present only when the !!strtypelist section is present.</p> <p>These following new sections were introduced:</p> <ul> <li> <p>!!sheetname</p> </li> <li> <p>!structitem</p> </li> <li> <p>!structitemnum</p> </li> <li> <p>!!strArray</p> </li> <li> <p>!!strArrayInfo </p> </li> <li> <p>!!strArrayList</p> </li> </ul> <p>Do note that the !!strArray, !!strArrayInfo and the !!strArrayList are only present in some of the WDB files. whenever there is a 4byte field, assume that the byte order is in Big Endian.</p>"},{"location":"file-formats/database-format/wdb/#string","title":"!!string","text":"<p>This section contains strings (each terminated by a null value), used by each record stored in the WDB file. each record would contain one or more fields with a relative offset in this section. sometimes a record's string offset would point to a null terminator value in this section and this would indicate that the particular field in that record has no string.</p>"},{"location":"file-formats/database-format/wdb/#strtypelist","title":"!!strtypelist","text":"<p>This section contains specific values that indicate how each 4bytes field of a record's data is supposed to be parsed. </p>"},{"location":"file-formats/database-format/wdb/#strtypelist-structure","title":"!!strtypelist structure","text":"<p>Each 4bytes field (UInt32) value in this section would contain these following parsing values. in the !!strtypelistb section (introduced from XIII-2 and LR), instead of using 4bytes, a single byte is used for storing the values.</p> Value Description Comments 0 Bitpacked data denotes more than one field or a single signed integer type field 1 Floating point type field denotes a single field with a floating point value 2 !!string offset type field denotes a single field with a UInt32 relative offset in the !!string section 3 UInt32 type field denotes a single field with a UInt32 or Int32 value <p>Do note that one of the ps3 version's WDB file, uses the same value <code>3</code> to also denote a 64bit unsigned integer.  </p>"},{"location":"file-formats/database-format/wdb/#typelist","title":"!!typelist","text":"<p>This section is somewhat identical to the strtypelist section and contains values that indicates the data type for every 4bytes of a record's data. this section will not be present, if the file has a strtypelistb section (introduced from XIII-2 and LR). </p> <p>If there are multiple fields in a record's bitpacked data, the typelist section will contain more values and its size will be larger than the strtypelist section. if there are no multiple fields in the bitpacked data or if there is no bitpacked type data at all, then the typelist section will be identical to the strtypelist section. do note that the order in which these values are present in this typelist section can be random especially when there are multiple fields inside a bitpacked data. </p>"},{"location":"file-formats/database-format/wdb/#typelist-structure","title":"!!typelist structure","text":"<p>Each 4bytes field (UInt32) value in this section would contain these following values:</p> Value Description Comments 0 Signed integer value field denotes a single field with a signed integer value 1 Floating point value field denotes a single field with a floating point value 2 !!string offset type field denotes a single field with an UInt32 offset in the !!string section 3 Unsigned integer type field denotes a single field with an unsigned integer value <p>The type <code>1</code> value, would denote a signed integer value for fields that are inside a bitpacked data. a possible theory as to why these types of fields share the same <code>1</code> value as the floating point type fields could be due to the game using the values from these fields as floats at runtime.</p>"},{"location":"file-formats/database-format/wdb/#structure-notes","title":"Structure notes","text":"<p>This section can also be used to roughly determine how many fields are present for each records in the wdb file. </p> <p>For example, consider a scenario where the values in the strtypelist are <code>0</code>, <code>2</code>, <code>2</code>, and <code>3</code>, while the values in the typelist section are <code>2</code>, <code>2</code>, <code>3</code>, <code>3</code>, <code>3</code>, <code>3</code>, and <code>3</code> respectively. </p> <p>The first value <code>0</code> in the strtypelist section indicates a bitpacked data and if you look among the values in the typelist section, you would see there are five <code>3</code> values. </p> <p>We know that this value indicates an unsigned integer type field and so we would have to assume that there are five unsigned integer type fields for the records. since there is already one unsigned integer type field being denoted by the strtypelist section, we can easily mark four bytes among the record's data. now there are still four more fields remaining, and so we have to consider that they are all inside the bitpacked data. the remaining <code>2</code> would indicate !!string offset type fields and this way we have established how many fields are present for each record.</p> <p>In a different scenario, if the strtypelist section is similar to the typelist section and both of them contain a value <code>0</code>, then you have to consider the <code>0</code> value in the strtypelist section to denote a single signed integer type field.</p>"},{"location":"file-formats/database-format/wdb/#version","title":"!!version","text":"<p>This section contains a single UInt32 value that potentially holds some sort of a version number or id. </p>"},{"location":"file-formats/database-format/wdb/#sheetname","title":"!!sheetname","text":"<p>This section contain a string (null terminated), that gives a brief idea about the type of records that are stored in the WDB file.</p>"},{"location":"file-formats/database-format/wdb/#structitem","title":"!structitem","text":"<p>The section contains one or more strings (each null terminated) which are all the field names for each record's data, stored in the WDB file. refer to this page for more information.</p>"},{"location":"file-formats/database-format/wdb/#structitemnum","title":"!structitemnum","text":"<p>This section contains a UInt32 value that indicates the total number of fields used in the WDB file. you can use this value to determine the number of field names, present in the !structitem section.</p>"},{"location":"file-formats/database-format/wdb/#strarray","title":"!!strArray","text":"<p>This section contains value arrays that are bitpacked offset values to strings present in the !!string section. the number of bitpacked <code>s#</code> fields would indicate the number of arrays present in this section. the !!strArrayInfo section would contain the necessary information on how to parse each value in this section while the !!strArrayList contains the relative start offset of each array present in this section. </p> <p>To make it easy to understand, here is a small example. Let's say there is a value <code>285212676</code> in the !!strArray section. the string offsets per value and the bits per value, given in the !!strArrayInfo section is <code>2</code> and <code>15</code> respectively. </p> <ul> <li> <p>Get the binary representation of <code>285212676</code>. it would be <code>00010001000000000000000000000100</code>.</p> </li> <li> <p>Since the string offsets per value is <code>2</code>, there are 2 string offset values stored in this binary value. let's split the binary value according to the bits per value number which would be <code>15</code>. we must begin splitting the binary value from the last value onwards. </p> </li> <li> <p>After splitting, we will get <code>000000000000100</code> and <code>010001000000000</code>. the remaining binary numbers can be discarded.</p> </li> <li> <p><code>000000000000100</code> and <code>010001000000000</code> in numerical forms would be <code>4</code> and <code>8704</code> respectively. these are our <code>2</code> offsets in the !!string section.</p> </li> <li> <p>Consider the two string values present in those <code>2</code> offsets as items in the current array. their indexes would be <code>1</code> and <code>0</code> and these index values would be what a record's <code>s#</code> field value would indicate.</p> </li> <li> <p>The next value's two indexes in the current array would be <code>3</code> and <code>2</code>. the index values have a right to left order.</p> </li> </ul>"},{"location":"file-formats/database-format/wdb/#strarrayinfo","title":"!!strArrayInfo","text":"<p>This section is always 4bytes in size and contains values that determine the general structure of each value present in the !!strArray section.</p>"},{"location":"file-formats/database-format/wdb/#strarrayinfo-structure","title":"!!strArrayInfo structure","text":"Offset Size Type Description 0x0 0x1 UInt8 Reserved, always null 0x1 0x1 UInt8 Reserved, always null 0x2 0x1 UInt8 Number of string offsets per value in !!strArray 0x3 0x1 UInt8 Number of bits per value in !!strArray"},{"location":"file-formats/database-format/wdb/#strarraylist","title":"!!strArrayList","text":"<p>This section contains the relative start offsets of each array present in the !!strArray section.</p>"},{"location":"file-formats/model-texture-formats/imgb/","title":"IMGB","text":"<p>These files contain packed texture/image data of various possible formats. They can also have UV/color data, as seen in the ps3 versions of the games.</p> <p>They are always paired with another file, which gives the offsets and specs of the embedded textures/images:</p> Paired file Information location TRB SEDBtxb sections, in particual the GTEX chunks contained in these"},{"location":"file-formats/model-texture-formats/trb/","title":"TRB","text":"<p>The TRB files are containers with various sections used to define the model (textures, shaders, skeleton, geometry etc). A binary template for this file format can be found here.</p>"},{"location":"file-formats/model-texture-formats/trb/#sections","title":"Sections","text":""},{"location":"file-formats/model-texture-formats/trb/#section-header","title":"Section Header","text":"<p>The following header is for all the different sections.</p> Offset Size Type Description 0x0 0x4 UInt32 FourCC. Always 0x53454442 (SEDB, \"Section Data Binary\") 0x4 0x4 UInt32 Resource FourCC, gives the section type 0x8 0x4 UInt32 Version 0xC 0x2 UInt16 (BE) Resource type 2, seems to define a subtype 0xE 0x2 UInt16 Header size, gives the section data offset 0x10 0x4 UInt32 Section size, header included 0x14 0x1C UInt32[7] Reserved, always null"},{"location":"file-formats/model-texture-formats/trb/#section-types","title":"Section Types","text":""},{"location":"file-formats/model-texture-formats/trb/#sedbres","title":"SEDBRES","text":"<p>This section is used to define and encapsulate all the other ones. It contains information such as the sections count, offsets and other info. To avoid confusion, sections contained in this one will be called \"subsections\".</p> Offset Size Type Description 0x0 0x30 SectionHeader The header of this section 0x30 0x4 UInt32 File paths count, this should match the subsection count 0x34 0x4 UInt32 File paths offset, relative to the beginning of the first subsection 0x38 0x4 UInt32 Subsection count 0x3C 0x4 UInt32 FourCC. Always 0x627274 (brt, \"trb\" in LE) 0x40 0x10 x Subsection count Subsection Definition[Subsection count] Subsection offsets and lengths"},{"location":"file-formats/model-texture-formats/trb/#subsection-definition","title":"Subsection Definition","text":"Offset Size Type Description 0x0 0x4 UInt32 Subsection index, increments 1 by 1 0x4 0x4 UInt32 Subsection offset, relative to the beginning of the first subsection 0x8 0x4 UInt32 Subsection size 0xC 0x4 UInt32 Subsection type 2 (not sure)"},{"location":"file-formats/model-texture-formats/trb/#sedbtxb","title":"SEDBtxb","text":"<p>This section is used to define a single texture (so each texture used by the model will have an associated SEDBtxb section).</p> Offset Size Type Description 0x0 0x30 SectionHeader The header of this section 0x30 0x4 UInt32 GTEX Chunk offset ? 0x34 0xC UInt32[3] Reserved, always null GTEX Chunk Offset Variable GTEX GTEX Chunk <p>N.B.: The SEDBtxb section is 16 bytes aligned, some 0 padding is used to properly align if necessary.</p>"},{"location":"file-formats/model-texture-formats/trb/#gtex","title":"GTEX","text":"<p>N.B.: This chunk is in Big Endian.</p> Offset Size Type Description 0x0 0x4 UInt32 FourCC. Always 0x47544558 (GTEX), Game Texture? 0x4 0x1 UInt8 Version 0x5 0x1 UInt8 Unknown 0x6 0x1 UInt8 Texture format 0x7 0x1 UInt8 Mipmap Count 0x8 0x1 UInt8 Unknown (srgb flag or something ?) 0x9 0x1 UInt8 Texture type 0xA 0x2 UInt16 Width 0xC 0x2 UInt16 Height 0xE 0x2 UInt16 Depth 0x10 0x4 UInt32 Mipmap information offset (relative to the GTEX start) 0x14 0x4 UInt32 Reserved (always null) Mip Info Offset 0x8 x Mipmap Count Mipmap Specs[Mipmap Count] The mipmaps' information"},{"location":"file-formats/model-texture-formats/trb/#texture-format","title":"Texture Format","text":"Value Format 0x3 R8G8B8A8 (Can have Mips) 0x4 R8G8B8A8 (No Mips) 0x18 DXT1 0x19 DXT3 0x1A DXT5"},{"location":"file-formats/model-texture-formats/trb/#texture-type","title":"Texture Type","text":"Value Type Description 0x0 Classic A Single texture 0x1 Cubemap 6 textures with similar dimensions and mips 0x2 Stacked XIII-LR only, multiple textures with similar dimensions"},{"location":"file-formats/model-texture-formats/trb/#mipmap-specs","title":"Mipmap Specs","text":"<p>This struct defines the necessary information to extract the texture data from the associated IMGB file.</p> Offset Size Type Description 0x0 0x4 UInt32 Mip data offset (in the paired imgb file) 0x4 0x4 UInt32 Mip data size"},{"location":"file-formats/model-texture-formats/trb/#sedbshd","title":"SEDBshd","text":"Offset Size Type Description 0x0 0x30 SectionHeader The header of this section 0x30 Variable SHD SHD Chunk"},{"location":"file-formats/model-texture-formats/trb/#sedbmsst","title":"SEDBmsst","text":"<p>This section is used to define the necessary semantics in case of data spread into several TRBs. The attribute definition is similar to the ones in the STMS chunk. See m253/583 on ps3/win32 for examples.</p> Offset Size Type Description 0x0 0x30 SectionHeader The header of this section 0x30 Variable WPDContainer Beginning of a WPD Container"},{"location":"file-formats/model-texture-formats/trb/#wpd-container","title":"WPD Container","text":"Offset Size Type Description 0x0 0x4 UInt32 FourCC 0x4 0x4 UInt32 Record count 0x8 0x8 UInt32[2] Reserved, always null 0x10 0x20 WPDRecord[Record count] WPD record definitions 0x10 + 0x20 x Record count Variable Binary Data as per record definition"},{"location":"file-formats/model-texture-formats/trb/#wpd-record","title":"WPD Record","text":"Offset Size Type Description 0x0 0x10 String Name 0x10 0x04 UInt32 Byte offset from end of the record definition 0x14 0x04 Uint32 Length 0x18 0x08 String Data type"},{"location":"file-formats/model-texture-formats/trb/#msst-data","title":"MSST Data","text":"<p>Data as defined by the STMS Header.  Matches the data format in the calling trb file.</p> Offset Size Type Description 0x00 0x10 STMS Header Buffer Data Definition 0x10 [STMS Header]Attribute Count x 0x10 Attribute Info[Attribute count] Attribute properties to parse the buffer 0x10 + [STMS Header]Attribute Count x 0x10 [STMS Header]Entry Count x [STMS Header]Stride Variable Buffer"},{"location":"file-formats/model-texture-formats/trb/#sedbdepb","title":"SEDBdepb","text":"<p>This section is used to reference another trb file with the missing data to build the model, only used when the data is spread into several TRBs.</p> Offset Size Type Description 0x0 0x30 SectionHeader The header of this section 0x30 0x2 UInt16 Section count 0x32 0x2 Uint16 Model count (Typ. 1) 0x34 0x4 Uint16[2] Reserved, always null 0x38 0x28 x Section count Remote Section[Section count] Section data 0x38 + 0x28 x Section count 0x20 Model Reference[Model count] Linked model names"},{"location":"file-formats/model-texture-formats/trb/#remote-section-data","title":"Remote Section Data","text":"Offset Size Type Description 0x0 0x10 String Remote file name 0x10 0x4 String Remote section type 0x14 0x10 String Remote model (c_xxxx) 0x24 0x4 String Remote model type"},{"location":"file-formats/model-texture-formats/trb/#model-reference","title":"Model Reference","text":"Offset Size Type Description 0x0 0x10 String This model name 0x10 0x10 String Remote model name"},{"location":"file-formats/model-texture-formats/trb/#sedbwrb","title":"SEDBwrb","text":"<p>This section is used to define the geometry data (attributes, skinning information, submeshes etc).</p> Offset Size Type Description 0x0 0x30 SectionHeader The header of this section 0x30 Variable WRB WRB Chunk"},{"location":"file-formats/model-texture-formats/trb/#sedbskl","title":"SEDBSKL","text":"<p>This section is used to define the model's skeleton.</p> Offset Size Type Description 0x0 0x30 SectionHeader The header of this section 0x30 0x4 UInt32 Subsections count 0x34 0x4 UInt32 Name table offset 0x38 0x4 UInt32 Names count 0x3C 0x4 UInt32 FourCC. Always 0x736B6C (skl in LE) 0x40 Subsections count * 0x10 SKL Subsection Header[Subsections count] Subsections' headers Variable Variable SKL Subsections The actual subsections Name table offset Variable Stringz[names count] Name table, with the joint names, type names, subsection names etc"},{"location":"file-formats/model-texture-formats/trb/#skl-subsection-header","title":"SKL Subsection Header","text":"Offset Size Type Description 0x0 0x4 UInt32 Subsection name index (index in the name table, gives the purpose of the subsection) 0x4 0x4 UInt32 Subsection start offset (relative to the end of the subsection headers) 0x8 0x4 UInt32 Subsection end offset (relative to the end of the subsection headers) 0xC 0x4 UInt32 Unknown (always 1?)"},{"location":"file-formats/model-texture-formats/trb/#skl-subsection","title":"SKL Subsection","text":"<p>The subsections seen so far are the following:</p>"},{"location":"file-formats/model-texture-formats/trb/#hierarchy-data-subsection","title":"Hierarchy data subsection","text":"<p>This subsection has the necessary information to construct the skeleton (parenting, position, rotation etc). The number of joint entries is equal to the subsection size divided by 0xB0 (size of the joint structure). The joint structure is defined the following way:</p> Offset Size Type Description 0x0 0x4 UInt32 Name index (index in the name table) 0x4 0x4 UInt32 Type index (index in the name table) 0x8 0x4 UInt32 Unknown index (index in the name table, probably reserved) 0xC 0x4 Int32 Always -1, probably padding 0x10 0xC Float32[3] Joint location, in local space (i.e. relative to the parent joint) 0x1C 0x10 Float32[4] Joint rotation, in local space (i.e. relative to the parent joint). As a quaternion. 0x2C 0xC Float32[3] Joint scale, in local space (i.e. relative to the parent joint). Always (1,1,1) it seems. 0x38 0x4 Int32 Parent index (index in the joint hierarchy) 0x3C 0x4 Int32 Child 1 index (index in the joint hierarchy) 0x40 0x4 Int32 Child 2 index (index in the joint hierarchy) 0x44 0x4 UInt32 Joint hash or joint index (For FF XIII) 0x48 0x4 UInt32 Bitfield (assumption) of unknown purpose. Seen values: 0x2 (very common), 0x12 (XIII), 0x22 (LR garbs) 0x4C 0x4 UInt32 Group ID, referenced by animation files. 0x50 0x60 UInt32[24] Reserved, always null. <p>N.B. The child indices do not seem to be used within the game other than determining the load order of the bones.  Bones that are not  listed in a \u201cchild\u201d index are not created but the specific order of the child index does not seem to matter.  i.e. if each bone utilizes a single child index pointing to the next bone (0 -&gt; 1, 1 -&gt; 2, etc.) for the whole list, then it all still loads and works fine.  The only restriction is that a bone listed as a \u201cparent\u201d MUST be created before the parent index is used.  A parent or child index of -1 is not used.</p> <p>For the group ID, the purpose seems to vary between the games: In XIII the joint groups seemed to be fairly well defined as</p> <p>0 = Main 1 = Accessory/Clothing/Hair 2 = Body 3 = Head</p> <p>Whereas in XIII-2/LR it seems to split the skeleton into \"limbs\".</p>"},{"location":"file-formats/model-texture-formats/trb/#kinedriver-subsection","title":"KineDriver subsection","text":"<p>Research needed.</p>"},{"location":"file-formats/model-texture-formats/trb/#sedbelb","title":"SEDBelb","text":"<p>This section is used to define the \"sockets\", which are used as location to attach weapons, accessories etc.</p> Offset Size Type Description 0x0 0x30 SectionHeader The header of this section 0x30 0x4 UInt32 Socket count 0x34 0xC UInt32[3] Reserved, always null <p>Next are some structs (socket count of them) used to define the names, bone parenting and location info of the sockets. </p> Offset Size Type Description 0x0 0x4 UInt32 Parent bone name offset (relative to the beginning of the SEDBelb section) 0x4 0x4 UInt32 Socket name offset (relative to the beginning of the SEDBelb section) 0x8 0xC Float32[3] Socket location, in local space (i.e. relative to the parent bone) 0x14 0xC Float32[3] Reserved, always null. May be padding. <p>Next some euler angles (socket count of them), used to define the socket rotation.</p> Offset Size Type Description 0x0 0x4 Float32 X axis rotation (in radians) 0x4 0x4 Float32 Y axis rotation (in radians) 0x8 0x4 Float32 Z axis rotation (in radians) <p>Finally, a section where all the null-terminated strings referenced by the previous offsets are packed. Socket names and their bone parent names can be found here.</p>"},{"location":"file-formats/model-texture-formats/trb/#sedbphb","title":"SEDBPHB","text":""},{"location":"file-formats/model-texture-formats/trb/#chunks","title":"Chunks","text":"<p>Chunks are structures used to subdivide the above sections in several blocks of information. There are two chunk types : chunks and chunk containers. The latter are used to \"pack\" several chunks, which will be referred to as their \"children\".</p>"},{"location":"file-formats/model-texture-formats/trb/#chunks_1","title":"Chunks","text":""},{"location":"file-formats/model-texture-formats/trb/#chunk-header","title":"Chunk Header","text":"<p>The following header is for all the different chunks.</p> Offset Size Type Description 0x0 0x4 UInt32 FourCC, used to define the chunk 0x4 0x4 UInt32 Version 0x8 0x4 UInt32 Chunk Size (arbitrary, depending on the chunk it may be the size, size - 0xC, size - 0x4 etc) 0xC 0x4 UInt32 Next chunk offset (a 0 value means there's none)"},{"location":"file-formats/model-texture-formats/trb/#file","title":"FILE","text":"<p>This chunk contains the actual DX9 shader code and name. As of now the best way to disassemble/decompile the bytecode is to use the following PR build.</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x4 UInt32 Shader block size (starting from the checksum, see below) 0x14 0x4 UInt32 Shader name offset (relative to the chunk header's end) 0x18 0x4 UInt32 Shader block offset (relative to the chunk header's end) Shader name offset Variable Stringz Shader name Shader block offset 0x10 UInt8[16] MD5 checksum of the shader bytecode Shader block offset + 0x10 0x4 UInt32 Shader bytecode length Shader block offset + 0x14 0x4 UInt32 Unknown Shader block offset + 0x18 0x8 UInt32[2] Reserved (always null ?) Shader block offset + 0x20 Variable Bytecode DX9 shader bytecode"},{"location":"file-formats/model-texture-formats/trb/#vcap","title":"VCAP","text":"<p>The purpose of this chunk is currently unknown. It seems to always have the same size and content.</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x4 UInt32 Unknow (always 4095 ?) 0x14 0xC UInt32[3] Reserved ? (always null ?)"},{"location":"file-formats/model-texture-formats/trb/#pcap","title":"PCAP","text":"<p>The purpose of this chunk is currently unknown. It seems to always have the same size and content.</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x80 UInt32[32] Unknow (always the same values ?)"},{"location":"file-formats/model-texture-formats/trb/#pram","title":"PRAM","text":"<p>This chunk contains the shader parameter values and the samplers' data.</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x2 UInt16 Unknown 0x12 0x2 UInt16 Unknown 0x14 0x4 UInt32 Unknown 0x18 0x4 UInt32 Parameter count 0x1C 0x4 UInt32 The offset of a table containing the parameters' data offsets (relative to the chunk header's end) 0x20 0x4 UInt32 The offset of a table containing the parameter names' offsets (relative to the chunk header's end) 0x24 0x4 UInt32 Sampler count 0x24 0x4 UInt32 The offset of a table containing the samplers' data offsets (relative to the chunk header's end) 0x24 0x4 UInt32 The offset of a table containing the samplers' names' offsets (relative to the chunk header's end) Parameter data offset table offset parameter count x 0x4 UInt32[parameter count] Parameter data offset table Parameter name offset table offset parameter count x 0x4 UInt32[parameter count] Parameter names offset table Sampler data offset table offset sampler count x 0x4 UInt32[sampler count] Sampler data offset table Sampler name offset table offset sampler count x 0x4 UInt32[sampler count] Sampler names offset table <p>A parameter data entry has the following structure:</p> Offset Size Type Description 0x0 0x2 UInt16 Boolean, 1 if it's a pixel shader parameter, 0 otherwise. 0x2 0x4 UInt16 Data size, scalar if one, vec\u2154/4 otherwise. 0x4 0xC UInt32[3] Reserved, always null. 0x10 0x10 Float[4] Data, always 4 floats (extra components zeroed out if needed) <p>A sampler data entry has the following structure:</p> Offset Size Type Description 0x0 0x1 UInt8 Unknown (always 2 ?) 0x1 0x2 UInt8 Unknown 0x2 0x3 UInt8 String section size 0x3 0x4 UInt8 Unknown 0x4 0x1C UInt32[7] Unknown 0x20 Variable Stringz[Variable] String section (parsing logic tbd)"},{"location":"file-formats/model-texture-formats/trb/#mdlc-header","title":"MDLC Header","text":"Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x10 Char[16] Fixed size string 0x20 0x24 UInt32 Unknown 0x24 0x28 UInt32 MDL count 0x28 0x2C UInt32 Unknown (bitfield, byte field ? Seen values : 0x1000000 in XIII, 0x3000000 in other games) 0x2C 0x30 UInt32 Reserved (always null ?)"},{"location":"file-formats/model-texture-formats/trb/#mdl-header","title":"MDL Header","text":"Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x10 Char[16] Fixed size string, duplicate of the one in the NAME chunk above with a 16 char limit. 0x20 0x24 UInt32 Unknown 0x24 0x28 UInt32 MESH count 0x28 0x2C UInt32 Unknown (bitfield, byte field ? Different values, possibly be four byte fields with the 3<sup>rd</sup> and 4<sup>th</sup> bytes always being 0.  1<sup>st</sup> and 2<sup>nd</sup> can have different values. (more so in the environment trb)) 0x2C 0x30 UInt32 Reserved (always null ?)"},{"location":"file-formats/model-texture-formats/trb/#mesh-header","title":"MESH Header","text":"Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x1 UByte Unknown count 0x11 0x1 UByte PGRP Chunk Count 0x12 0x1 UByte STMS Chunk Count 0x13 0x1 UByte ENVD Chunk Count 0x14 0x4 UInt32 Shader index as loaded in memory ? 0x18 0x2 UInt16 Vertex count 0x1A 0x2 UInt16 Face count 0x1C 0x4 UInt32 Reserved (always null ?)"},{"location":"file-formats/model-texture-formats/trb/#name","title":"NAME","text":"<p>This chunk stores a string. As its name suggests it's used to store a name.</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 Variable Stringz The name stored in this chunk, either 0x10 or 0x20 padded"},{"location":"file-formats/model-texture-formats/trb/#str","title":"STR","text":"<p>This chunk stores a null terminated string. </p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x10 Stringz The string stored in this chunk."},{"location":"file-formats/model-texture-formats/trb/#stms","title":"STMS","text":"Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x10 STMS Header Buffer Data Definition 0x20 [STMS Header]Attribute Count x 0x10 Attribute Info[Attribute count] Attribute properties to parse the buffer 0x20 + [STMS Header]Attribute Count x 0x10 [STMS Header]Entry Count x [STMS Header]Stride Variable Buffer - May not be present if trb data is found in another file. See SEDBmsst"},{"location":"file-formats/model-texture-formats/trb/#stms-header","title":"STMS Header","text":"Offset Size Type Description 0x0 0x2 UInt16 -1 if data found in another trb, 0 otherwise (see ps3 m583 TRB, paired with m253) 0x2 0x2 UInt16 Attribute count 0x4 0x4 UInt32 Entry count 0x8 0x2 UInt16 MDL (6 bits) / MESH (5 bits) / STMS (5 bits) id 0xA 0x2 UInt16 Stride 0xC 0x2 UInt16 -1 if data found in another trb, offset in imgb otherwise if there is some (ps3) 0xE 0x1 UByte 1 if data in imgb, 0 if not 0xF 0x1 UByte Padding"},{"location":"file-formats/model-texture-formats/trb/#attribute-info","title":"Attribute Info","text":"Offset Size Type Description 0x0 0x4 UInt32 Offset (in the buffer) 0x4 0x4 UInt32 Data type 0x8 0x4 UInt32 Count 0xC 0x2 UInt16 Semantic 0xE 0x2 UInt16 Padding <p>N.B.: For the bone indices, these are not the absolute indices as defined in the SEDBSKL section. Instead, a bone map is made using the ENVD chunks and the indices refer to the bones defined in the latter.</p>"},{"location":"file-formats/model-texture-formats/trb/#data-type","title":"Data type","text":"Value Data type 0x0 UInt16 0x1 Float32 0x2 Float16 0x3 UByte 0x4 Int16 0x6 Byte"},{"location":"file-formats/model-texture-formats/trb/#semantic","title":"Semantic","text":"Value Semantic 0x0 Position 0x2 Normal 0x3 Color 0x4 Binormal 0x8 UV1 0x9 UV2 0xA UV3 0xB UV4 0xD Tangent 0xE Bone weight 0xF Bone index 0xFF Index <p>N.B: Color : while this can be used to color shade the model somewhat, it's used more for shadowing areas of the model independently.  For example, Hope's wrists as they come out of his gloves are darkened by using this.  4 byte values, in RGBx.  255 being full brightness/color and lower values darkening the specific color. The game always keeps the last value at 255., which is most likely the alpha channel.</p>"},{"location":"file-formats/model-texture-formats/trb/#mpr","title":"MPR","text":"<p>Purpose currently unknown. (PS3)</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x10 UInt32[4] Unknown data"},{"location":"file-formats/model-texture-formats/trb/#mdr","title":"MDR","text":"<p>Purpose currently unknown. (PS3)</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x10 UInt32[4] Unknown data"},{"location":"file-formats/model-texture-formats/trb/#envd","title":"ENVD","text":"<p>This chunk defines which vertices are affected by a given bone (referenced by its name) and by how much (weight). It is redundant since this info is already given by the STMS buffer, however the game uses the ENVD order as a bone map. </p> <p>For example if the first ENVD of a MESH chunk container references the bone \"larm\", then a 0 bone index in the STMS buffer will refer to \"larm\", whereas the 0 index in the skeleton would normally refer to the bone \"trans\". Therefore, when combined together, the ENVD chunks form a bone map, defining a skeleton subset that deforms the submesh.</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x2 UInt16 Bone name offset (relative to the end of the chunk header) 0x12 0x2 UInt16 Vertex indices count 0x14 0x4 UInt32 Vertex indices offset (relative to the end of the chunk header) 0x18 0x2 UInt16 Weights offset (relative to the end of the chunk header) 0x1A 0x2 UInt16 Weight count (should match the vertex count) 0x12 0x2 UInt16 Vertex indices offset duplicate 0x14 0x2 UInt16 Weights offset duplicate 0x16 0x2 UInt16 Padding Bone name offset Variable String Bone name Vertex indices offset Vertex indices count x 0x2 UInt16[Vertex indices count] The indices of the vertices deformed by the bone Weights offset Weight count UByte[Weight count] The weight influence of the bone on the vertex, as a normalized UByte (value/255)"},{"location":"file-formats/model-texture-formats/trb/#rsid","title":"RSID","text":"<p>Resource ID?  References a resource located in another file.  Typically seen in the environment files referencing a shader.</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x10 String Resource Name"},{"location":"file-formats/model-texture-formats/trb/#rstp","title":"RSTP","text":"<p>Resource Type?  Type of resource identified in RSID.</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x10 String Resource Type (e.g. sdrb)"},{"location":"file-formats/model-texture-formats/trb/#prid","title":"PRID","text":"<p>Source location of remote resource</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x10 String Source File"},{"location":"file-formats/model-texture-formats/trb/#prtp","title":"PRTP","text":"<p>File type (or extension) of remote resource</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x10 String File Extension (e.g. trb)"},{"location":"file-formats/model-texture-formats/trb/#aabb-comp","title":"AABB / COMP","text":"<p>This chunk contains some bounding box info.  AABB chunks are used for identifying viewable meshes in-game while COMP chunks use some bounding box like information used to determine the scale/bias, which is then used to dequantize the submeshes' position data.</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0xC Float32[3] Bounding box minimum coordinates 0x1C 0xC Float32[3] Bounding box maximum coordinates 0x28 0x8 UInt32[2] Reserved, always null ? <p>The dequantization is done in the vertex shader, using the following routine : <pre><code>scale = BBoxMax - BBoxMin;\nscale *= 0.5;\nbias = BBoxMax - posScale;\nposition = position/32767 * scale + bias\n</code></pre></p>"},{"location":"file-formats/model-texture-formats/trb/#pesh","title":"PESH","text":"<p>Purpose currently unknown.</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x28 Float32[10] Unknown data 0x38 0x10 Char[16] Not always alpha-numeric, sometimes has a  1<sup>st</sup> character 0x48 0x8 Float32[2] Unknown data"},{"location":"file-formats/model-texture-formats/trb/#ltcd-header","title":"LTCD Header","text":"<p>Always empty so probably unused by the game.</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x10 UInt32[4] Reserved, always null."},{"location":"file-formats/model-texture-formats/trb/#mins-header","title":"MINS Header","text":"<p>Purpose currently unknown.</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x04 Int32 Associated Skeleton Joint Index/Hash 0x14 0x04 UInt32 Associated MDL # 0x18 0x28 UInt32[10] Unknown data"},{"location":"file-formats/model-texture-formats/trb/#chunk-containers","title":"Chunk Containers","text":""},{"location":"file-formats/model-texture-formats/trb/#chunk-container-header","title":"Chunk Container Header","text":"<p>The following header is for all the different chunks.</p> Offset Size Type Description 0x0 0x10 Chunk Header Chunk Header 0x10 0x4 UInt32 Children chunk count 0x14 0xC UInt32[3] Reserved, always null."},{"location":"file-formats/model-texture-formats/trb/#shd","title":"SHD","text":"<p>This is the main chunk container for the shader section.</p> Offset Size Type Description 0x0 0x20 Chunk Container Header Chunk Container Header 0x20 Variable FILE[Count depending on the game] FILE Chunks Variable 0x20 VCAP VCAP Chunk Variable 0x90 PCAP PCAP Chunk Variable Variable PRAM PRAM Chunk"},{"location":"file-formats/model-texture-formats/trb/#wrb","title":"WRB","text":"<p>This is the main chunk container for the geometry section. Its underlying chunk containers are all in Big Endian.</p> Offset Size Type Description 0x0 0x20 Chunk Container Header Chunk Container Header 0x20 Variable MDLC MDLC Chunk Container Variable 0x40 LTCD LTCD Chunk Container Variable Variable MICT MICT Chunk Container Variable 0x70 PESR PESR Chunk Container (not always present)"},{"location":"file-formats/model-texture-formats/trb/#mdlc","title":"MDLC","text":"<p>This chunk container has the \"main\" model geometry information embedded. It's the biggest one of the 3 containers defined in the SEDBwrb section.</p> Offset Size Type Description 0x0 0x20 Chunk Container Header Chunk Container Header 0x20 0x30 MDLC Header Chunk MDLC Header Chunk 0x50 Variable MDL Chunk[Variable count] MDL Chunk Containers (count given in the MDLC Header chunk)"},{"location":"file-formats/model-texture-formats/trb/#mdl","title":"MDL","text":"<p>This chunk container defines a mesh and its underlying submeshes, defined in \"MESH\" chunks.</p> Offset Size Type Description 0x0 0x20 Chunk Container Header Chunk Container Header 0x20 Variable Name Chunk The MDL name Variable 0x30 MDL Header Chunk MDL Header Chunk Variable Variable MESH Chunk[Variable count] MESH Chunk Containers (count given in the MDLC Header chunk) Variable 0x80 AABB Chunk Container The MDL's bounding box and scale/bias info"},{"location":"file-formats/model-texture-formats/trb/#mesh","title":"MESH","text":"<p>This chunk container defines a submesh. It has the vertex buffers necessary to construct the geometry.</p> Offset Size Type Description 0x0 0x20 Chunk Container Header Chunk Container Header 0x20 0x20 MESH Header Chunk MESH Header Chunk 0x40 Variable STR Chunk This chunk defines the shader used for this submesh, giving its name. Variable 0x20 RSID Chunk External resource name info Variable 0x20 RSTP Chunk External resource type info Variable 0x20 PRID Chunk External resource source file location info Variable 0x20 PRTP Chunk External resource file type info Variable Variable STMS[Variable count] STMS Chunks (count given in the MESH Header chunk) Variable 0x20 MPR[Variable count] MPR Chunks (not always present, count given in the MESH Header chunk) Variable 0x20 MDR[Variable count] MDR Chunks (not always present, count given in the MESH Header chunk) Variable Variable ENVD[Variable count] ENVD Chunks (count given in the MESH Header chunk) Variable 0x50 AABB Chunk Container The mesh's bounding box info"},{"location":"file-formats/model-texture-formats/trb/#aabb-container","title":"AABB Container","text":"<p>This chunk container is used to define bounding box information (Mesh &amp; MDL) and scale/bias information (MDL only).</p> Offset Size Type Description 0x0 0x20 Chunk Container Header Chunk Container Header 0x20 0x30 AABB Chunk[Variable count] AABB Chunk"},{"location":"file-formats/model-texture-formats/trb/#ltcd","title":"LTCD","text":"<p>This chunk container only has a header chunk. Its purpose is currently unknown, considering its size it's probably unused.</p> Offset Size Type Description 0x0 0x20 Chunk Container Header Chunk Container Header 0x20 0x10 LTCD Header Chunk LTCD Header Chunk"},{"location":"file-formats/model-texture-formats/trb/#mict","title":"MICT","text":"<p>This chunk container only has a single embedded chunk container. Its purpose is currently unknown.</p> Offset Size Type Description 0x0 0x20 Chunk Container Header Chunk Container Header 0x20 Variable MINS Chunk[Variable count] MINS Chunk Containers, which count is always equal to the number of MDL in the MDLC Chunk Container."},{"location":"file-formats/model-texture-formats/trb/#mins","title":"MINS","text":"<p>Purpose currently unknown</p> Offset Size Type Description 0x0 0x20 Chunk Container Header Chunk Container Header 0x20 0x40 MINS Header Chunk MINS Header Chunk 0x60 Variable NAME Chunk Associated Skeleton Joint Name"},{"location":"file-formats/model-texture-formats/trb/#pesr","title":"PESR","text":"<p>Purpose currently unknown</p> Offset Size Type Description 0x0 0x20 Chunk Container Header Chunk Container Header 0x20 0x50 PESH Chunk[Variable count] PESH Chunk"},{"location":"file-formats/text-format/encoding-keys-common/","title":"Encoding Keys Common","text":"<p>This page contains encoding keys used by all the games from the trilogy.</p>"},{"location":"file-formats/text-format/encoding-keys-common/#single-byte-keys","title":"Single byte keys","text":"<p>These keys represent special conditions that are taken into account by the games when displaying them. each key would have to be inserted right before a sequence of text that you want to modify.</p> Byte Key Purpose 0x00 {End} Purpose unknown 0x01 {Escape} Purpose unknown 0x02 {Italic} Styles the text following this key to be italic 0x03 {StraightLine} Inserts a small horizontal line 0x04 {Article} Purpose unknown 0x05 {ArticleMany} Purpose unknown 0xFF {FF} Padding"},{"location":"file-formats/text-format/encoding-keys-common/#characters-byte-keys","title":"Characters byte keys","text":"<p>These keys are used for representing special characters that are present only in latin encodings. as all the encodings supported by the games lacks these special characters, these keys are used for representing them thereby allowing the games to use them in all of its encodings.</p>"},{"location":"file-formats/text-format/encoding-keys-common/#group-1","title":"Group 1","text":"<p>Important: For English (us), French (fr), German (gr), Italian (it), Japanese (jp), and Spanish (sp) ztr files.</p> Byte Key / Char Purpose 0x85, 0x40 {\u20ac} Inserts character  \u20ac 0x85, 0x42 {\u201a} Inserts character  \u201a 0x85, 0x44 {\u201e} Inserts character  \u201e 0x85, 0x45 {\u2026} Inserts character  \u2026 0x85, 0x46 {\u2020} Inserts character  \u2020 0x85, 0x47 {\u2021} Inserts character  \u2021 0x85, 0x49 {\u2030} Inserts character  \u2030 0x85, 0x4A {\u0160} Inserts character  \u0160 0x85, 0x4B {\u2039} Inserts character  \u2039 0x85, 0x4C {\u0152} Inserts character  \u0152 0x85, 0x4E {\u017d} Inserts character  \u017d 0x85, 0x51 {\u2018} Inserts character  \u2018 0x85, 0x52 {\u2019} Inserts character  \u2019 0x85, 0x53 {\u201c} Inserts character  \u201c 0x85, 0x54 {\u201d} Inserts character  \u201d 0x85, 0x55 {\u2022} Inserts character  \u2022 0x85, 0x56 {-} Inserts character  - 0x85, 0x57 {\u2014} Inserts character  \u2014 0x85, 0x59 {\u2122} Inserts character  \u2122 0x85, 0x5A {\u0161} Inserts character  \u0161 0x85, 0x5B {\u203a} Inserts character  \u203a 0x85, 0x5C {\u0153} Inserts character  \u0153 0x85, 0x5E {\u017e} Inserts character  \u017e 0x85, 0x5F {\u0178} Inserts character  \u0178 0x85, 0x61 {\u00a1} Inserts character  \u00a1 0x85, 0x62 {\u00a2} Inserts character  \u00a2 0x85, 0x63 {\u00a3} Inserts character  \u00a3 0x85, 0x64 {\u00a4} Inserts character  \u00a4 0x85, 0x65 {\u00a5} Inserts character  \u00a5 0x85, 0x66 {\u00a6} Inserts character  \u00a6 0x85, 0x67 {\u00a7} Inserts character  \u00a7 0x85, 0x68 {\u00a8} Inserts character  \u00a8 0x85, 0x69 {\u00a9} Inserts character  \u00a9 0x85, 0x6A {\u00aa} Inserts character  \u00aa 0x85, 0x6B {\u00ab} Inserts character  \u00ab 0x85, 0x6C {\u00ac} Inserts character  \u00ac 0x85, 0x6E {\u00ae} Inserts character  \u00ae 0x85, 0x6F {\u00af} Inserts character  \u00af 0x85, 0x70 {\u00b0} Inserts character  \u00b0 0x85, 0x71 {\u00b1} Inserts character  \u00b1 0x85, 0x72 {\u00b2} Inserts character  \u00b2 0x85, 0x73 {\u00b3} Inserts character  \u00b3 0x85, 0x74 {\u00b4} Inserts character  \u00b4 0x85, 0x75 {\u00b5} Inserts character  \u00b5 0x85, 0x76 {\u00b6} Inserts character  \u00b6 0x85, 0x77 {\u00b7} Inserts character  \u00b7 0x85, 0x78 {\u00b8} Inserts character  \u00b8 0x85, 0x79 {\u00b9} Inserts character  \u00b9 0x85, 0x7A {\u00ba} Inserts character  \u00ba 0x85, 0x7B {\u00bb} Inserts character  \u00bb 0x85, 0x7C {\u00bc} Inserts character  \u00bc 0x85, 0x7D {\u00bd} Inserts character  \u00bd 0x85, 0x7E {\u00be} Inserts character  \u00be 0x85, 0x7F {\u00bf} Inserts character  \u00bf 0x85, 0x9F {\u00c0} Inserts character  \u00c0 0x85, 0x81 {\u00c1} Inserts character  \u00c1 0x85, 0x82 {\u00c2} Inserts character  \u00c2 0x85, 0x83 {\u00c3} Inserts character  \u00c3 0x85, 0x84 {\u00c4} Inserts character  \u00c4 0x85, 0x85 {\u00c5} Inserts character  \u00c5 0x85, 0x86 {\u00c6} Inserts character  \u00c6 0x85, 0x87 {\u00c7} Inserts character  \u00c7 0x85, 0x88 {\u00c8} Inserts character  \u00c8 0x85, 0x89 {\u00c9} Inserts character  \u00c9 0x85, 0x8A {\u00ca} Inserts character  \u00ca 0x85, 0x8B {\u00cb} Inserts character  \u00cb 0x85, 0x8C {\u00cc} Inserts character  \u00cc 0x85, 0x8D {\u00cd} Inserts character  \u00cd 0x85, 0x8E {\u00ce} Inserts character  \u00ce 0x85, 0x8F {\u00cf} Inserts character  \u00cf 0x85, 0x90 {\u00d0} Inserts character  \u00d0 0x85, 0x91 {\u00d1} Inserts character  \u00d1 0x85, 0x92 {\u00d2} Inserts character  \u00d2 0x85, 0x93 {\u00d3} Inserts character  \u00d3 0x85, 0x94 {\u00d4} Inserts character  \u00d4 0x85, 0x95 {\u00d5} Inserts character  \u00d5 0x85, 0x96 {\u00d6} Inserts character  \u00d6 0x85, 0xB6 {\u00d7} Inserts character  \u00d7 0x85, 0x98 {\u00d8} Inserts character  \u00d8 0x85, 0x99 {\u00d9} Inserts character  \u00d9 0x85, 0x9A {\u00da} Inserts character  \u00da 0x85, 0x9B {\u00db} Inserts character  \u00db 0x85, 0x9C {\u00dc} Inserts character  \u00dc 0x85, 0x9D {\u00dd} Inserts character  \u00dd 0x85, 0xBD {\u00de} Inserts character  \u00de 0x85, 0xBE {\u00df} Inserts character  \u00df 0x85, 0xBF {\u00e0} Inserts character  \u00e0 0x85, 0xC0 {\u00e1} Inserts character  \u00e1 0x85, 0xC1 {\u00e2} Inserts character  \u00e2 0x85, 0xC2 {\u00e3} Inserts character  \u00e3 0x85, 0xC3 {\u00e4} Inserts character  \u00e4 0x85, 0xC4 {\u00e5} Inserts character  \u00e5 0x85, 0xC5 {\u00e6} Inserts character  \u00e6 0x85, 0xC6 {\u00e7} Inserts character  \u00e7 0x85, 0xC7 {\u00e8} Inserts character  \u00e8 0x85, 0xC8 {\u00e9} Inserts character  \u00e9 0x85, 0xC9 {\u00ea} Inserts character  \u00ea 0x85, 0xCA {\u00eb} Inserts character  \u00eb 0x85, 0xCB {\u00ec} Inserts character  \u00ec 0x85, 0xCC {\u00ed} Inserts character  \u00ed 0x85, 0xCD {\u00ee} Inserts character  \u00ee 0x85, 0xCE {\u00ef} Inserts character  \u00ef 0x85, 0xCF {\u00f0} Inserts character  \u00f0 0x85, 0xD0 {\u00f1} Inserts character  \u00f1 0x85, 0xD1 {\u00f2} Inserts character  \u00f2 0x85, 0xD2 {\u00f3} Inserts character  \u00f3 0x85, 0xD3 {\u00f4} Inserts character  \u00f4 0x85, 0xD4 {\u00f5} Inserts character  \u00f5 0x85, 0xD5 {\u00f6} Inserts character  \u00f6 0x85, 0xD6 {\u00f7} Inserts character  \u00f7 0x85, 0xD7 {\u00f8} Inserts character  \u00f8 0x85, 0xD8 {\u00f9} Inserts character  \u00f9 0x85, 0xD9 {\u00fa} Inserts character  \u00fa 0x85, 0xDA {\u00fb} Inserts character  \u00fb 0x85, 0xDB {\u00fc} Inserts character  \u00fc 0x85, 0xDC {\u00fd} Inserts character  \u00fd 0x85, 0xDD {\u00fe} Inserts character  \u00fe 0x85, 0xDE {\u00ff} Inserts character  \u00ff"},{"location":"file-formats/text-format/encoding-keys-common/#group-2","title":"Group 2","text":"<p>Important: For Chinese (ch) and Korean (kr) ztr files.</p> Byte Key / Char Purpose 0x80, 0x40 {\u20ac} Inserts character \u20ac 0x80, 0x42 {\u201a} Inserts character \u201a 0x80, 0x44 {\u201e} Inserts character \u201e 0x80, 0x45 {\u2026} Inserts character \u2026 0x80, 0x46 {\u2020} Inserts character \u2020 0x80, 0x47 {\u2021} Inserts character \u2021 0x80, 0x49 {\u2030} Inserts character \u2030 0x80, 0x4A {\u0160} Inserts character \u0160 0x80, 0x4B {\u2039} Inserts character \u2039 0x80, 0x4C {\u0152} Inserts character \u0152 0x80, 0x4E {\u017d} Inserts character \u017d 0x80, 0x51 {\u2018} Inserts character \u2018 0x80, 0x52 {\u2019} Inserts character \u2019 0x80, 0x53 {\u201c} Inserts character \u201c 0x80, 0x54 {\u201d} Inserts character \u201d 0x80, 0x55 {\u2022} Inserts character \u2022 0x80, 0x56 {-} Inserts character - 0x80, 0x57 {\u2014} Inserts character \u2014 0x80, 0x59 {\u2122} Inserts character \u2122 0x80, 0x5A {\u0161} Inserts character \u0161 0x80, 0x5B {\u203a} Inserts character \u203a 0x80, 0x5C {\u0153} Inserts character \u0153 0x80, 0x5E {\u017e} Inserts character \u017e 0x80, 0x5F {\u0178} Inserts character \u0178 0x80, 0x61 {\u00a1} Inserts character \u00a1 0x80, 0x62 {\u00a2} Inserts character \u00a2 0x80, 0x63 {\u00a3} Inserts character \u00a3 0x80, 0x64 {\u00a4} Inserts character \u00a4 0x80, 0x65 {\u00a5} Inserts character \u00a5 0x80, 0x66 {\u00a6} Inserts character \u00a6 0x80, 0x67 {\u00a7} Inserts character \u00a7 0x80, 0x68 {\u00a8} Inserts character \u00a8 0x80, 0x69 {\u00a9} Inserts character \u00a9 0x80, 0x6A {\u00aa} Inserts character \u00aa 0x80, 0x6B {\u00ab} Inserts character \u00ab 0x80, 0x6C {\u00ac} Inserts character \u00ac 0x80, 0x6E {\u00ae} Inserts character \u00ae 0x80, 0x6F {\u00af} Inserts character \u00af 0x80, 0x70 {\u00b0} Inserts character \u00b0 0x80, 0x71 {\u00b1} Inserts character \u00b1 0x80, 0x72 {\u00b2} Inserts character \u00b2 0x80, 0x73 {\u00b3} Inserts character \u00b3 0x80, 0x74 {\u00b4} Inserts character \u00b4 0x80, 0x75 {\u00b5} Inserts character \u00b5 0x80, 0x76 {\u00b6} Inserts character \u00b6 0x80, 0x77 {\u00b7} Inserts character \u00b7 0x80, 0x78 {\u00b8} Inserts character \u00b8 0x80, 0x79 {\u00b9} Inserts character \u00b9 0x80, 0x7A {\u00ba} Inserts character \u00ba 0x80, 0x7B {\u00bb} Inserts character \u00bb 0x80, 0x7C {\u00bc} Inserts character \u00bc 0x80, 0x7D {\u00bd} Inserts character \u00bd 0x80, 0x7E {\u00be} Inserts character \u00be 0x80, 0x7F {\u00bf} Inserts character \u00bf 0x80, 0x9F {\u00c0} Inserts character \u00c0 0x80, 0x81 {\u00c1} Inserts character \u00c1 0x80, 0x82 {\u00c2} Inserts character \u00c2 0x80, 0x83 {\u00c3} Inserts character \u00c3 0x80, 0x84 {\u00c4} Inserts character \u00c4 0x80, 0x85 {\u00c5} Inserts character \u00c5 0x80, 0x86 {\u00c6} Inserts character \u00c6 0x80, 0x87 {\u00c7} Inserts character \u00c7 0x80, 0x88 {\u00c8} Inserts character \u00c8 0x80, 0x89 {\u00c9} Inserts character \u00c9 0x80, 0x8A {\u00ca} Inserts character \u00ca 0x80, 0x8B {\u00cb} Inserts character \u00cb 0x80, 0x8C {\u00cc} Inserts character \u00cc 0x80, 0x8D {\u00cd} Inserts character \u00cd 0x80, 0x8E {\u00ce} Inserts character \u00ce 0x80, 0x8F {\u00cf} Inserts character \u00cf 0x80, 0x90 {\u00d0} Inserts character \u00d0 0x80, 0x91 {\u00d1} Inserts character \u00d1 0x80, 0x92 {\u00d2} Inserts character \u00d2 0x80, 0x93 {\u00d3} Inserts character \u00d3 0x80, 0x94 {\u00d4} Inserts character \u00d4 0x80, 0x95 {\u00d5} Inserts character \u00d5 0x80, 0x96 {\u00d6} Inserts character \u00d6 0x80, 0xB6 {\u00d7} Inserts character \u00d7 0x80, 0x98 {\u00d8} Inserts character \u00d8 0x80, 0x99 {\u00d9} Inserts character \u00d9 0x80, 0x9A {\u00da} Inserts character \u00da 0x80, 0x9B {\u00db} Inserts character \u00db 0x80, 0x9C {\u00dc} Inserts character \u00dc 0x80, 0x9D {\u00dd} Inserts character \u00dd 0x80, 0xBD {\u00de} Inserts character \u00de 0x80, 0xBE {\u00df} Inserts character \u00df 0x80, 0xBF {\u00e0} Inserts character \u00e0 0x80, 0xC0 {\u00e1} Inserts character \u00e1 0x80, 0xC1 {\u00e2} Inserts character \u00e2 0x80, 0xC2 {\u00e3} Inserts character \u00e3 0x80, 0xC3 {\u00e4} Inserts character \u00e4 0x80, 0xC4 {\u00e5} Inserts character \u00e5 0x80, 0xC5 {\u00e6} Inserts character \u00e6 0x80, 0xC6 {\u00e7} Inserts character \u00e7 0x80, 0xC7 {\u00e8} Inserts character \u00e8 0x80, 0xC8 {\u00e9} Inserts character \u00e9 0x80, 0xC9 {\u00ea} Inserts character \u00ea 0x80, 0xCA {\u00eb} Inserts character \u00eb 0x80, 0xCB {\u00ec} Inserts character \u00ec 0x80, 0xCC {\u00ed} Inserts character \u00ed 0x80, 0xCD {\u00ee} Inserts character \u00ee 0x80, 0xCE {\u00ef} Inserts character \u00ef 0x80, 0xCF {\u00f0} Inserts character \u00f0 0x80, 0xD0 {\u00f1} Inserts character \u00f1 0x80, 0xD1 {\u00f2} Inserts character \u00f2 0x80, 0xD2 {\u00f3} Inserts character \u00f3 0x80, 0xD3 {\u00f4} Inserts character \u00f4 0x80, 0xD4 {\u00f5} Inserts character \u00f5 0x80, 0xD5 {\u00f6} Inserts character \u00f6 0x80, 0xD6 {\u00f7} Inserts character \u00f7 0x80, 0xD7 {\u00f8} Inserts character \u00f8 0x80, 0xD8 {\u00f9} Inserts character \u00f9 0x80, 0xD9 {\u00fa} Inserts character \u00fa 0x80, 0xDA {\u00fb} Inserts character \u00fb 0x80, 0xDB {\u00fc} Inserts character \u00fc 0x80, 0xDC {\u00fd} Inserts character \u00fd 0x80, 0xDD {\u00fe} Inserts character \u00fe 0x80, 0xDE {\u00ff} Inserts character \u00ff"},{"location":"file-formats/text-format/encoding-keys-common/#similar-character-byte-keys","title":"Similar character byte keys","text":"<p>N.B.: These are duplicate keys that are used for representing special characters present in latin only encodings.</p> Byte Key Purpose 0x85, 0x80 {ExChara85 80} Inserts character \u00bf 0x85, 0x97 {ExChara85 97} Inserts character \u00d7 0x85, 0xA0 {ExChara85 A0} Inserts character \u00c1 0x85, 0xA1 {ExChara85 A1} Inserts character \u00c2 0x85, 0xA2 {ExChara85 A2} Inserts character \u00c3 0x85, 0xA3 {ExChara85 A3} Inserts character \u00c4 0x85, 0xA4 {ExChara85 A4} Inserts character \u00c5 0x85, 0xA5 {ExChara85 A5} Inserts character \u00c6 0x85, 0xA6 {ExChara85 A6} Inserts character \u00c7 0x85, 0xA7 {ExChara85 A7} Inserts character \u00c8 0x85, 0xA8 {ExChara85 A8} Inserts character \u00c9 0x85, 0xA9 {ExChara85 A9} Inserts character \u00ca 0x85, 0xAA {ExChara85 AA} Inserts character \u00cb 0x85, 0xAB {ExChara85 AB} Inserts character \u00cc 0x85, 0xAC {ExChara85 AC} Inserts character \u00cd 0x85, 0xAD {ExChara85 AD} Inserts character \u00ce 0x85, 0xAE {ExChara85 AE} Inserts character \u00cf 0x85, 0xAF {ExChara85 AF} Inserts character \u00d0 0x85, 0xB0 {ExChara85 B0} Inserts character \u00d1 0x85, 0xB1 {ExChara85 B1} Inserts character \u00d2 0x85, 0xB2 {ExChara85 B2} Inserts character \u00d3 0x85, 0xB3 {ExChara85 B3} Inserts character \u00d4 0x85, 0xB4 {ExChara85 B4} Inserts character \u00d5 0x85, 0xB5 {ExChara85 B5} Inserts character \u00d6 0x85, 0xB7 {ExChara85 B7} Inserts character \u00d8 0x85, 0xB8 {ExChara85 B8} Inserts character \u00d9 0x85, 0xB9 {ExChara85 B9} Inserts character \u00da 0x85, 0xBA {ExChara85 BA} Inserts character \u00db 0x85, 0xBB {ExChara85 BB} Inserts character \u00dc 0x85, 0xBC {ExChara85 BC} Inserts character \u00dd"},{"location":"file-formats/text-format/encoding-keys-common/#special-byte-keys","title":"Special byte keys","text":"<p>Just like the Single byte keys, these keys also represent special conditions that are taken into account by the games when displaying them.</p>"},{"location":"file-formats/text-format/encoding-keys-common/#group-1_1","title":"Group 1","text":"<p>Important: For English (us), French (fr), German (gr), Italian (it), Japanese (jp), and Spanish (sp) ztr files.</p> Byte Key Purpose 0x40, 0x70 {Text NewPage} Purpose unknown 0x40, 0x72 {Text NewLine} Moves the text following this key to a newline 0x85, 0x60 {Text Tab} Purpose unknown 0xF4, 0x40 {Entity 1} Entity or object name that is displayed ingame with the text following this key 0xF4, 0x41 {Entity 2} Entity or object name that is displayed ingame with the text following this key 0xF4, 0x42 {Entity 3} Entity or object name that is displayed ingame with the text following this key 0xF4, 0x43 {Entity 4} Entity or object name that is displayed ingame with the text following this key 0xF6, 0x40 {Key Entity} Key Entity or object name that is displayed ingame with the text following this key 0xF7, 0x40 {Counter Type 1} Used when displaying text that has a numerical value 0xF7, 0x41 {Counter Type 2} Used when displaying text that has a numerical value 0xF7, 0x42 {Counter Type 3} Used when displaying text that has a numerical value"},{"location":"file-formats/text-format/encoding-keys-common/#group-2_1","title":"Group 2","text":"<p>Important: For Chinese (ch) ztr files.</p> Byte Key Purpose 0x40, 0x70 {Text NewPage} Purpose unknown 0x40, 0x72 {Text NewLine} Moves the text following this key to a newline 0x85, 0x60 {Text Tab} Purpose unknown 0xFC, 0x40 {Entity 1} Entity or object name that is displayed ingame with the text following this key 0xFC, 0x41 {Entity 2} Entity or object name that is displayed ingame with the text following this key 0xFC, 0x42 {Entity 3} Entity or object name that is displayed ingame with the text following this key 0xFC, 0x43 {Entity 4} Entity or object name that is displayed ingame with the text following this key 0xFD, 0x40 {Counter Type 1} Used when displaying text that has a numerical value 0xFD, 0x41 {Counter Type 2} Used when displaying text that has a numerical value 0xFD, 0x42 {Counter Type 3} Used when displaying text that has a numerical value"},{"location":"file-formats/text-format/encoding-keys-common/#group-3","title":"Group 3","text":"<p>Important: For Korean (kr) ztr files.</p> Byte Key Purpose 0x40, 0x70 {Text NewPage} Purpose unknown 0x40, 0x72 {Text NewLine} Moves the text following this key to a newline 0x85, 0x60 {Text Tab} Purpose unknown 0xAA, 0xA1 {Entity 1} Entity or object name that is displayed ingame with the text following this key 0xAA, 0xA2 {Entity 2} Entity or object name that is displayed ingame with the text following this key 0xAA, 0xA3 {Entity 3} Entity or object name that is displayed ingame with the text following this key 0xAA, 0xA4 {Entity 4} Entity or object name that is displayed ingame with the text following this key 0xAB, 0xA1 {Counter Type 1} Used when displaying text that has a numerical value 0xAB, 0xA2 {Counter Type 2} Used when displaying text that has a numerical value 0xAB, 0xA3 {Counter Type 3} Used when displaying text that has a numerical value"},{"location":"file-formats/text-format/encoding-keys-common/#unknown-byte-keys","title":"Unknown byte keys","text":"<p>N.B.: The purpose of these two byte keys are unknown.</p> Byte Key 0x81, 0x40 {Unk81 40} 0xFA, 0x20 {UnkFA 20} 0xFF, 0x86 {UnkFF 86} 0xFF, 0x90 {UnkFF 90} 0xFF, 0x91 {UnkFF 91} 0xFF, 0x93 {UnkFF 93} 0xFF, 0x94 {UnkFF 94} 0xFF, 0x99 {UnkFF 99} 0xFF, 0x9A {UnkFF 9A} 0xFF, 0x9B {UnkFF 9B} 0xFF, 0x9D {UnkFF 9D} 0xFF, 0x9E {UnkFF 9E} 0xFF, 0xA9 {UnkFF A9} 0xFF, 0xB8 {UnkFF B8} 0xFF, 0xC9 {UnkFF C9} 0xFF, 0xCC {UnkFF CC} 0xFF, 0xCE {UnkFF CE} 0xFF, 0xD0 {UnkFF D0} 0xFF, 0xD3 {UnkFF D3} 0xFF, 0xDA {UnkFF DA} 0xFF, 0xDD {UnkFF DD} 0xFF, 0xE0 {UnkFF E0} 0xFF, 0xE3 {UnkFF E3} 0xFF, 0xE4 {UnkFF E4} 0xFF, 0xE6 {UnkFF E6} 0xFF, 0xF1 {UnkFF F1} 0xFF, 0x82 {UnkFF 82} 0xFF, 0x83 {UnkFF 83} 0xFF, 0x8F {UnkFF 8F} 0xFF, 0x96 {UnkFF 96}"},{"location":"file-formats/text-format/encoding-keys-common/#unknown2-byte-keys","title":"Unknown2 byte keys","text":"<p>N.B.: The purpose of these two byte keys are unknown.</p> Byte Key 0xF1, 0x78 {Unk2_F1 78} 0xF4, 0x44 {Unk2_F4 44} 0xF4, 0x45 {Unk2_F4 45} 0xF4, 0x46 {Unk2_F4 46} 0xF4, 0x47 {Unk2_F4 47} 0xF4, 0x48 {Unk2_F4 48} 0xF4, 0x49 {Unk2_F4 49} 0xF4, 0x60 {Unk2_F4 60} 0xF5, 0x40 {Unk2_F5 40} 0xF6, 0x60 {Unk2_F6 60}"},{"location":"file-formats/text-format/encoding-keys-info/","title":"Encoding Keys Info","text":"<p>This page contains links to the encoding keys used by each game from the trilogy</p> <p>The games use shift-jis encoding for all latin alphabets based languages and Japanese, while big5 and euc-kr encodings are used for Chinese and Korean languages respectively. do note that not all characters from shift-jis, big5, and euc-kr encodings are used in these games.</p>"},{"location":"file-formats/text-format/encoding-keys-info/#links","title":"Links","text":"<ul> <li> <p>Common Keys</p> </li> <li> <p>XIII Keys</p> </li> <li> <p>XIII-2 Keys</p> </li> <li> <p>LR Keys</p> </li> </ul>"},{"location":"file-formats/text-format/encoding-keys-lr/","title":"Encoding Keys LR","text":"<p>This page contains encoding keys used only by LIGHTNING RETURNS FINAL FANTASY XIII.</p>"},{"location":"file-formats/text-format/encoding-keys-lr/#color-keys","title":"Color keys","text":"<p>The color keys indicate the color with which a particular portion of text is displayed ingame in LIGHTNING RETURNS FINAL FANTASY XIII.  Please refer to the image given below, to get a better idea on how the colors would look like when its displayed ingame. </p> <p></p>"},{"location":"file-formats/text-format/encoding-keys-lr/#group-1","title":"Group 1","text":"<p>Important: For English (us), French (fr), German (gr), Italian (it), Japanese (jp), and Spanish (sp) ztr files.</p> Bytes Key 0xF9, 0x40 {Color White} 0xF9, 0x41 {Color IceBlue} 0xF9, 0x42 {Color Gold} 0xF9, 0x43 {Color LightRed} 0xF9, 0x44 {Color Yellow} 0xF9, 0x45 {Color Green} 0xF9, 0x46 {Color Gray} 0xF9, 0x47 {Color LightGold} 0xF9, 0x48 {Color Rose} 0xF9, 0x49 {Color Purple} 0xF9, 0x4A {Color DarkYellow} 0xF9, 0x4B {Color Gray2} 0xF9, 0x4C {Color Voilet} 0xF9, 0x4D {Color LightGreen} 0xF9, 0x4E {Color Sapphire} 0xF9, 0x4F {Color Voilet2} 0xF9, 0x50 {Color OliveGreen} 0xF9, 0x51 {Color DarkCyan} 0xF9, 0x52 {Color Lavender} 0xF9, 0x53 {Color Brown} 0xF9, 0x54 {Color Gold2} 0xF9, 0x55 {Color Gold3} 0xF9, 0x56 {Color DarkGray} 0xF9, 0x57 {Color DarkRed} 0xF9, 0x58 {Color Jade} 0xF9, 0x59 {Color SmokeGray} 0xF9, 0x5A {Color DarkGold} 0xF9, 0x5B {Color Magenta} 0xF9, 0x5C {Color PureWhite} 0xF9, 0x5D {Color Orange} 0xF9, 0x5E {Color NavyBlue}"},{"location":"file-formats/text-format/encoding-keys-lr/#group-2","title":"Group 2","text":"<p>Important: For Chinese (ch) ztr files.</p> Bytes Key 0xFE, 0x40 {Color White} 0xFE, 0x41 {Color IceBlue} 0xFE, 0x42 {Color Gold} 0xFE, 0x43 {Color LightRed} 0xFE, 0x44 {Color Yellow} 0xFE, 0x45 {Color Green} 0xFE, 0x46 {Color Gray} 0xFE, 0x47 {Color LightGold} 0xFE, 0x48 {Color Rose} 0xFE, 0x49 {Color Purple} 0xFE, 0x4A {Color DarkYellow} 0xFE, 0x4B {Color Gray2} 0xFE, 0x4C {Color Voilet} 0xFE, 0x4D {Color LightGreen} 0xFE, 0x4E {Color Sapphire} 0xFE, 0x4F {Color Voilet2} 0xFE, 0x50 {Color OliveGreen} 0xFE, 0x51 {Color DarkCyan} 0xFE, 0x52 {Color Lavender} 0xFE, 0x53 {Color Brown} 0xFE, 0x54 {Color Gold2} 0xFE, 0x55 {Color Gold3} 0xFE, 0x56 {Color DarkGray} 0xFE, 0x57 {Color DarkRed} 0xFE, 0x58 {Color Jade} 0xFE, 0x59 {Color SmokeGray} 0xFE, 0x5A {Color DarkGold} 0xFE, 0x5B {Color Magenta} 0xFE, 0x5C {Color PureWhite} 0xFE, 0x5D {Color Orange} 0xFE, 0x5E {Color NavyBlue}"},{"location":"file-formats/text-format/encoding-keys-lr/#group-3","title":"Group 3","text":"<p>Important: For Korean (kr) ztr files.</p> Bytes Key 0xAC, 0xA1 {Color White} 0xAC, 0xA2 {Color IceBlue} 0xAC, 0xA3 {Color Gold} 0xAC, 0xA4 {Color LightRed} 0xAC, 0xA5 {Color Yellow} 0xAC, 0xA6 {Color Green} 0xAC, 0xA7 {Color Gray} 0xAC, 0xA8 {Color LightGold} 0xAC, 0xA9 {Color Rose} 0xAC, 0xAA {Color Purple} 0xAC, 0xAB {Color DarkYellow} 0xAC, 0xAC {Color Gray2} 0xAC, 0xAD {Color Voilet} 0xAC, 0xAE {Color LightGreen} 0xAC, 0xAF {Color Sapphire} 0xAC, 0xB0 {Color Voilet2} 0xAC, 0xB1 {Color OliveGreen} 0xAC, 0xB2 {Color DarkCyan} 0xAC, 0xB3 {Color Lavender} 0xAC, 0xB4 {Color Brown} 0xAC, 0xB5 {Color Gold2} 0xAC, 0xB6 {Color Gold3} 0xAC, 0xB7 {Color DarkGray} 0xAC, 0xB8 {Color DarkRed} 0xAC, 0xB9 {Color Jade} 0xAC, 0xBA {Color SmokeGray} 0xAC, 0xBB {Color DarkGold} 0xAC, 0xBC {Color Magenta} 0xAC, 0xBD {Color PureWhite} 0xAC, 0xBE {Color Orange} 0xAC, 0xBF {Color NavyBlue}"},{"location":"file-formats/text-format/encoding-keys-lr/#icon-keys","title":"Icon keys","text":"<p>These keys are used in LIGHTNING RETURNS FINAL FANTASY XIII, to insert special icons next to a text when its displayed ingame.  Please refer to the below image for the icons. </p> <p></p> <p>The order of the keys given in the tables below would be the order of the icons in the image from the left side. </p> <p>Icon Notes</p> <ul> <li>In the game's ZTR files, the key <code>{Icon Small_Star}</code> is usually inserted right after a different icon key. this would make the star appear below the previous icon and so if you want the star icon to appear separately, then the icon key has to be written after three empty spaces.</li> </ul>"},{"location":"file-formats/text-format/encoding-keys-lr/#group-1_1","title":"Group 1","text":"<p>Important: For English (us), French (fr), German (gr), Italian (it), Japanese (jp), and Spanish (sp) ztr files.</p> Bytes Key 0xF0, 0x40 {Icon Chat} 0xF0, 0x41 {Icon Warning} 0xF0, 0x42 {Icon Notification} 0xF0, 0x43 {Icon Outerworld_Thoughts} 0xF0, 0x44 {Icon Arrow_Right} 0xF0, 0x45 {Icon Arrow_Left} 0xF0, 0x46 {Icon Mission_Note} 0xF0, 0x47 {Icon Thumbs_Up} 0xF0, 0x48 {Icon Bonus_Ability} 0xF0, 0x49 {Icon Defense_Up} 0xF0, 0x4A {Icon Canvas_Quest_Done} 0xF0, 0x4B {Icon Schema3} 0xF0, 0x4C {Icon Schema2} 0xF0, 0x4D {Icon Schema1} 0xF0, 0x4E {Icon Hourglass} 0xF0, 0x4F {Icon Lock} 0xF0, 0x50 {Icon Object0_Big} 0xF0, 0x51 {Icon Object1_Big} 0xF0, 0x52 {Icon Object2_Big} 0xF0, 0x53 {Icon Object_Star_Big} 0xF0, 0x54 {Icon Hammer} 0xF0, 0x55 {Icon Cube} 0xF0, 0x56 {Icon Hourglass_Half} 0xF0, 0x57 {Icon Megaphone} 0xF0, 0x58 {Icon Gift} 0xF0, 0x59 {Icon Object1_Small} 0xF0, 0x5A {Icon Object2_Small} 0xF0, 0x5B {Icon Object_Star_Small} 0xF0, 0x5C {Icon Wizard_Hat} 0xF0, 0x5D {Icon ATB_Speed} 0xF0, 0x5E {Icon Staggering} 0xF0, 0x5F {Icon Stagger_Preserve} 0xF0, 0x60 {Icon Small_Star} 0xF0, 0x61 {Icon Objective} 0xF2, 0x40 {Icon Sword} 0xF2, 0x41 {Icon Greatsword} 0xF2, 0x42 {Icon Rapier} 0xF2, 0x43 {Icon Dual_Blades} 0xF2, 0x44 {Icon Staff} 0xF2, 0x45 {Icon Spear} 0xF2, 0x46 {Icon Knife} 0xF2, 0x47 {Icon Water_Drop} 0xF2, 0x48 {Icon Datalog} 0xF2, 0x49 {Icon Eidolith_Crystal} 0xF2, 0x4A {Icon Wrench} 0xF2, 0x4B {Icon Mechanical_Material} 0xF2, 0x4C {Icon Synthetic_Component} 0xF2, 0x4D {Icon Organic_Component} 0xF2, 0x4E {Icon Catalyst_Component} 0xF2, 0x4F {Icon Arm_Accessory} 0xF2, 0x50 {Icon Ring} 0xF2, 0x51 {Icon Brooch} 0xF2, 0x52 {Icon Head_Accessory} 0xF2, 0x53 {Icon Container_Type1} 0xF2, 0x54 {Icon Container_Type2} 0xF2, 0x55 {Icon Container_Type3} 0xF2, 0x56 {Icon Phoenix_Down} 0xF2, 0x57 {Icon Clock} 0xF2, 0x58 {Icon Sack} 0xF2, 0x59 {Icon Auto_Ability} 0xF2, 0x5A {Icon Ability_Physical} 0xF2, 0x5B {Icon Ability_Magic} 0xF2, 0x5C {Icon Shield} 0xF2, 0x5D {Icon Heart_Plus} 0xF2, 0x5E {Icon Ability_Debuff} 0xF2, 0x5F {Icon Status_Ailment} 0xF2, 0x60 {Icon Ability_Buff} 0xF2, 0x61 {Icon Heart} 0xF2, 0x62 {Icon Greatsword2} 0xF2, 0x63 {Icon Unknown1} 0xF2, 0x64 {Icon Check_Mark} 0xF2, 0x65 {Icon Cross_Mark} 0xF2, 0x66 {Icon Unknown2} 0xF2, 0x67 {Icon Unknown3} 0xF2, 0x68 {Icon Ability_Eidolon} 0xF2, 0x69 {Icon EP} 0xF2, 0x6A {Icon Ribbon} 0xF2, 0x6B {Icon Amulet} 0xF2, 0x6C {Icon Necklace} 0xF2, 0x6D {Icon Plant_Component} 0xF2, 0x6E {Icon Fluid_Component} 0xF2, 0x6F {Icon Malistone} 0xF2, 0x70 {Icon Bow} 0xF2, 0x71 {Icon Dual_Blades2} 0xF2, 0x72 {Icon Question_Mark} 0xF2, 0x73 {Icon Gil} 0xF2, 0x74 {Icon Leveling_Allowed} 0xF2, 0x75 {Icon Map} 0xF2, 0x76 {Icon Garb} 0xF2, 0x77 {Icon Item_Capacity}"},{"location":"file-formats/text-format/encoding-keys-lr/#group-2_1","title":"Group 2","text":"<p>Important: For Chinese (ch) ztr files.</p> Bytes Key 0xFA, 0x40 {Icon Chat} 0xFA, 0x41 {Icon Warning} 0xFA, 0x42 {Icon Notification} 0xFA, 0x43 {Icon Outerworld_Thoughts} 0xFA, 0x44 {Icon Arrow_Right} 0xFA, 0x45 {Icon Arrow_Left} 0xFA, 0x46 {Icon Mission_Note} 0xFA, 0x47 {Icon Thumbs_Up} 0xFA, 0x48 {Icon Bonus_Ability} 0xFA, 0x49 {Icon Defense_Up} 0xFA, 0x4A {Icon Canvas_Quest_Done} 0xFA, 0x4B {Icon Schema3} 0xFA, 0x4C {Icon Schema2} 0xFA, 0x4D {Icon Schema1} 0xFA, 0x4E {Icon Hourglass} 0xFA, 0x4F {Icon Lock} 0xFA, 0x50 {Icon Object0_Big} 0xFA, 0x51 {Icon Object1_Big} 0xFA, 0x52 {Icon Object2_Big} 0xFA, 0x53 {Icon Object_Star_Big} 0xFA, 0x54 {Icon Hammer} 0xFA, 0x55 {Icon Cube} 0xFA, 0x56 {Icon Hourglass_Half} 0xFA, 0x57 {Icon Megaphone} 0xFA, 0x58 {Icon Gift} 0xFA, 0x59 {Icon Object1_Small} 0xFA, 0x5A {Icon Object2_Small} 0xFA, 0x5B {Icon Object_Star_Small} 0xFA, 0x5C {Icon Wizard_Hat} 0xFA, 0x5D {Icon ATB_Speed} 0xFA, 0x5E {Icon Staggering} 0xFA, 0x5F {Icon Stagger_Preserve} 0xFA, 0x60 {Icon Small_Star} 0xFA, 0x61 {Icon Objective} 0xFB, 0x40 {Icon Sword} 0xFB, 0x41 {Icon Greatsword} 0xFB, 0x42 {Icon Rapier} 0xFB, 0x43 {Icon Dual_Blades} 0xFB, 0x44 {Icon Staff} 0xFB, 0x45 {Icon Spear} 0xFB, 0x46 {Icon Knife} 0xFB, 0x47 {Icon Water_Drop} 0xFB, 0x48 {Icon Datalog} 0xFB, 0x49 {Icon Eidolith_Crystal} 0xFB, 0x4A {Icon Wrench} 0xFB, 0x4B {Icon Mechanical_Material} 0xFB, 0x4C {Icon Synthetic_Component} 0xFB, 0x4D {Icon Organic_Component} 0xFB, 0x4E {Icon Catalyst_Component} 0xFB, 0x4F {Icon Arm_Accessory} 0xFB, 0x50 {Icon Ring} 0xFB, 0x51 {Icon Brooch} 0xFB, 0x52 {Icon Head_Accessory} 0xFB, 0x53 {Icon Container_Type1} 0xFB, 0x54 {Icon Container_Type2} 0xFB, 0x55 {Icon Container_Type3} 0xFB, 0x56 {Icon Phoenix_Down} 0xFB, 0x57 {Icon Clock} 0xFB, 0x58 {Icon Sack} 0xFB, 0x59 {Icon Auto_Ability} 0xFB, 0x5A {Icon Ability_Physical} 0xFB, 0x5B {Icon Ability_Magic} 0xFB, 0x5C {Icon Shield} 0xFB, 0x5D {Icon Heart_Plus} 0xFB, 0x5E {Icon Ability_Debuff} 0xFB, 0x5F {Icon Status_Ailment} 0xFB, 0x60 {Icon Ability_Buff} 0xFB, 0x61 {Icon Heart} 0xFB, 0x62 {Icon Greatsword2} 0xFB, 0x63 {Icon Unknown1} 0xFB, 0x64 {Icon Check_Mark} 0xFB, 0x65 {Icon Cross_Mark} 0xFB, 0x66 {Icon Unknown2} 0xFB, 0x67 {Icon Unknown3} 0xFB, 0x68 {Icon Ability_Eidolon} 0xFB, 0x69 {Icon EP} 0xFB, 0x6A {Icon Ribbon} 0xFB, 0x6B {Icon Amulet} 0xFB, 0x6C {Icon Necklace} 0xFB, 0x6D {Icon Plant_Component} 0xFB, 0x6E {Icon Fluid_Component} 0xFB, 0x6F {Icon Malistone} 0xFB, 0x70 {Icon Bow} 0xFB, 0x71 {Icon Dual_Blades2} 0xFB, 0x72 {Icon Question_Mark} 0xFB, 0x73 {Icon Gil} 0xFB, 0x74 {Icon Leveling_Allowed} 0xFB, 0x75 {Icon Map} 0xFB, 0x76 {Icon Garb} 0xFB, 0x77 {Icon Item_Capacity}"},{"location":"file-formats/text-format/encoding-keys-lr/#group-3_1","title":"Group 3","text":"<p>Important: For Korean (kr) ztr files.</p> Bytes Key 0xC9, 0xA1 {Icon Chat} 0xC9, 0xA2 {Icon Warning} 0xC9, 0xA3 {Icon Notification} 0xC9, 0xA4 {Icon Outerworld_Thoughts} 0xC9, 0xA5 {Icon Arrow_Right} 0xC9, 0xA6 {Icon Arrow_Left} 0xC9, 0xA7 {Icon Mission_Note} 0xC9, 0xA8 {Icon Thumbs_Up} 0xC9, 0xA9 {Icon Bonus_Ability} 0xC9, 0xAA {Icon Defense_Up} 0xC9, 0xAB {Icon Canvas_Quest_Done} 0xC9, 0xAC {Icon Schema3} 0xC9, 0xAD {Icon Schema2} 0xC9, 0xAE {Icon Schema1} 0xC9, 0xAF {Icon Hourglass} 0xC9, 0xB0 {Icon Lock} 0xC9, 0xB1 {Icon Object0_Big} 0xC9, 0xB2 {Icon Object1_Big} 0xC9, 0xB3 {Icon Object2_Big} 0xC9, 0xB4 {Icon Object_Star_Big} 0xC9, 0xB5 {Icon Hammer} 0xC9, 0xB6 {Icon Cube} 0xC9, 0xB7 {Icon Hourglass_Half} 0xC9, 0xB8 {Icon Megaphone} 0xC9, 0xB9 {Icon Gift} 0xC9, 0xBA {Icon Object1_Small} 0xC9, 0xBB {Icon Object2_Small} 0xC9, 0xBC {Icon Object_Star_Small} 0xC9, 0xBD {Icon Wizard_Hat} 0xC9, 0xBE {Icon ATB_Speed} 0xC9, 0xBF {Icon Staggering} 0xC9, 0xC0 {Icon Stagger_Preserve} 0xC9, 0xC1 {Icon Small_Star} 0xC9, 0xC2 {Icon Objective} 0xFE, 0xA1 {Icon Sword} 0xFE, 0xA2 {Icon Greatsword} 0xFE, 0xA3 {Icon Rapier} 0xFE, 0xA4 {Icon Dual_Blades} 0xFE, 0xA5 {Icon Staff} 0xFE, 0xA6 {Icon Spear} 0xFE, 0xA7 {Icon Knife} 0xFE, 0xA8 {Icon Water_Drop} 0xFE, 0xA9 {Icon Datalog} 0xFE, 0xAA {Icon Eidolith_Crystal} 0xFE, 0xAB {Icon Wrench} 0xFE, 0xAC {Icon Mechanical_Material} 0xFE, 0xAD {Icon Synthetic_Component} 0xFE, 0xAE {Icon Organic_Component} 0xFE, 0xAF {Icon Catalyst_Component} 0xFE, 0xB0 {Icon Arm_Accessory} 0xFE, 0xB1 {Icon Ring} 0xFE, 0xB2 {Icon Brooch} 0xFE, 0xB3 {Icon Head_Accessory} 0xFE, 0xB4 {Icon Container_Type1} 0xFE, 0xB5 {Icon Container_Type2} 0xFE, 0xB6 {Icon Container_Type3} 0xFE, 0xB7 {Icon Phoenix_Down} 0xFE, 0xB8 {Icon Clock} 0xFE, 0xB9 {Icon Sack} 0xFE, 0xBA {Icon Auto_Ability} 0xFE, 0xBB {Icon Ability_Physical} 0xFE, 0xBC {Icon Ability_Magic} 0xFE, 0xBD {Icon Shield} 0xFE, 0xBE {Icon Heart_Plus} 0xFE, 0xBF {Icon Ability_Debuff} 0xFE, 0xC0 {Icon Status_Ailment} 0xFE, 0xC1 {Icon Ability_Buff} 0xFE, 0xC2 {Icon Heart} 0xFE, 0xC3 {Icon Greatsword2} 0xFE, 0xC4 {Icon Unknown1} 0xFE, 0xC5 {Icon Check_Mark} 0xFE, 0xC6 {Icon Cross_Mark} 0xFE, 0xC7 {Icon Unknown2} 0xFE, 0xC8 {Icon Unknown3} 0xFE, 0xC9 {Icon Ability_Eidolon} 0xFE, 0xCA {Icon EP} 0xFE, 0xCB {Icon Ribbon} 0xFE, 0xCC {Icon Amulet} 0xFE, 0xCD {Icon Necklace} 0xFE, 0xCE {Icon Plant_Component} 0xFE, 0xCF {Icon Fluid_Component} 0xFE, 0xD0 {Icon Malistone} 0xFE, 0xD1 {Icon Bow} 0xFE, 0xD2 {Icon Dual_Blades2} 0xFE, 0xD3 {Icon Question_Mark} 0xFE, 0xD4 {Icon Gil} 0xFE, 0xD5 {Icon Leveling_Allowed} 0xFE, 0xD6 {Icon Map} 0xFE, 0xD7 {Icon Garb} 0xFE, 0xD8 {Icon Item_Capacity}"},{"location":"file-formats/text-format/encoding-keys-lr/#button-prompt-keys","title":"Button prompt keys","text":"<p>These keys are used in LIGHTNING RETURNS FINAL FANTASY XIII, to insert controller button icons next to a text when its displayed ingame. </p> <p>Button prompt Notes</p> <ul> <li>Keys <code>{Btn B_2}</code> and <code>(Btn A_2}</code> are duplicates of keys <code>{Btn B}</code> and <code>{Btn A}</code> respectively.</li> </ul>"},{"location":"file-formats/text-format/encoding-keys-lr/#group-1_2","title":"Group 1","text":"<p>Important: For English (us), French (fr), German (gr), Italian (it), Japanese (jp), and Spanish (sp) ztr files.</p> Bytes Key 0xF1, 0x40 {Btn A} 0xF1, 0x41 {Btn B} 0xF1, 0x42 {Btn X} 0xF1, 0x43 {Btn Y} 0xF1, 0x44 {Btn Start} 0xF1, 0x45 {Btn Back} 0xF1, 0x46 {Btn LB} 0xF1, 0x47 {Btn RB} 0xF1, 0x48 {Btn LT} 0xF1, 0x49 {Btn RT} 0xF1, 0x4A {Btn DPadLeft} 0xF1, 0x4B {Btn DPadDown} 0xF1, 0x4C {Btn DPadRight} 0xF1, 0x4D {Btn DPadUp} 0xF1, 0x4E {Btn LSLeft} 0xF1, 0x4F {Btn LSDown} 0xF1, 0x50 {Btn LSRight} 0xF1, 0x51 {Btn LSUp} 0xF1, 0x52 {Btn LSLeftRight} 0xF1, 0x53 {Btn LSUpDown} 0xF1, 0x54 {Btn L3Press} 0xF1, 0x55 {Btn R3Press} 0xF1, 0x56 {Btn RSLeft} 0xF1, 0x57 {Btn RSDown} 0xF1, 0x58 {Btn RSRight} 0xF1, 0x59 {Btn RSUp} 0xF1, 0x5A {Btn RSLeftRight} 0xF1, 0x5B {Btn RSUpDown} 0xF1, 0x5C {Btn LStick} 0xF1, 0x5D {Btn RStick} 0xF1, 0x5E {Btn DPadLeftRight} 0xF1, 0x5F {Btn DPadUpDown} 0xF1, 0x60 {Btn DPad} 0xF1, 0x61 {Btn B_2} 0xF1, 0x62 {Btn A_2}"},{"location":"file-formats/text-format/encoding-keys-lr/#group-2_2","title":"Group 2","text":"<p>Important: For Chinese (ch) ztr files.</p> Bytes Key 0xFA, 0xA1 {Btn A} 0xFA, 0xA2 {Btn B} 0xFA, 0xA3 {Btn X} 0xFA, 0xA4 {Btn Y} 0xFA, 0xA5 {Btn Start} 0xFA, 0xA6 {Btn Back} 0xFA, 0xA7 {Btn LB} 0xFA, 0xA8 {Btn RB} 0xFA, 0xA9 {Btn LT} 0xFA, 0xAA {Btn RT} 0xFA, 0xAB {Btn DPadLeft} 0xFA, 0xAC {Btn DPadDown} 0xFA, 0xAD {Btn DPadRight} 0xFA, 0xAE {Btn DPadUp} 0xFA, 0xAF {Btn LSLeft} 0xFA, 0xB0 {Btn LSDown} 0xFA, 0xB1 {Btn LSRight} 0xFA, 0xB2 {Btn LSUp} 0xFA, 0xB3 {Btn LSLeftRight} 0xFA, 0xB4 {Btn LSUpDown} 0xFA, 0xB5 {Btn L3Press} 0xFA, 0xB6 {Btn R3Press} 0xFA, 0xB7 {Btn RSLeft} 0xFA, 0xB8 {Btn RSDown} 0xFA, 0xB9 {Btn RSRight} 0xFA, 0xBA {Btn RSUp} 0xFA, 0xBB {Btn RSLeftRight} 0xFA, 0xBC {Btn RSUpDown} 0xFA, 0xBD {Btn LStick} 0xFA, 0xBE {Btn RStick} 0xFA, 0xBF {Btn DPadLeftRight} 0xFA, 0xC0 {Btn DPadUpDown} 0xFA, 0xC1 {Btn DPad} 0xFA, 0xC2 {Btn B_2} 0xFA, 0xC3 {Btn A_2}"},{"location":"file-formats/text-format/encoding-keys-lr/#group-3_2","title":"Group 3","text":"<p>Important: For Korean (kr) ztr files.</p> Bytes Key 0xC9, 0xD0 {Btn A} 0xC9, 0xD1 {Btn B} 0xC9, 0xD2 {Btn X} 0xC9, 0xD3 {Btn Y} 0xC9, 0xD4 {Btn Start} 0xC9, 0xD5 {Btn Back} 0xC9, 0xD6 {Btn LB} 0xC9, 0xD7 {Btn RB} 0xC9, 0xD8 {Btn LT} 0xC9, 0xD9 {Btn RT} 0xC9, 0xDA {Btn DPadLeft} 0xC9, 0xDB {Btn DPadDown} 0xC9, 0xDC {Btn DPadRight} 0xC9, 0xDD {Btn DPadUp} 0xC9, 0xDE {Btn LSLeft} 0xC9, 0xDF {Btn LSDown} 0xC9, 0xE0 {Btn LSRight} 0xC9, 0xE1 {Btn LSUp} 0xC9, 0xE2 {Btn LSLeftRight} 0xC9, 0xE3 {Btn LSUpDown} 0xC9, 0xE4 {Btn L3Press} 0xC9, 0xE5 {Btn R3Press} 0xC9, 0xE6 {Btn RSLeft} 0xC9, 0xE7 {Btn RSDown} 0xC9, 0xE8 {Btn RSRight} 0xC9, 0xE9 {Btn RSUp} 0xC9, 0xEA {Btn RSLeftRight} 0xC9, 0xEB {Btn RSUpDown} 0xC9, 0xEC {Btn LStick} 0xC9, 0xED {Btn RStick} 0xC9, 0xEE {Btn DPadLeftRight} 0xC9, 0xEF {Btn DPadUpDown} 0xC9, 0xF0 {Btn DPad} 0xC9, 0xF1 {Btn B_2} 0xC9, 0xF2 {Btn A_2}"},{"location":"file-formats/text-format/encoding-keys-xiii/","title":"Encoding Keys XIII","text":"<p>This page contains encoding keys used only by FINAL FANTASY XIII.</p>"},{"location":"file-formats/text-format/encoding-keys-xiii/#color-keys","title":"Color keys","text":"<p>The color keys indicate the color with which a particular portion of text is displayed ingame in FINAL FANTASY XIII.  Please refer the image given below, to get a better idea on how the colors would look like when its displayed ingame.</p> <p></p> <p>Color Notes</p> <ul> <li>The ones that begin with 'Ex' are semi transparent colors which are mostly unused by the game.</li> </ul>"},{"location":"file-formats/text-format/encoding-keys-xiii/#group-1","title":"Group 1","text":"<p>Important: For English (us), French (fr), German (gr), Italian (it), Japanese (jp), and Spanish (sp) ztr files.</p> Bytes Key 0xF9, 0x32 {Color Ex00} 0xF9, 0x33 {Color Ex01} 0xF9, 0x34 {Color Ex02} 0xF9, 0x35 {Color Ex03} 0xF9, 0x36 {Color Ex04} 0xF9, 0x37 {Color Ex05} 0xF9, 0x38 {Color Ex06} 0xF9, 0x39 {Color Ex07} 0xF9, 0x3A {Color Ex08} 0xF9, 0x3B {Color Ex09} 0xF9, 0x3C {Color Ex10} 0xF9, 0x3D {Color Ex11} 0xF9, 0x3E {Color Ex12} 0xF9, 0x3F {Color Ex13} 0xF9, 0x40 {Color White} 0xF9, 0x41 {Color IceBlue} 0xF9, 0x42 {Color Gold} 0xF9, 0x43 {Color LightRed} 0xF9, 0x44 {Color Yellow} 0xF9, 0x45 {Color Green} 0xF9, 0x46 {Color Gray} 0xF9, 0x47 {Color LightGold} 0xF9, 0x48 {Color Rose} 0xF9, 0x49 {Color Purple} 0xF9, 0x4A {Color DarkYellow} 0xF9, 0x4B {Color Gray2} 0xF9, 0x4C {Color Voilet} 0xF9, 0x4D {Color LightGreen} 0xF9, 0x4F {Color Ex14} 0xF9, 0x50 {Color Ex15} 0xF9, 0x51 {Color Ex16} 0xF9, 0x52 {Color Ex17} 0xF9, 0x53 {Color Ex18} 0xF9, 0x54 {Color Ex19} 0xF9, 0x55 {Color Ex20} 0xF9, 0x56 {Color Ex21} 0xF9, 0x57 {Color Ex22} 0xF9, 0x58 {Color Ex23} 0xF9, 0x59 {Color Ex24} 0xF9, 0x5A {Color Ex25} 0xF9, 0x5B {Color Ex26} 0xF9, 0x5E {Color Ex27} 0xF9, 0x5F {Color Ex28}"},{"location":"file-formats/text-format/encoding-keys-xiii/#group-2","title":"Group 2","text":"<p>Important: For Chinese (ch) ztr files.</p> Bytes Key 0xFE, 0x32 {Color Ex00} 0xFE, 0x33 {Color Ex01} 0xFE, 0x34 {Color Ex02} 0xFE, 0x35 {Color Ex03} 0xFE, 0x36 {Color Ex04} 0xFE, 0x37 {Color Ex05} 0xFE, 0x38 {Color Ex06} 0xFE, 0x39 {Color Ex07} 0xFE, 0x3A {Color Ex08} 0xFE, 0x3B {Color Ex09} 0xFE, 0x3C {Color Ex10} 0xFE, 0x3D {Color Ex11} 0xFE, 0x3E {Color Ex12} 0xFE, 0x3F {Color Ex13} 0xFE, 0x40 {Color White} 0xFE, 0x41 {Color IceBlue} 0xFE, 0x42 {Color Gold} 0xFE, 0x43 {Color LightRed} 0xFE, 0x44 {Color Yellow} 0xFE, 0x45 {Color Green} 0xFE, 0x46 {Color Gray} 0xFE, 0x47 {Color LightGold} 0xFE, 0x48 {Color Rose} 0xFE, 0x49 {Color Purple} 0xFE, 0x4A {Color DarkYellow} 0xFE, 0x4B {Color Gray2} 0xFE, 0x4C {Color Voilet} 0xFE, 0x4D {Color LightGreen} 0xFE, 0x4F {Color Ex14} 0xFE, 0x50 {Color Ex15} 0xFE, 0x51 {Color Ex16} 0xFE, 0x52 {Color Ex17} 0xFE, 0x53 {Color Ex18} 0xFE, 0x54 {Color Ex19} 0xFE, 0x55 {Color Ex20} 0xFE, 0x56 {Color Ex21} 0xFE, 0x57 {Color Ex22} 0xFE, 0x58 {Color Ex23} 0xFE, 0x59 {Color Ex24} 0xFE, 0x5A {Color Ex25} 0xFE, 0x5B {Color Ex26} 0xFE, 0x5E {Color Ex27} 0xFE, 0x5F {Color Ex28}"},{"location":"file-formats/text-format/encoding-keys-xiii/#group-3","title":"Group 3","text":"<p>Important: For Korean (kr) ztr files.</p> Bytes Key 0xAC, 0x93 {Color Ex00} 0xAC, 0x94 {Color Ex01} 0xAC, 0x95 {Color Ex02} 0xAC, 0x96 {Color Ex03} 0xAC, 0x97 {Color Ex04} 0xAC, 0x98 {Color Ex05} 0xAC, 0x99 {Color Ex06} 0xAC, 0x9A {Color Ex07} 0xAC, 0x9B {Color Ex08} 0xAC, 0x9C {Color Ex09} 0xAC, 0x9D {Color Ex10} 0xAC, 0x9E {Color Ex11} 0xAC, 0x9F {Color Ex12} 0xAC, 0xA0 {Color Ex13} 0xAC, 0xA1 {Color White} 0xAC, 0xA2 {Color IceBlue} 0xAC, 0xA3 {Color Gold} 0xAC, 0xA4 {Color LightRed} 0xAC, 0xA5 {Color Yellow} 0xAC, 0xA6 {Color Green} 0xAC, 0xA7 {Color Gray} 0xAC, 0xA8 {Color LightGold} 0xAC, 0xA9 {Color Rose} 0xAC, 0xAA {Color Purple} 0xAC, 0xAB {Color DarkYellow} 0xAC, 0xAC {Color Gray2} 0xAC, 0xAD {Color Voilet} 0xAC, 0xAE {Color LightGreen} 0xAC, 0xB0 {Color Ex14} 0xAC, 0xB1 {Color Ex15} 0xAC, 0xB2 {Color Ex16} 0xAC, 0xB3 {Color Ex17} 0xAC, 0xB4 {Color Ex18} 0xAC, 0xB5 {Color Ex19} 0xAC, 0xB6 {Color Ex20} 0xAC, 0xB7 {Color Ex21} 0xAC, 0xB8 {Color Ex22} 0xAC, 0xB9 {Color Ex23} 0xAC, 0xBA {Color Ex24} 0xAC, 0xBB {Color Ex25} 0xAC, 0xBC {Color Ex26} 0xAC, 0xBF {Color Ex27} 0xAC, 0xC0 {Color Ex28}"},{"location":"file-formats/text-format/encoding-keys-xiii/#icon-keys","title":"Icon keys","text":"<p>These keys are used in FINAL FANTASY XIII, to insert special icons next to a text when its displayed ingame.  Please refer the below image for the icons. </p> <p></p> <p>The order of the keys given in the tables below would be the order of the icons in the image from the left side.</p>"},{"location":"file-formats/text-format/encoding-keys-xiii/#group-1_1","title":"Group 1","text":"<p>Important: For English (us), French (fr), German (gr), Italian (it), Japanese (jp), and Spanish (sp) ztr files.</p> Bytes Key 0xF0, 0x40 {Icon Clock} 0xF0, 0x41 {Icon Warning} 0xF0, 0x42 {Icon Notification} 0xF0, 0x43 {Icon Gil} 0xF0, 0x44 {Icon Arrow_Right} 0xF0, 0x45 {Icon Arrow_Left} 0xF0, 0x46 {Icon Mission_Note} 0xF0, 0x47 {Icon Check_Mark} 0xF0, 0x48 {Icon Ability_Synthesized} 0xF2, 0x40 {Icon Gunblade} 0xF2, 0x41 {Icon Pistol} 0xF2, 0x42 {Icon Emblem} 0xF2, 0x43 {Icon Boomerang} 0xF2, 0x44 {Icon Staff} 0xF2, 0x45 {Icon Spear} 0xF2, 0x46 {Icon Knife} 0xF2, 0x47 {Icon Water_Drop} 0xF2, 0x48 {Icon Datalog} 0xF2, 0x49 {Icon Eidolith_Crystal} 0xF2, 0x4A {Icon Omni_Kit} 0xF2, 0x4B {Icon Shop_Pass} 0xF2, 0x4C {Icon Synthetic_Component} 0xF2, 0x4D {Icon Organic_Component} 0xF2, 0x4E {Icon Catalyst_Component} 0xF2, 0x4F {Icon Accessory_Type1} 0xF2, 0x50 {Icon Accessory_Type2} 0xF2, 0x51 {Icon Accessory_Type3} 0xF2, 0x52 {Icon Accessory_Type4} 0xF2, 0x53 {Icon Potion} 0xF2, 0x54 {Icon Container_Type1} 0xF2, 0x55 {Icon Container_Type2} 0xF2, 0x56 {Icon Phoenix_Down} 0xF2, 0x57 {Icon Shroud} 0xF2, 0x58 {Icon Sack} 0xF2, 0x59 {Icon Ability_Passive} 0xF2, 0x5A {Icon Ability_Physical} 0xF2, 0x5B {Icon Ability_Magic} 0xF2, 0x5C {Icon Ability_Defense} 0xF2, 0x5D {Icon Ability_Heal} 0xF2, 0x5E {Icon Ability_Debuff} 0xF2, 0x5F {Icon Status_Ailment} 0xF2, 0x60 {Icon Ability_Buff} 0xF2, 0x61 {Icon Alert} 0xF2, 0x62 {Icon Sword} 0xF2, 0x63 {Icon Shield} 0xF2, 0x64 {Icon Magic_Staff} 0xF2, 0x65 {Icon Unknown1} 0xF2, 0x66 {Icon Unknown2} 0xF2, 0x67 {Icon Unknown3} 0xF2, 0x68 {Icon Ability_Eidolon} 0xF2, 0x69 {Icon Ability_Technique} 0xF2, 0x6A {Icon Ribbon} 0xF2, 0x6B {Icon Amulet} 0xF2, 0x6C {Icon Necklace}"},{"location":"file-formats/text-format/encoding-keys-xiii/#group-2_1","title":"Group 2","text":"<p>Important: For Chinese (ch) ztr files.</p> Bytes Key 0xFA, 0x40 {Icon Clock} 0xFA, 0x41 {Icon Warning} 0xFA, 0x42 {Icon Notification} 0xFA, 0x43 {Icon Gil} 0xFA, 0x44 {Icon Arrow_Right} 0xFA, 0x45 {Icon Arrow_Left} 0xFA, 0x46 {Icon Mission_Note} 0xFA, 0x47 {Icon Check_Mark} 0xFA, 0x48 {Icon Ability_Synthesized} 0xFB, 0x40 {Icon Gunblade} 0xFB, 0x41 {Icon Pistol} 0xFB, 0x42 {Icon Emblem} 0xFB, 0x43 {Icon Boomerang} 0xFB, 0x44 {Icon Staff} 0xFB, 0x45 {Icon Spear} 0xFB, 0x46 {Icon Knife} 0xFB, 0x47 {Icon Water_Drop} 0xFB, 0x48 {Icon Datalog} 0xFB, 0x49 {Icon Eidolith_Crystal} 0xFB, 0x4A {Icon Omni_Kit} 0xFB, 0x4B {Icon Shop_Pass} 0xFB, 0x4C {Icon Synthetic_Component} 0xFB, 0x4D {Icon Organic_Component} 0xFB, 0x4E {Icon Catalyst_Component} 0xFB, 0x4F {Icon Accessory_Type1} 0xFB, 0x50 {Icon Accessory_Type2} 0xFB, 0x51 {Icon Accessory_Type3} 0xFB, 0x52 {Icon Accessory_Type4} 0xFB, 0x53 {Icon Potion} 0xFB, 0x54 {Icon Container_Type1} 0xFB, 0x55 {Icon Container_Type2} 0xFB, 0x56 {Icon Phoenix_Down} 0xFB, 0x57 {Icon Shroud} 0xFB, 0x58 {Icon Sack} 0xFB, 0x59 {Icon Ability_Passive} 0xFB, 0x5A {Icon Ability_Physical} 0xFB, 0x5B {Icon Ability_Magic} 0xFB, 0x5C {Icon Ability_Defense} 0xFB, 0x5D {Icon Ability_Heal} 0xFB, 0x5E {Icon Ability_Debuff} 0xFB, 0x5F {Icon Status_Ailment} 0xFB, 0x60 {Icon Ability_Buff} 0xFB, 0x61 {Icon Alert} 0xFB, 0x62 {Icon Sword} 0xFB, 0x63 {Icon Shield} 0xFB, 0x64 {Icon Magic_Staff} 0xFB, 0x65 {Icon Unknown1} 0xFB, 0x66 {Icon Unknown2} 0xFB, 0x67 {Icon Unknown3} 0xFB, 0x68 {Icon Ability_Eidolon} 0xFB, 0x69 {Icon Ability_Technique} 0xFB, 0x6A {Icon Ribbon} 0xFB, 0x6B {Icon Amulet} 0xFB, 0x6C {Icon Necklace}"},{"location":"file-formats/text-format/encoding-keys-xiii/#group-3_1","title":"Group 3","text":"<p>Important: For Korean (kr) ztr files.</p> Bytes Key 0xC9, 0xA1 {Icon Clock} 0xC9, 0xA2 {Icon Warning} 0xC9, 0xA3 {Icon Notification} 0xC9, 0xA4 {Icon Gil} 0xC9, 0xA5 {Icon Arrow_Right} 0xC9, 0xA6 {Icon Arrow_Left} 0xC9, 0xA7 {Icon Mission_Note} 0xC9, 0xA8 {Icon Check_Mark} 0xC9, 0xA9 {Icon Ability_Synthesized} 0xFE, 0xA1 {Icon Gunblade} 0xFE, 0xA2 {Icon Pistol} 0xFE, 0xA3 {Icon Emblem} 0xFE, 0xA4 {Icon Boomerang} 0xFE, 0xA5 {Icon Staff} 0xFE, 0xA6 {Icon Spear} 0xFE, 0xA7 {Icon Knife} 0xFE, 0xA8 {Icon Water_Drop} 0xFE, 0xA9 {Icon Datalog} 0xFE, 0xAA {Icon Eidolith_Crystal} 0xFE, 0xAB {Icon Omni_Kit} 0xFE, 0xAC {Icon Shop_Pass} 0xFE, 0xAD {Icon Synthetic_Component} 0xFE, 0xAE {Icon Organic_Component} 0xFE, 0xAF {Icon Catalyst_Component} 0xFE, 0xB0 {Icon Accessory_Type1} 0xFE, 0xB1 {Icon Accessory_Type2} 0xFE, 0xB2 {Icon Accessory_Type3} 0xFE, 0xB3 {Icon Accessory_Type4} 0xFE, 0xB4 {Icon Potion} 0xFE, 0xB5 {Icon Container_Type1} 0xFE, 0xB6 {Icon Container_Type2} 0xFE, 0xB7 {Icon Phoenix_Down} 0xFE, 0xB8 {Icon Shroud} 0xFE, 0xB9 {Icon Sack} 0xFE, 0xBA {Icon Ability_Passive} 0xFE, 0xBB {Icon Ability_Physical} 0xFE, 0xBC {Icon Ability_Magic} 0xFE, 0xBD {Icon Ability_Defense} 0xFE, 0xBE {Icon Ability_Heal} 0xFE, 0xBF {Icon Ability_Debuff} 0xFE, 0xC0 {Icon Status_Ailment} 0xFE, 0xC1 {Icon Ability_Buff} 0xFE, 0xC2 {Icon Alert} 0xFE, 0xC3 {Icon Sword} 0xFE, 0xC4 {Icon Shield} 0xFE, 0xC5 {Icon Magic_Staff} 0xFE, 0xC6 {Icon Unknown1} 0xFE, 0xC7 {Icon Unknown2} 0xFE, 0xC8 {Icon Unknown3} 0xFE, 0xC9 {Icon Ability_Eidolon} 0xFE, 0xCA {Icon Ability_Technique} 0xFE, 0xCB {Icon Ribbon} 0xFE, 0xCC {Icon Amulet} 0xFE, 0xCD {Icon Necklace}"},{"location":"file-formats/text-format/encoding-keys-xiii/#button-prompt-keys","title":"Button prompt keys","text":"<p>These keys are used in FINAL FANTASY XIII, to insert controller button icons next to a text when its displayed ingame. </p>"},{"location":"file-formats/text-format/encoding-keys-xiii/#group-1_2","title":"Group 1","text":"<p>Important: For English (us), French (fr), German (gr), Italian (it), Japanese (jp), and Spanish (sp) ztr files.</p> Bytes Key 0xF1, 0x40 {Btn A} 0xF1, 0x41 {Btn B} 0xF1, 0x42 {Btn X} 0xF1, 0x43 {Btn Y} 0xF1, 0x44 {Btn Start} 0xF1, 0x45 {Btn Back} 0xF1, 0x46 {Btn LB} 0xF1, 0x47 {Btn RB} 0xF1, 0x48 {Btn LT} 0xF1, 0x49 {Btn RT} 0xF1, 0x4A {Btn DPadLeft} 0xF1, 0x4B {Btn DPadDown} 0xF1, 0x4C {Btn DPadRight} 0xF1, 0x4D {Btn DPadUp} 0xF1, 0x4E {Btn LSLeft} 0xF1, 0x4F {Btn LSDown} 0xF1, 0x50 {Btn LSRight} 0xF1, 0x51 {Btn LSUp} 0xF1, 0x52 {Btn LSLeftRight} 0xF1, 0x53 {Btn LSUpDown} 0xF1, 0x54 {Btn LSPress} 0xF1, 0x55 {Btn RSPress} 0xF1, 0x56 {Btn RSLeft} 0xF1, 0x57 {Btn RSDown} 0xF1, 0x58 {Btn RSRight} 0xF1, 0x59 {Btn RSUp} 0xF1, 0x5A {Btn RSLeftRight} 0xF1, 0x5B {Btn RSUpDown} 0xF1, 0x5C {Btn LStick} 0xF1, 0x5D {Btn RStick} 0xF1, 0x5E {Btn DPadUpDown} 0xF1, 0x5F {Btn DPadLeftRight} 0xF1, 0x60 {Btn DPad}"},{"location":"file-formats/text-format/encoding-keys-xiii/#group-2_2","title":"Group 2","text":"<p>Important: For Chinese (ch) ztr files.</p> Bytes Key 0xFA, 0x49 {Btn A} 0xFA, 0x4A {Btn B} 0xFA, 0x4B {Btn X} 0xFA, 0x4C {Btn Y} 0xFA, 0x4D {Btn Start} 0xFA, 0x4E {Btn Back} 0xFA, 0x4F {Btn LB} 0xFA, 0x50 {Btn RB} 0xFA, 0x51 {Btn LT} 0xFA, 0x52 {Btn RT} 0xFA, 0x53 {Btn DPadLeft} 0xFA, 0x54 {Btn DPadDown} 0xFA, 0x55 {Btn DPadRight} 0xFA, 0x56 {Btn DPadUp} 0xFA, 0x57 {Btn LSLeft} 0xFA, 0x58 {Btn LSDown} 0xFA, 0x59 {Btn LSRight} 0xFA, 0x5A {Btn LSUp} 0xFA, 0x5B {Btn LSLeftRight} 0xFA, 0x5C {Btn LSUpDown} 0xFA, 0x5D {Btn LSPress} 0xFA, 0x5E {Btn RSPress} 0xFA, 0x5F {Btn RSLeft} 0xFA, 0x60 {Btn RSDown} 0xFA, 0x61 {Btn RSRight} 0xFA, 0x62 {Btn RSUp} 0xFA, 0x63 {Btn RSLeftRight} 0xFA, 0x64 {Btn RSUpDown} 0xFA, 0x65 {Btn LStick} 0xFA, 0x66 {Btn RStick} 0xFA, 0x67 {Btn DPadUpDown} 0xFA, 0x68 {Btn DPadLeftRight} 0xFA, 0x69 {Btn DPad}"},{"location":"file-formats/text-format/encoding-keys-xiii/#group-3_2","title":"Group 3","text":"<p>Important: For Korean (kr) ztr files.</p> Bytes Key 0xC9, 0xAA {Btn A} 0xC9, 0xAB {Btn B} 0xC9, 0xAC {Btn X} 0xC9, 0xAD {Btn Y} 0xC9, 0xAE {Btn Start} 0xC9, 0xAF {Btn Back} 0xC9, 0xB0 {Btn LB} 0xC9, 0xB1 {Btn RB} 0xC9, 0xB2 {Btn LT} 0xC9, 0xB3 {Btn RT} 0xC9, 0xB4 {Btn DPadLeft} 0xC9, 0xB5 {Btn DPadDown} 0xC9, 0xB6 {Btn DPadRight} 0xC9, 0xB7 {Btn DPadUp} 0xC9, 0xB8 {Btn LSLeft} 0xC9, 0xB9 {Btn LSDown} 0xC9, 0xBA {Btn LSRight} 0xC9, 0xBB {Btn LSUp} 0xC9, 0xBC {Btn LSLeftRight} 0xC9, 0xBD {Btn LSUpDown} 0xC9, 0xBE {Btn LSPress} 0xC9, 0xBF {Btn RSPress} 0xC9, 0xC0 {Btn RSLeft} 0xC9, 0xC1 {Btn RSDown} 0xC9, 0xC2 {Btn RSRight} 0xC9, 0xC3 {Btn RSUp} 0xC9, 0xC4 {Btn RSLeftRight} 0xC9, 0xC5 {Btn RSUpDown} 0xC9, 0xC6 {Btn LStick} 0xC9, 0xC7 {Btn RStick} 0xC9, 0xC8 {Btn DPadUpDown} 0xC9, 0xC9 {Btn DPadLeftRight} 0xC9, 0xCA {Btn DPad}"},{"location":"file-formats/text-format/encoding-keys-xiii2/","title":"Encoding Keys XIII-2","text":"<p>This page contains encoding keys used only by FINAL FANTASY XIII-2.</p>"},{"location":"file-formats/text-format/encoding-keys-xiii2/#color-keys","title":"Color keys","text":"<p>The color keys indicate the color with which a particular portion of text is displayed ingame in FINAL FANTASY XIII-2.  Please refer the image given below, to get a better idea on how the colors would look like when its displayed ingame.</p> <p></p>"},{"location":"file-formats/text-format/encoding-keys-xiii2/#group-1","title":"Group 1","text":"<p>Important: For English (us), French (fr), German (gr), Italian (it), Japanese (jp), and Spanish (sp) ztr files.</p> Bytes Key 0xF9, 0x40 {Color White} 0xF9, 0x41 {Color IceBlue} 0xF9, 0x42 {Color Gold} 0xF9, 0x43 {Color LightRed} 0xF9, 0x44 {Color Yellow} 0xF9, 0x45 {Color Green} 0xF9, 0x46 {Color Gray} 0xF9, 0x47 {Color LightGold} 0xF9, 0x48 {Color Rose} 0xF9, 0x49 {Color Purple} 0xF9, 0x4A {Color DarkYellow} 0xF9, 0x4B {Color Gray2} 0xF9, 0x4C {Color Voilet} 0xF9, 0x4D {Color LightGreen} 0xF9, 0x4E {Color Sapphire} 0xF9, 0x4F {Color Voilet2} 0xF9, 0x50 {Color OliveGreen} 0xF9, 0x51 {Color DarkCyan} 0xF9, 0x52 {Color Lavender} 0xF9, 0x53 {Color Brown} 0xF9, 0x54 {Color Gold2} 0xF9, 0x55 {Color Gold3} 0xF9, 0x56 {Color DarkGray} 0xF9, 0x57 {Color DarkRed} 0xF9, 0x58 {Color Jade} 0xF9, 0x59 {Color SmokeGray} 0xF9, 0x5A {Color DarkGold} 0xF9, 0x5B {Color Magenta} 0xF9, 0x5C {Color PureWhite} 0xF9, 0x5D {Color Orange} 0xF9, 0x5E {Color NavyBlue}"},{"location":"file-formats/text-format/encoding-keys-xiii2/#group-2","title":"Group 2","text":"<p>Important: For Chinese (ch) ztr files.</p> Bytes Key 0xFE, 0x40 {Color White} 0xFE, 0x41 {Color IceBlue} 0xFE, 0x42 {Color Gold} 0xFE, 0x43 {Color LightRed} 0xFE, 0x44 {Color Yellow} 0xFE, 0x45 {Color Green} 0xFE, 0x46 {Color Gray} 0xFE, 0x47 {Color LightGold} 0xFE, 0x48 {Color Rose} 0xFE, 0x49 {Color Purple} 0xFE, 0x4A {Color DarkYellow} 0xFE, 0x4B {Color Gray2} 0xFE, 0x4C {Color Voilet} 0xFE, 0x4D {Color LightGreen} 0xFE, 0x4E {Color Sapphire} 0xFE, 0x4F {Color Voilet2} 0xFE, 0x50 {Color OliveGreen} 0xFE, 0x51 {Color DarkCyan} 0xFE, 0x52 {Color Lavender} 0xFE, 0x53 {Color Brown} 0xFE, 0x54 {Color Gold2} 0xFE, 0x55 {Color Gold3} 0xFE, 0x56 {Color DarkGray} 0xFE, 0x57 {Color DarkRed} 0xFE, 0x58 {Color Jade} 0xFE, 0x59 {Color SmokeGray} 0xFE, 0x5A {Color DarkGold} 0xFE, 0x5B {Color Magenta} 0xFE, 0x5C {Color PureWhite} 0xFE, 0x5D {Color Orange} 0xFE, 0x5E {Color NavyBlue}"},{"location":"file-formats/text-format/encoding-keys-xiii2/#group-3","title":"Group 3","text":"<p>Important: For Korean (kr) ztr files.</p> Bytes Key 0xAC, 0xA1 {Color White} 0xAC, 0xA2 {Color IceBlue} 0xAC, 0xA3 {Color Gold} 0xAC, 0xA4 {Color LightRed} 0xAC, 0xA5 {Color Yellow} 0xAC, 0xA6 {Color Green} 0xAC, 0xA7 {Color Gray} 0xAC, 0xA8 {Color LightGold} 0xAC, 0xA9 {Color Rose} 0xAC, 0xAA {Color Purple} 0xAC, 0xAB {Color DarkYellow} 0xAC, 0xAC {Color Gray2} 0xAC, 0xAD {Color Voilet} 0xAC, 0xAE {Color LightGreen} 0xAC, 0xAF {Color Sapphire} 0xAC, 0xB0 {Color Voilet2} 0xAC, 0xB1 {Color OliveGreen} 0xAC, 0xB2 {Color DarkCyan} 0xAC, 0xB3 {Color Lavender} 0xAC, 0xB4 {Color Brown} 0xAC, 0xB5 {Color Gold2} 0xAC, 0xB6 {Color Gold3} 0xAC, 0xB7 {Color DarkGray} 0xAC, 0xB8 {Color DarkRed} 0xAC, 0xB9 {Color Jade} 0xAC, 0xBA {Color SmokeGray} 0xAC, 0xBB {Color DarkGold} 0xAC, 0xBC {Color Magenta} 0xAC, 0xBD {Color PureWhite} 0xAC, 0xBE {Color Orange} 0xAC, 0xBF {Color NavyBlue}"},{"location":"file-formats/text-format/encoding-keys-xiii2/#icon-keys","title":"Icon keys","text":"<p>These keys are used in FINAL FANTASY XIII-2, to insert special icons next to a text when its displayed ingame.  Please refer the below image for the icons. </p> <p></p> <p>The order of the keys given in the tables below would be the order of the icons in the image from the left side.</p>"},{"location":"file-formats/text-format/encoding-keys-xiii2/#group-1_1","title":"Group 1","text":"<p>Important: For English (us), French (fr), German (gr), Italian (it), Japanese (jp), and Spanish (sp) ztr files.</p> Bytes Key 0xF0, 0x40 {Icon Clock} 0xF0, 0x41 {Icon Warning} 0xF0, 0x42 {Icon Notification} 0xF0, 0x43 {Icon Gil} 0xF0, 0x44 {Icon Arrow_Right} 0xF0, 0x45 {Icon Arrow_Left} 0xF0, 0x46 {Icon Mission_Note} 0xF0, 0x47 {Icon Check_Mark} 0xF0, 0x48 {Icon Bonus_Ability} 0xF0, 0x49 {Icon Foot_Print} 0xF0, 0x4A {Icon Tamed_Crystal} 0xF0, 0x4B {Icon Monster_Cross} 0xF0, 0x4C {Icon Monster} 0xF0, 0x4D {Icon Casino_Coins} 0xF0, 0x4E {Icon Lock_Type1} 0xF0, 0x4F {Icon Lock_Type2} 0xF0, 0x50 {Icon Paradigm_Cross} 0xF0, 0x51 {Icon Paradigm_Wide} 0xF0, 0x52 {Icon Paradigm_Normal} 0xF0, 0x53 {Icon Chocobo_Strat} 0xF0, 0x54 {Icon Terrible_Condition} 0xF0, 0x55 {Icon Subpar_Condition} 0xF0, 0x56 {Icon Normal_Condition} 0xF0, 0x57 {Icon Good_Condition} 0xF0, 0x58 {Icon Top_Condition} 0xF0, 0x59 {Icon Nine} 0xF0, 0x5A {Icon Tiny_Bomb} 0xF0, 0x5B {Icon Tiny_Chocobo} 0xF0, 0x5C {Icon Tiny_Mog} 0xF0, 0x5D {Icon Cactuar} 0xF0, 0x5E {Icon Tiny_Chu} 0xF0, 0x5F {Icon Heart} 0xF0, 0x60 {Icon Plus} 0xF0, 0x61 {Icon Objective} 0xF2, 0x40 {Icon Gunblade} 0xF2, 0x41 {Icon Pistol} 0xF2, 0x42 {Icon Emblem} 0xF2, 0x43 {Icon Boomerang} 0xF2, 0x44 {Icon Staff} 0xF2, 0x45 {Icon Spear} 0xF2, 0x46 {Icon Knife} 0xF2, 0x47 {Icon Gate_Seal} 0xF2, 0x48 {Icon Datalog} 0xF2, 0x49 {Icon Eidolith_Crystal} 0xF2, 0x4A {Icon Wrench} 0xF2, 0x4B {Icon Mechanical_Material} 0xF2, 0x4C {Icon Synthetic_Component} 0xF2, 0x4D {Icon Organic_Component} 0xF2, 0x4E {Icon Catalyst_Component} 0xF2, 0x4F {Icon Bracelet} 0xF2, 0x50 {Icon Ring} 0xF2, 0x51 {Icon Brooch} 0xF2, 0x52 {Icon Belt} 0xF2, 0x53 {Icon Container_Type1} 0xF2, 0x54 {Icon Container_Type2} 0xF2, 0x55 {Icon Container_Type3} 0xF2, 0x56 {Icon Phoenix_Down} 0xF2, 0x57 {Icon Shroud} 0xF2, 0x58 {Icon Sack} 0xF2, 0x59 {Icon Ability_Passive} 0xF2, 0x5A {Icon Ability_Physical} 0xF2, 0x5B {Icon Ability_Magic} 0xF2, 0x5C {Icon Ability_Defense} 0xF2, 0x5D {Icon Heart_Plus} 0xF2, 0x5E {Icon Ability_Debuff} 0xF2, 0x5F {Icon Status_Ailment} 0xF2, 0x60 {Icon Ability_Buff} 0xF2, 0x61 {Icon Alert} 0xF2, 0x62 {Icon Sword} 0xF2, 0x63 {Icon Shield} 0xF2, 0x64 {Icon Magic_Staff} 0xF2, 0x65 {Icon Unknown1} 0xF2, 0x66 {Icon Unknown2} 0xF2, 0x67 {Icon Unknown3} 0xF2, 0x68 {Icon Ability_Eidolon} 0xF2, 0x69 {Icon Ability_Technique} 0xF2, 0x6A {Icon Ribbon} 0xF2, 0x6B {Icon Amulet} 0xF2, 0x6C {Icon Necklace} 0xF2, 0x6D {Icon Plant_Component} 0xF2, 0x6E {Icon Fluid_Component} 0xF2, 0x6F {Icon Biological_Material} 0xF2, 0x70 {Icon Bow} 0xF2, 0x71 {Icon Dual_Blades} 0xF2, 0x72 {Icon Question_Mark} 0xF2, 0x73 {Icon Gil2} 0xF2, 0x74 {Icon Casino_Coins2} 0xF2, 0x75 {Icon Map}"},{"location":"file-formats/text-format/encoding-keys-xiii2/#group-2_1","title":"Group 2","text":"<p>Important: For Chinese (ch) ztr files.</p> Bytes Key 0xFA, 0x40 {Icon Clock} 0xFA, 0x41 {Icon Warning} 0xFA, 0x42 {Icon Notification} 0xFA, 0x43 {Icon Gil} 0xFA, 0x44 {Icon Arrow_Right} 0xFA, 0x45 {Icon Arrow_Left} 0xFA, 0x46 {Icon Mission_Note} 0xFA, 0x47 {Icon Check_Mark} 0xFA, 0x48 {Icon Bonus_Ability} 0xFA, 0x49 {Icon Foot_Print} 0xFA, 0x4A {Icon Tamed_Crystal} 0xFA, 0x4B {Icon Monster_Cross} 0xFA, 0x4C {Icon Monster} 0xFA, 0x4D {Icon Casino_Coins} 0xFA, 0x4E {Icon Lock_Type1} 0xFA, 0x4F {Icon Lock_Type2} 0xFA, 0x50 {Icon Paradigm_Cross} 0xFA, 0x51 {Icon Paradigm_Wide} 0xFA, 0x52 {Icon Paradigm_Normal} 0xFA, 0x53 {Icon Chocobo_Strat} 0xFA, 0x54 {Icon Terrible_Condition} 0xFA, 0x55 {Icon Subpar_Condition} 0xFA, 0x56 {Icon Normal_Condition} 0xFA, 0x57 {Icon Good_Condition} 0xFA, 0x58 {Icon Top_Condition} 0xFA, 0x59 {Icon Nine} 0xFA, 0x5A {Icon Tiny_Bomb} 0xFA, 0x5B {Icon Tiny_Chocobo} 0xFA, 0x5C {Icon Tiny_Mog} 0xFA, 0x5D {Icon Cactuar} 0xFA, 0x5E {Icon Tiny_Chu} 0xFA, 0x5F {Icon Heart} 0xFA, 0x60 {Icon Plus} 0xFA, 0x61 {Icon Objective} 0xFB, 0x40 {Icon Gunblade} 0xFB, 0x41 {Icon Pistol} 0xFB, 0x42 {Icon Emblem} 0xFB, 0x43 {Icon Boomerang} 0xFB, 0x44 {Icon Staff} 0xFB, 0x45 {Icon Spear} 0xFB, 0x46 {Icon Knife} 0xFB, 0x47 {Icon Gate_Seal} 0xFB, 0x48 {Icon Datalog} 0xFB, 0x49 {Icon Eidolith_Crystal} 0xFB, 0x4A {Icon Wrench} 0xFB, 0x4B {Icon Mechanical_Material} 0xFB, 0x4C {Icon Synthetic_Component} 0xFB, 0x4D {Icon Organic_Component} 0xFB, 0x4E {Icon Catalyst_Component} 0xFB, 0x4F {Icon Bracelet} 0xFB, 0x50 {Icon Ring} 0xFB, 0x51 {Icon Brooch} 0xFB, 0x52 {Icon Belt} 0xFB, 0x53 {Icon Container_Type1} 0xFB, 0x54 {Icon Container_Type2} 0xFB, 0x55 {Icon Container_Type3} 0xFB, 0x56 {Icon Phoenix_Down} 0xFB, 0x57 {Icon Shroud} 0xFB, 0x58 {Icon Sack} 0xFB, 0x59 {Icon Ability_Passive} 0xFB, 0x5A {Icon Ability_Physical} 0xFB, 0x5B {Icon Ability_Magic} 0xFB, 0x5C {Icon Ability_Defense} 0xFB, 0x5D {Icon Heart_Plus} 0xFB, 0x5E {Icon Ability_Debuff} 0xFB, 0x5F {Icon Status_Ailment} 0xFB, 0x60 {Icon Ability_Buff} 0xFB, 0x61 {Icon Alert} 0xFB, 0x62 {Icon Sword} 0xFB, 0x63 {Icon Shield} 0xFB, 0x64 {Icon Magic_Staff} 0xFB, 0x65 {Icon Unknown1} 0xFB, 0x66 {Icon Unknown2} 0xFB, 0x67 {Icon Unknown3} 0xFB, 0x68 {Icon Ability_Eidolon} 0xFB, 0x69 {Icon Ability_Technique} 0xFB, 0x6A {Icon Ribbon} 0xFB, 0x6B {Icon Amulet} 0xFB, 0x6C {Icon Necklace} 0xFB, 0x6D {Icon Plant_Component} 0xFB, 0x6E {Icon Fluid_Component} 0xFB, 0x6F {Icon Biological_Material} 0xFB, 0x70 {Icon Bow} 0xFB, 0x71 {Icon Dual_Blades} 0xFB, 0x72 {Icon Question_Mark} 0xFB, 0x73 {Icon Gil2} 0xFB, 0x74 {Icon Casino_Coins2} 0xFB, 0x75 {Icon Map}"},{"location":"file-formats/text-format/encoding-keys-xiii2/#group-3_1","title":"Group 3","text":"<p>Important: For Korean (kr) ztr files.</p> Bytes Key 0xC9, 0xA1 {Icon Clock} 0xC9, 0xA2 {Icon Warning} 0xC9, 0xA3 {Icon Notification} 0xC9, 0xA4 {Icon Gil} 0xC9, 0xA5 {Icon Arrow_Right} 0xC9, 0xA6 {Icon Arrow_Left} 0xC9, 0xA7 {Icon Mission_Note} 0xC9, 0xA8 {Icon Check_Mark} 0xC9, 0xA9 {Icon Bonus_Ability} 0xC9, 0xAA {Icon Foot_Print} 0xC9, 0xAB {Icon Tamed_Crystal} 0xC9, 0xAC {Icon Monster_Cross} 0xC9, 0xAD {Icon Monster} 0xC9, 0xAE {Icon Casino_Coins} 0xC9, 0xAF {Icon Lock_Type1} 0xC9, 0xB0 {Icon Lock_Type2} 0xC9, 0xB1 {Icon Paradigm_Cross} 0xC9, 0xB2 {Icon Paradigm_Wide} 0xC9, 0xB3 {Icon Paradigm_Normal} 0xC9, 0xB4 {Icon Chocobo_Strat} 0xC9, 0xB5 {Icon Terrible_Condition} 0xC9, 0xB6 {Icon Subpar_Condition} 0xC9, 0xB7 {Icon Normal_Condition} 0xC9, 0xB8 {Icon Good_Condition} 0xC9, 0xB9 {Icon Top_Condition} 0xC9, 0xBA {Icon Nine} 0xC9, 0xBB {Icon Tiny_Bomb} 0xC9, 0xBC {Icon Tiny_Chocobo} 0xC9, 0xBD {Icon Tiny_Mog} 0xC9, 0xBE {Icon Cactuar} 0xC9, 0xBF {Icon Tiny_Chu} 0xC9, 0xC0 {Icon Heart} 0xC9, 0xC1 {Icon Plus} 0xC9, 0xC2 {Icon Objective} 0xFE, 0xA1 {Icon Gunblade} 0xFE, 0xA2 {Icon Pistol} 0xFE, 0xA3 {Icon Emblem} 0xFE, 0xA4 {Icon Boomerang} 0xFE, 0xA5 {Icon Staff} 0xFE, 0xA6 {Icon Spear} 0xFE, 0xA7 {Icon Knife} 0xFE, 0xA8 {Icon Gate_Seal} 0xFE, 0xA9 {Icon Datalog} 0xFE, 0xAA {Icon Eidolith_Crystal} 0xFE, 0xAB {Icon Wrench} 0xFE, 0xAC {Icon Mechanical_Material} 0xFE, 0xAD {Icon Synthetic_Component} 0xFE, 0xAE {Icon Organic_Component} 0xFE, 0xAF {Icon Catalyst_Component} 0xFE, 0xB0 {Icon Bracelet} 0xFE, 0xB1 {Icon Ring} 0xFE, 0xB2 {Icon Brooch} 0xFE, 0xB3 {Icon Belt} 0xFE, 0xB4 {Icon Container_Type1} 0xFE, 0xB5 {Icon Container_Type2} 0xFE, 0xB6 {Icon Container_Type3} 0xFE, 0xB7 {Icon Phoenix_Down} 0xFE, 0xB8 {Icon Shroud} 0xFE, 0xB9 {Icon Sack} 0xFE, 0xBA {Icon Ability_Passive} 0xFE, 0xBB {Icon Ability_Physical} 0xFE, 0xBC {Icon Ability_Magic} 0xFE, 0xBD {Icon Ability_Defense} 0xFE, 0xBE {Icon Heart_Plus} 0xFE, 0xBF {Icon Ability_Debuff} 0xFE, 0xC0 {Icon Status_Ailment} 0xFE, 0xC1 {Icon Ability_Buff} 0xFE, 0xC2 {Icon Alert} 0xFE, 0xC3 {Icon Sword} 0xFE, 0xC4 {Icon Shield} 0xFE, 0xC5 {Icon Magic_Staff} 0xFE, 0xC6 {Icon Unknown1} 0xFE, 0xC7 {Icon Unknown2} 0xFE, 0xC8 {Icon Unknown3} 0xFE, 0xC9 {Icon Ability_Eidolon} 0xFE, 0xCA {Icon Ability_Technique} 0xFE, 0xCB {Icon Ribbon} 0xFE, 0xCC {Icon Amulet} 0xFE, 0xCD {Icon Necklace} 0xFE, 0xCE {Icon Plant_Component} 0xFE, 0xCF {Icon Fluid_Component} 0xFE, 0xD0 {Icon Biological_Material} 0xFE, 0xD1 {Icon Bow} 0xFE, 0xD2 {Icon Dual_Blades} 0xFE, 0xD3 {Icon Question_Mark} 0xFE, 0xD4 {Icon Gil2} 0xFE, 0xD5 {Icon Casino_Coins2} 0xFE, 0xD6 {Icon Map}"},{"location":"file-formats/text-format/encoding-keys-xiii2/#button-prompt-keys","title":"Button prompt keys","text":"<p>These keys are used in FINAL FANTASY XIII-2, to insert controller button icons next to a text when its displayed ingame. </p>"},{"location":"file-formats/text-format/encoding-keys-xiii2/#group-1_2","title":"Group 1","text":"<p>Important: For English (us), French (fr), German (gr), Italian (it), Japanese (jp), and Spanish (sp) ztr files.</p> Bytes Key 0xF1, 0x40 {Btn A} 0xF1, 0x41 {Btn B} 0xF1, 0x42 {Btn X} 0xF1, 0x43 {Btn Y} 0xF1, 0x44 {Btn Start} 0xF1, 0x45 {Btn Back} 0xF1, 0x46 {Btn LB} 0xF1, 0x47 {Btn RB} 0xF1, 0x48 {Btn LT} 0xF1, 0x49 {Btn RT} 0xF1, 0x4A {Btn DPadLeft} 0xF1, 0x4B {Btn DPadDown} 0xF1, 0x4C {Btn DPadRight} 0xF1, 0x4D {Btn DPadUp} 0xF1, 0x4E {Btn LSLeft} 0xF1, 0x4F {Btn LSDown} 0xF1, 0x50 {Btn LSRight} 0xF1, 0x51 {Btn LSUp} 0xF1, 0x52 {Btn LSLeftRight} 0xF1, 0x53 {Btn LSUpDown} 0xF1, 0x54 {Btn LSPress} 0xF1, 0x55 {Btn RSPress} 0xF1, 0x56 {Btn RSLeft} 0xF1, 0x57 {Btn RSDown} 0xF1, 0x58 {Btn RSRight} 0xF1, 0x59 {Btn RSUp} 0xF1, 0x5A {Btn RSLeftRight} 0xF1, 0x5B {Btn RSUpDown} 0xF1, 0x5C {Btn LStick} 0xF1, 0x5D {Btn RStick} 0xF1, 0x5E {Btn DPadUpDown} 0xF1, 0x5F {Btn DPadLeftRight} 0xF1, 0x60 {Btn DPad}"},{"location":"file-formats/text-format/encoding-keys-xiii2/#group-2_2","title":"Group 2","text":"<p>Important: For Chinese (ch) ztr files.</p> Bytes Key 0xFA, 0xA1 {Btn A} 0xFA, 0xA2 {Btn B} 0xFA, 0xA3 {Btn X} 0xFA, 0xA4 {Btn Y} 0xFA, 0xA5 {Btn Start} 0xFA, 0xA6 {Btn Back} 0xFA, 0xA7 {Btn LB} 0xFA, 0xA8 {Btn RB} 0xFA, 0xA9 {Btn LT} 0xFA, 0xAA {Btn RT} 0xFA, 0xAB {Btn DPadLeft} 0xFA, 0xAC {Btn DPadDown} 0xFA, 0xAD {Btn DPadRight} 0xFA, 0xAE {Btn DPadUp} 0xFA, 0xAF {Btn LSLeft} 0xFA, 0xB0 {Btn LSDown} 0xFA, 0xB1 {Btn LSRight} 0xFA, 0xB2 {Btn LSUp} 0xFA, 0xB3 {Btn LSLeftRight} 0xFA, 0xB4 {Btn LSUpDown} 0xFA, 0xB5 {Btn LSPress} 0xFA, 0xB6 {Btn RSPress} 0xFA, 0xB7 {Btn RSLeft} 0xFA, 0xB8 {Btn RSDown} 0xFA, 0xB9 {Btn RSRight} 0xFA, 0xBA {Btn RSUp} 0xFA, 0xBB {Btn RSLeftRight} 0xFA, 0xBC {Btn RSUpDown} 0xFA, 0xBD {Btn LStick} 0xFA, 0xBE {Btn RStick} 0xFA, 0xBF {Btn DPadUpDown} 0xFA, 0xC0 {Btn DPadLeftRight} 0xFA, 0xC1 {Btn DPad}"},{"location":"file-formats/text-format/encoding-keys-xiii2/#group-3_2","title":"Group 3","text":"<p>Important: For Korean (kr) ztr files.</p> Bytes Key 0xC9, 0xD0 {Btn A} 0xC9, 0xD1 {Btn B} 0xC9, 0xD2 {Btn X} 0xC9, 0xD3 {Btn Y} 0xC9, 0xD4 {Btn Start} 0xC9, 0xD5 {Btn Back} 0xC9, 0xD6 {Btn LB} 0xC9, 0xD7 {Btn RB} 0xC9, 0xD8 {Btn LT} 0xC9, 0xD9 {Btn RT} 0xC9, 0xDA {Btn DPadLeft} 0xC9, 0xDB {Btn DPadDown} 0xC9, 0xDC {Btn DPadRight} 0xC9, 0xDD {Btn DPadUp} 0xC9, 0xDE {Btn LSLeft} 0xC9, 0xDF {Btn LSDown} 0xC9, 0xE0 {Btn LSRight} 0xC9, 0xE1 {Btn LSUp} 0xC9, 0xE2 {Btn LSLeftRight} 0xC9, 0xE3 {Btn LSUpDown} 0xC9, 0xE4 {Btn LSPress} 0xC9, 0xE5 {Btn RSPress} 0xC9, 0xE6 {Btn RSLeft} 0xC9, 0xE7 {Btn RSDown} 0xC9, 0xE8 {Btn RSRight} 0xC9, 0xE9 {Btn RSUp} 0xC9, 0xEA {Btn RSLeftRight} 0xC9, 0xEB {Btn RSUpDown} 0xC9, 0xEC {Btn LStick} 0xC9, 0xED {Btn RStick} 0xC9, 0xEE {Btn DPadUpDown} 0xC9, 0xEF {Btn DPadLeftRight} 0xC9, 0xF0 {Btn DPad}"},{"location":"file-formats/text-format/ztr/","title":"ZTR","text":"<p>ZTR (probably abbreviated as Zone Text Resource) is the text format used by the trilogy for storing all of its text data. each text or line has a corresponding text-id or line-id using which the game is able to display a text or line ingame. </p> <p>The string characters are stored in a compressed form which makes use of chunks that can be considered a dictionary. some of the string characters also denote special symbols or character combinations, that determine how a line is supposed to look when rendered ingame. see the Encoding Keys Info section in this page for better understanding this concept.</p> <p>This page will refer to the text and the ids as lines and line-ids respectively. </p> <p>N.B.: The below sections are all in Big Endian.</p>"},{"location":"file-formats/text-format/ztr/#header-section","title":"Header section","text":"Offset Size Type Description 0x0 0x8 UInt64 magicID, always 1 0x8 0x4 UInt32 Line count 0xC 0x4 UInt32 Decompressed line-ids size 0x10 0x4 UInt32 Number of Dictionary chunk offsets"},{"location":"file-formats/text-format/ztr/#dictionary-chunk-table","title":"Dictionary chunk table","text":"<p>This offset table begins from 0x14 (absolute) onwards and would contain 4 offsets for each dictionary chunk in the file. </p> Offset Size Type Description 0x50 0x4 UInt32 Dictionary Chunk offset <p>There would be minimum two chunk offsets given in this table in any ZTR file. one offset for the line-ids dictionary chunk and the other for the line dictionary chunk.</p> <p>The first offset would always be <code>0</code> and can be considered to be pointing to the first line-ids dictionary chunk. in some ZTR files, the line-ids can be stored in more than one dictionary chunk and the table will not have offsets for the secondary line-ids dictionary chunks. so you have to collectively consider these line-ids chunks as only one chunk.</p> <p>The maximum amount of strings that a single dictionary chunk can hold is 4096 bytes and by using this size and the decompressed line-ids size in the header, you can compute how many chunks are used in total for storing the line-ids in the ZTR file. do note that the 4096 bytes is the amount of string data that is present in the Dictionary Chunk and its trailing Compressed strings section. the next line-ids dictionary chunk would begin right after the first one's Compressed strings section has ended. </p> <p>The remaining offsets after the first 0 offset, will have to be taken relatively from the start of the first line dictionary chunk. (the line id chunk or chunks is located before this first chunk). lets say that the line-ids dictionary chunk ends at position 2428 and the second offset given in the table is <code>2452</code>. by seeking 2452 bytes relatively from position 2428, you will reach the start of the second line dictionary chunk. now for the next line dictionary chunk offset, you have to go back to position 2428 and then seek according to the third offset value given in the table. </p>"},{"location":"file-formats/text-format/ztr/#line-info-table","title":"Line Info table","text":"<p>This offset table begins after the dictionary chunk table and according to the line count in the header, there would be four offsets for each line in the file.</p> Offset Size Type Description 0x0 0x1 UInt8 Dictionary Chunk number 0x1 0x1 UInt8 Start position in page 0x2 0x2 UInt16 Line's relative start position in the Compressed strings section <p>Sometimes a line's starting string characters will begin in between a dictionary page. if the \"Start position in page\" value is lets say 2, then you have to take the characters from the dictionary page's second position onwards. as this is somewhat tricky to explain, its recommended to rebuild the dictionary pages in memory to make sense of this value.  </p>"},{"location":"file-formats/text-format/ztr/#dictionary-chunk","title":"Dictionary Chunk","text":"<p>This chunk has two sub chunks. a Pages chunk and a Compressed strings chunk</p> Offset Size Type Description 0x0 0x4 UInt32 Dictionary Size 0x4 Dictionary Size String/Index value Dictionary values"},{"location":"file-formats/text-format/ztr/#pages","title":"Pages","text":"Offset Size Type Description 0x0 0x1 UInt8 Page Index 0x1 0x1 UInt8 First item (Page index / string character) 0x2 0x1 UInt8 Second item (Page index / string character) <p>The index value of the next page can sometimes skip one or two numbers. for instance after 7, the next page's index would be 9.</p> <p>The First and Second item values have to be taken either as a page index number or as a string character.  If the first and second items are matching with another page's index value, then the item's value has to be taken as a pointer to that another page and use the first and second item values from there as the string characters. the pointed page can further point to a previous page as well, so you have to somewhat rebuild the pages in memory when extracting the text data. </p> <p>For more information, refer to the Decompression logic. </p>"},{"location":"file-formats/text-format/ztr/#compressed-strings","title":"Compressed strings","text":"<p>This section contains decompressed string characters and pointers to a page index. if the string character value matches with a page index value,  then you have to go to that page in the dictionary and get the string values present there.</p>"},{"location":"file-formats/text-format/ztr/#decompression-logic","title":"Decompression logic","text":"<p>Let's say that a byte value in the Compressed strings section is <code>4</code> and there are 10 pages in the dictionary chunk above. each page has a index from 0 to 10. so you have to consider the value 4 as a pointer to the page with index 4 in the dictionary. </p> <p>Now in page 4 of the dictionary, the first item's value is 74 while the second item's value is 3. as there isn't a page with index 74, you have to take the string value associated with 74 which would be <code>J</code>. the second item's value has to be considered as an index since there is a page with index 3. so go to page 3 and get both the first and second item values there which let's say are 111 and 121 respectively. as there aren't pages with index 111 and 121, you take the associated string values which would be <code>o</code> and <code>y</code>. combine this together with the <code>J</code> value and you get the word <code>Joy</code>.</p> <p>Sometimes both the first and second item values can point to a page index which in turn can point to another page index as well. you have to go to the indexes in the order by which they are pointed, and get the first and second item values there. if an item's value is pointing to an index, it will always point to a previous page from that item's page.</p>"},{"location":"script/","title":"Script editing","text":"<p>The goal of this section is to provide a central knowledgebase for everything related to the XIII trilogy CLB scripts.</p> <p>Warning</p> <p>Script editing is currently in it's infancy/investigation phase, consider everything here as WIP.</p> <ul> <li> Setup \u2013 Setup the necessary tools for script modding.</li> <li> Examples \u2013 Simple examples to get you started.</li> <li> API \u2013 Documentation of functions.</li> <li> FAQ \u2013 Frequently Asked Questions related to scripts.</li> </ul>"},{"location":"script/basics/extracting/","title":"Setting up the codebase","text":"<p>In this section, you will learn how to generate your codebase from the game files and setup the necessary tools for editing the scripts.</p> <ul> <li> <p>Download the WhiteCLBtool archive and unzip it. by doing so, you will get a folder, inside which the WhiteCLBtool program will be present along with a Libraries folder.</p> </li> <li> <p>We will need to install Java SDK version 19 or above, for decompilng the CLB files with the WhiteCLBtool. go to the Oracle website and download the Java SDK and install it.</p> </li> </ul>"},{"location":"script/basics/extracting/#setting-up-your-code-editor","title":"Setting up your code editor","text":"<p>We will require an code editor program to view or write our clb scripts. for this, we can go either with IntelliJ IDEA or VS Code and so depending on your choice, use one of the setup links given below:</p> <ul> <li> <p>Setting up IntelliJ</p> </li> <li> <p>Setting up VS Code</p> </li> </ul>"},{"location":"script/basics/extracting/#generating-your-codebase","title":"Generating your codebase","text":"<p>Note</p> <p>This section assumes that you have already setup the code editor and have unpacked your game files with the Nova Chrysalia mod manager.</p> <ul> <li> <p>Copy the path of your game folder, for which you want to generate the codebase. example of Final Fantasy XIII's  game folder path on my PC, is given below: <pre><code>\"S:\\Steam Library Games 2\\steamapps\\common\\FINAL FANTASY XIII\"\n</code></pre></p> </li> <li> <p>Now open a terminal or command prompt inside the folder where you the WhiteCLBtool program is present and in the terminal, type <code>WhiteCLBtool -d</code> along with the path to your game's folder. example with Final Fantasy XIII's game folder path on my PC, is once again given below: <pre><code>WhiteCLBtool -d \"S:\\Steam Library Games 2\\steamapps\\common\\FINAL FANTASY XIII\"\n</code></pre></p> </li> <li> <p>The tool will start converting all the clb files of the game to clean .java files with proper folder structure and then will move the .java files, inside a clbs_decompiled folder. this particular folder will be generated inside the game folder and you can move this folder elsewhere and rename it to something more meaningful like \"FFXIIICodebase\" for example.</p> </li> </ul> <p>That's it, the codebase is now ready to be used for reading and writing clb scripts.</p> <p>You can now proceed to this page to setup the repacking utilities.</p>"},{"location":"script/basics/repacking/","title":"Setting up the exporter","text":"<p>In this section, you will learn how to setup your script exporter. </p> <p>Note</p> <p>This section assumes that you have already setup the codebase properly.</p>"},{"location":"script/basics/repacking/#installing-the-java-5-sdk","title":"Installing the Java 5 SDK","text":"<p>We need to use the same Java version as the XIII Trilogy, go to the Oracle website and download the Java 5 SDK and install it.</p> <p>Tip</p> <p>You can either create an account with your email or us this throwaway account below, to avoid creating an account with your email:  <pre><code>email: rebil93626@oziere.com\nPassword: TrilogyXIIIOraclePwd5!\n</code></pre></p>"},{"location":"script/basics/repacking/#setting-up-the-intellij-idea-external-tool","title":"Setting up the IntelliJ IDEA external tool","text":"<p>If you had followed the IntelliJ IDEA setup guide before, then follow these steps given below.</p> <p>We are now going to setup an external tool to compile our .java files to .clb in IntelliJ:</p> <ul> <li>Open IntelliJ, then go to File-&gt;Settings-&gt;Tools-&gt;ExternalTools:</li> </ul> <p></p> <ul> <li>Click on the \"+\" button to create a new one and name it however you want. The following window will appear:</li> </ul> <p></p> <p>The most important fields are the following:</p> <p>Note</p> <ul> <li>Program: put your WhiteCLBtool.exe location here, between quotes (\"\")</li> <li>Arguments: put your javac.exe location, from your Java 5 install folder, between quotes (\"\") and after that put <pre><code>\"$FilePathRelativeToSourcepath$\"\n</code></pre></li> <li>Working Directory: put  <pre><code>$Sourcepath$\n</code></pre></li> </ul> <p>That's it, you will now be able to generate your clb file with a single click, from your .java file by right-clicking and then choosing External Tools -&gt; YourToolName.</p>"},{"location":"script/basics/repacking/#setting-up-a-task-for-vs-code","title":"Setting up a task for VS Code","text":"<p>If you had followed the VS Code setup guide before, then follow these steps given below.</p> <p>We are going to setup a VS Code task, that can be used to quickly compile .java files to .clb:</p> <ul> <li>Open VS Code and in the search bar at the top, type <code>&gt; Tasks: Open User Tasks</code>. select this option and it will open a <code>tasks.json</code> file.</li> </ul> <p></p> <ul> <li>In the json file and inside the \"tasks\" object, we will create a new task called WhiteCLBtool. you can refer to this image below and setup the task according to it. make sure that you put the location of the WhiteCLBtool.exe on your PC for the <code>command</code> object's value.</li> </ul> <p></p> <p>Note</p> <ul> <li> <p>Change the path separator characters from <code>\\</code> to <code>\\\\</code>. </p> </li> <li> <p>The javac file location should be from the Java 5 SDK installation on your PC.</p> </li> <li> <p>Here is the json object, which you can use as a reference: <pre><code> {\n    \"label\": \"WhiteCLBtool\",\n    \"type\": \"process\",\n    \"command\": \"U:\\\\Documents\\\\Visual Studio Projects\\\\C# stuff\\\\App projects\\\\FFXIII Mod Programs\\\\WhiteCLBtool\\\\bin\\\\Release\\\\WhiteCLBtool.exe\",\n    \"args\": [\n        \"-c\", \n        \"C:\\\\Program Files\\\\Java\\\\jdk1.5.0_22\\\\bin\\\\javac.exe\",\n        \"${relativeFile}\"\n    ],\n    \"group\": {\n        \"kind\": \"build\"\n    }\n}   \n</code></pre></p> </li> </ul>"},{"location":"script/basics/setup-intellij/","title":"Setting up IntelliJ IDEA","text":"<p>This guide will help you set up IntelliJ IDEA setup for clb scripting environment:</p> <ul> <li>Go to IntelliJ's download page and make sure to download the free Community Edition which has more than enough features for our needs.</li> </ul> <p></p> <ul> <li>During the installation process, make sure to tick the Add \"Open Folder as Project\" option, it will make things easier later. Feel free to tick others if you want to, the .java one in particular.</li> </ul> <p></p> <p>You can now go back to the previous page to finish setting up your codebase.</p>"},{"location":"script/basics/setup-vscode/","title":"Setting up VS Code","text":"<p>This guide will help you set up VS Code for creating a scripting environment:</p> <ul> <li> <p>Go to VS Code download page and once its downloaded, install it.</p> </li> <li> <p>During the installation process, make sure to tick all the options excluding the desktop icon option. these options will make things easier later.</p> </li> </ul> <p></p> <ul> <li>Click Next and then click on install. once the installation is done, open VS code and click on the Extensions icon located on the sidebar to the left. alternatively, you can use <code>CTRL+Shift+X</code> keys together on your keyboard, to open this Extensions page.</li> </ul> <p></p> <ul> <li>Search and install the Extension Pack for Java extension. this should automatically install all the necessary components required for editing the java files.</li> </ul> <p></p> <ul> <li> <p>Click on the bottom left Gear icon and select Settings. </p> </li> <li> <p>In the settings menu searchbar, type <code>java.referencesCodeLens.enabled</code> and enable the option. this will ensure that all usage references are shown for the functions.</p> </li> </ul> <p></p> <p>You can now go back to the previous page to finish setting up your codebase.</p>"},{"location":"script/writing/api-lr/","title":"LIGHTNING RETURNS FINAL FANTASY XIII","text":""},{"location":"script/writing/api-lr/#fakewhite","title":"<code>fake.White</code>","text":"<p>Note</p> <p>These functions can be accessed by using <code>import fake.White</code>.</p>"},{"location":"script/writing/api-lr/#comparestring","title":"compareString","text":"<p>Compares two strings and returns <code>1</code> if equal, and <code>0</code> if not equal.</p> <p>Parameter(s) :</p> <ul> <li>String var0 : first string to compare</li> <li>String var1 : second string to compare</li> </ul> <pre><code>public static native int compareString(String var0, String var1);\n</code></pre>"},{"location":"script/writing/api-lr/#fakewindow","title":"<code>fake.Window</code>","text":"<p>Note</p> <p>These functions can be accessed by using <code>import fake.Window</code>. </p>"},{"location":"script/writing/api-lr/#showcinemamessage","title":"showCinemaMessage","text":"<p>Shows a message for a specific duration or indefinitely. this functions returns some sort of numerical boolean id.</p> <p>Parameter(s) :</p> <ul> <li>String string : message to show</li> <li>int n : duration. set it to <code>0</code> to show indefinitely.</li> </ul> <pre><code>public static int showCinemaMessage(String string, int n) {\n\n}\n</code></pre>"},{"location":"script/writing/api-lr/#fldcom","title":"<code>fld.com</code>","text":"<p>Note</p> <p>These functions can be accessed by using <code>import fld.com</code>.</p>"},{"location":"script/writing/api-lr/#sfshowwindowwithkeywait","title":"sfShowWindowWithKeyWait","text":"<p>Displays a message window that can be closed on user input. the function will always return <code>-1</code>.</p> <p>Parameter(s) :</p> <ul> <li>String string : message to display</li> </ul> <pre><code>public static int sfShowWindowWithKeyWait(String string) { \n\n}\n</code></pre>"},{"location":"script/writing/api-lr/#sfcallaskchoicewindow","title":"sfCallAskChoiceWindow","text":"<p>Draws a message window with options. the function will return the message window id.</p> <p>Parameter(s) :</p> <ul> <li>String string : title of the message window</li> <li>String[] stringArray : options to display</li> <li>int n : index where the cursor should default to, after the last option</li> </ul> <pre><code>public static int sfCallAskChoiceWindow(String string, String[] stringArray, int n) { \n\n}\n</code></pre>"},{"location":"script/writing/api-lr/#sfwaitaskchoicewindow","title":"sfWaitAskChoiceWindow","text":"<p>Makes an options window, interactable. this has to be used after the sfCallAskChoiceWindow function is used and the function will return the selected option's index.</p> <p>Parameter(s) :</p> <ul> <li>String string : title used for the options window. </li> </ul> <pre><code>public static int sfWaitAskChoiceWindow(String string) {\n\n}\n</code></pre>"},{"location":"script/writing/api-xiii/","title":"FINAL FANTASY XIII","text":""},{"location":"script/writing/api-xiii/#fakewhite","title":"<code>fake.White</code>","text":"<p>Note</p> <p>These functions can be accessed by using <code>import fake.White</code>.</p>"},{"location":"script/writing/api-xiii/#comparestring","title":"compareString","text":"<p>Compares two strings and returns <code>1</code> if equal, and <code>0</code> if not equal.</p> <p>Parameter(s) :</p> <ul> <li>String var0 : first string to compare</li> <li>String var1 : second string to compare</li> </ul> <pre><code>public static native int compareString(String var0, String var1);\n</code></pre>"},{"location":"script/writing/api-xiii/#fldcom","title":"<code>fld.com</code>","text":"<p>Note</p> <p>These functions can be accessed by using <code>import fld.com</code>.</p>"},{"location":"script/writing/api-xiii/#sfshowwindowwithkeywait","title":"sfShowWindowWithKeyWait","text":"<p>Displays a message window that can be closed on user input. the function will always return <code>-1</code>.</p> <p>Parameter(s) :</p> <ul> <li>String string : message to display</li> </ul> <pre><code>public static int sfShowWindowWithKeyWait(String string) { \n\n}\n</code></pre>"},{"location":"script/writing/api-xiii/#sfcallaskchoicewindow","title":"sfCallAskChoiceWindow","text":"<p>Draws a message window with options. the function will return the message window id.</p> <p>Parameter(s) :</p> <ul> <li>String string : title of the message window</li> <li>String[] stringArray : options to display</li> <li>int n : index where the cursor should default to, after the last option</li> </ul> <pre><code>public static int sfCallAskChoiceWindow(String string, String[] stringArray, int n) { \n\n}\n</code></pre>"},{"location":"script/writing/api-xiii/#sfwaitaskchoicewindow","title":"sfWaitAskChoiceWindow","text":"<p>Makes an options window, interactable. this has to be used after the sfCallAskChoiceWindow function is used and the function will return the selected option's index.</p> <p>Parameter(s) :</p> <ul> <li>String string : title used for the options window. </li> </ul> <pre><code>public static int sfWaitAskChoiceWindow(String string) {\n\n}\n</code></pre>"},{"location":"script/writing/api-xiii2/","title":"FINAL FANTASY XIII-2","text":""},{"location":"script/writing/api-xiii2/#fakewhite","title":"<code>fake.White</code>","text":"<p>Note</p> <p>These functions can be accessed by using <code>import fake.White</code>.</p>"},{"location":"script/writing/api-xiii2/#comparestring","title":"compareString","text":"<p>Compares two strings and returns <code>1</code> if equal, and <code>0</code> if not equal.</p> <p>Parameter(s) :</p> <ul> <li>String var0 : first string to compare</li> <li>String var1 : second string to compare</li> </ul> <pre><code>public static native int compareString(String var0, String var1);\n</code></pre>"},{"location":"script/writing/api-xiii2/#fakewindow","title":"<code>fake.Window</code>","text":"<p>Note</p> <p>These functions can be accessed by using <code>import fake.Window</code>. </p>"},{"location":"script/writing/api-xiii2/#showcinemamessage","title":"showCinemaMessage","text":"<p>Shows a message for a specific duration or indefinitely. this functions returns some sort of numerical boolean id.</p> <p>Parameter(s) :</p> <ul> <li>String string : message to show</li> <li>int n : duration. set it to <code>0</code> to show indefinitely.</li> </ul> <pre><code>public static int showCinemaMessage(String string, int n) {\n\n}\n</code></pre>"},{"location":"script/writing/api-xiii2/#fldcom","title":"<code>fld.com</code>","text":"<p>Note</p> <p>These functions can be accessed by using <code>import fld.com</code>.</p>"},{"location":"script/writing/api-xiii2/#sfshowwindowwithkeywait","title":"sfShowWindowWithKeyWait","text":"<p>Displays a message window that can be closed on user input. the function will always return <code>-1</code>.</p> <p>Parameter(s) :</p> <ul> <li>String string : message to display</li> </ul> <pre><code>public static int sfShowWindowWithKeyWait(String string) { \n\n}\n</code></pre>"},{"location":"script/writing/api-xiii2/#sfcallaskchoicewindow","title":"sfCallAskChoiceWindow","text":"<p>Draws a message window with options. the function will return the message window id.</p> <p>Parameter(s) :</p> <ul> <li>String string : title of the message window</li> <li>String[] stringArray : options to display</li> <li>int n : index where the cursor should default to, after the last option</li> </ul> <pre><code>public static int sfCallAskChoiceWindow(String string, String[] stringArray, int n) { \n\n}\n</code></pre>"},{"location":"script/writing/api-xiii2/#sfwaitaskchoicewindow","title":"sfWaitAskChoiceWindow","text":"<p>Makes an options window, interactable. this has to be used after the sfCallAskChoiceWindow function is used and the function will return the selected option's index.</p> <p>Parameter(s) :</p> <ul> <li>String string : title used for the options window. </li> </ul> <pre><code>public static int sfWaitAskChoiceWindow(String string) {\n\n}\n</code></pre>"},{"location":"script/writing/api/","title":"Api","text":"<p>Warning</p> <p>Most of the functions aren't fully researched or documented. please consider everything here as WIP.</p> <ul> <li> XIII \u2013 FINAL FANTASY XIII's functions</li> <li> XIII-2 \u2013 FINAL FANTASY XIII-2's functions </li> <li> LR \u2013 LIGHTNING RETURNS FINAL FANTASY XIII's functions</li> </ul>"},{"location":"script/writing/examples/","title":"Examples","text":"<p>This sections aims to provide simple examples of script editing.</p> <p>Note</p> <p>This section assumes that you have already setup the necessary script editing workflow..</p> <ul> <li> Example1 \u2013 Messing around with the Ark's teleporter.</li> </ul>"},{"location":"script/writing/faq/","title":"FAQ","text":""},{"location":"script/writing/faq/#im-getting-errors-parts-of-the-code-underlined-in-red-for-a-few-files-when-opening-the-codebase-in-intellij-idea","title":"I'm getting errors (parts of the code underlined in red) for a few files when opening the codebase in IntelliJ idea","text":"<p>This is due to the decompilation not being good enough for a few functions. Unless you're looking to repack the file containing such functions specifically, you can either ignore such errors or simply comment the offending functions' body to get rid of them.</p> <p>As the codebase will get cleaner these errors will hopefully disappear.</p>"},{"location":"script/writing/tips/","title":"Tips","text":""},{"location":"script/writing/tips/#intellij-shortcuts","title":"IntelliJ shortcuts","text":"<ul> <li>CTRL-F12: this will enable you to see all the available methods of the class defined in your current file. </li> </ul> <ul> <li>Right-click on a function then \"Find usages\": this will enable you to see in which file(s) the function is called and give you the possibility to jump to it directly. </li> </ul> <ul> <li>Right-click-&gt; Go to -&gt; declaration or usages: this is the other way around, if you see a function used and want to jump to its definition</li> </ul>"},{"location":"script/writing/examples/example1/","title":"Example1","text":"<p>In this example, we are going to repurpose the Ark's teleporter to execute our own custom function.</p>"},{"location":"script/writing/examples/example1/#project-setup","title":"Project setup","text":"<ul> <li> <p>Create a new folder on your PC and call it \"LR teleporter edit\" or anything of your choice. we will now copy the core script files and the Ark zone's script files, into this folder.</p> </li> <li> <p>Inside the \"FFXIIICodebase\" folder or the \"clbs_decompiled\" folder that you had renamed when generating the codebase , goto <code>sys/script_decomp</code> folder and copy all of its contents into the \"LR teleporter edit\" folder. these are the core script files.</p> </li> </ul> <p></p> <ul> <li>Come back outside the <code>sys</code> folder and goto <code>zone/z0110</code> folder. once again copy all of its contents into the \"LR teleporter edit\" folder. these are the Ark zone's script files</li> </ul> <p></p> <ul> <li> <p>And that's it. we should be ready now to edit the script files.</p> </li> <li> <p>If you are using IntelliJ, then right click on the \"LR teleporter edit\" folder, (show more options if on windows 11) and select the Open Folder as IntelliJ IDEA Community Edition Project option. you will be prompted with a message asking whether you can trust and open this project or not. click on the \"Trust Project\" button and IntelliJ will open the folder.</p> </li> <li> <p>If you are using VS Code, then right click on the \"LR teleporter edit\" folder, (show more options if on windows 11) and select the Open with Code option and VS code will open the folder.</p> </li> </ul>"},{"location":"script/writing/examples/example1/#writing-our-new-logic","title":"Writing our new logic","text":"<p>By default, the function called when activating the teleporter is \"efTelepoMachine\", found in in the scr250 file. We are going to have it call our own function that we're going to write in scr000.</p> <p>Note</p> <p>You could write this function in any of the scrxxx files.</p> <p>The original function has the following signature:</p> <code>scr250.java</code> <pre><code>public static int efTelepoMachine(String string, String string2)\n</code></pre> <p>So we're going to copy it as is and make it return 1 just like the original one:</p> <code>scr000.java</code> <pre><code>public static int efTelepoMachine(String string, String string2) {\n  return 1;\n}\n</code></pre> <p>We can now write any logic that we want to happen when using the teleporter. In this example, I'm going to display a quick prompt, fade out in white, display another prompt, fade in in white, display a menu.</p> <code>scr000.java</code> <pre><code>public static int efTelepoMachine(String string, String string2) {\n      //Fade out\n      com.sfShowWindowWithKeyWait((String)\"Fade out white.\");\n      Window.startFadeOutWhite(500);\n\n      //Fade in\n      com.sfShowWindowWithKeyWait((String)\"Fade in white.\");\n      Window.startFadeInWhite(500);\n\n      //Menu\n      String title = \"Did you enjoy it?\";\n      String[] menuItems = new String[]{\"Yes\", \"No\"};\n      com.sfCallAskChoiceWindow(title, menuItems, 0);\n      int v = com.sfWaitAskChoiceWindowSkipAvailable(title);\n      switch (v) {\n          case 0: {\n              com.sfShowWindowWithKeyWait((String) \"Cool!\");\n              break;\n          }\n          case 1: {\n              com.sfShowWindowWithKeyWait((String) \"Too bad...\");\n              break;\n          }\n      }\n      return 1;\n  }\n</code></pre> <p>We're done, it's now time to compile our edited file back to clb. </p> <p>Now depending on whether you are using IntelliJ or VS Code, the steps required to compile our file to clb, will vary slightly.</p> <p>If you are using IntelliJ, simply right-click on the java file that you had edited and then click on External Tools -&gt; YourToolName. Wait for a bit and you will get a compiled scr000.clb file.</p> <p>Or</p> <p>If you are using VS Code, stay on the tab where your edited script file is open and press <code>CTRL+Shift+B</code> keys together on your keyboard. this will bring up the Task selection menu at the top and from this menu, select the task that you had setup with the WhiteCLBtool before. this will begin the compilation process and you will get a compiled scr000.clb file.</p> <p>You can now inject the clb file back ingame using LayeredFS or by running the game in unpacked mode</p> <p>Note</p> <p>To have this mod taken into account, you will also need to do a small database edit. A dedicated tutorial will be written later, for now simply use the following file as a modification of the original one located at <pre><code>LIGHTNING RETURNS FINAL FANTASY XIII\\weiss_data\\db\\script\\script00110.wdb\n</code></pre></p> <p>That's it, you can now go to the teleporter and check out the result:</p>"},{"location":"user-guide/","title":"User Guide","text":"<p>This section contains instructions on setting up the Nova Chrysalia mod manager and instructions for installing mods with it.</p> <ul> <li> Setup \u2013 Setup game files for modding.</li> <li> Installing-Mods \u2013 Simple example to get you started with mod installations.</li> </ul>"},{"location":"user-guide/importing-bgm-with-looping/","title":"Importing Custom BGM with looping","text":"<p>This guide will show you the basic steps for looping and importing your own music into Final Fantasy XIII games using the Nova Chrysalia tool.</p>"},{"location":"user-guide/importing-bgm-with-looping/#step-1-encoding-your-audio-file","title":"Step 1 encoding your audio file","text":"<ul> <li> <p>First, the audio you are going to import needs to be in the .OGG format with stream encoded using NCVE. If you try to work with .mp3 file or even .OGG file not encoded as described, you will get an error and Nova Chrysalia will abort the process. To get an audio file in the required format, you simply need to run the VorbisEncode.exe that you can find in the same folder as NovaChrysalia.exe.</p> </li> <li> <p>After running the program, browse for your audio track (to make things easier you could put all the audio files you want to use into one dedicated folder). Then click \"Encode Selected File to VORBIS\" and a .OGG file of the same name will be generated next to your selected audio file.</p> </li> </ul>"},{"location":"user-guide/importing-bgm-with-looping/#step-2-converting-the-audio-file","title":"Step 2 converting the audio file","text":"<ul> <li>Run Nova Chrysalia and navigate to the Mod Tools tab. In the third column called: File Format Conversion you can see two buttons - \"Convert SCD File\" and \"Convert Audio File\". The former is used when you need to convert audio that is already in the game into .OGG. The latter is the one we need. Click it and a new windows will appear. Here you can edit your audio. You can set the preferred volume and make the audio loop if necessary. (Note that the highest volume you can set the audio to is 1.0. Anything higher will have no effect. The lowest is 0.1)</li> </ul> <p>If you don't need to loop the audio, simply click \"confirm\", a .SCD file will be generated next to the file you selected, and skip to step 4.</p>"},{"location":"user-guide/importing-bgm-with-looping/#step-3-looping-your-audio","title":"Step 3 looping your audio","text":"<p>For this part you will need a good audio editing software. I recommend using Audacity. - Open your .OGG file in the software of your choice then set the timing (the second) you want your loop point to be at, in the track display. Now, music in Final Fantasy XIII series is a bit tricky, so seconds themselves won't be enough to determine your loop points.</p> <ul> <li> <p>You need to find a way to see the samples. Audacity shows a big seconds counter at the bottom of the window, which can be switched to show samples by clicking the dropbox next to it and selecting \"samples\". It will show you the number which you need to copy and paste into Nova Chrysalia, into the box Loop Start (Sample), or Loop End (Sample), without any commas. If you did everything correctly, then as soon as the song gets to the Loop End you set, it will cut to the Loop Start you set.</p> </li> <li> <p>Nova Chrysalia will place your loop points as best as it can, but if you are not happy with the result, you can offset the calculated loop before converting the file.</p> </li> <li> <p>If you don't want the audio to loop, then you can leave the loop points at 0.</p> </li> <li> <p>When you have everything set as you want, click \"Confirm\" and Nova Chrysalia will generate an .SCD file for you, next to your .OGG file.</p> </li> </ul>"},{"location":"user-guide/importing-bgm-with-looping/#the-math-behind-it-info-for-programmers","title":"The math behind it (info. for programmers):","text":"<p>For anyone would be interested in how to calculate the audio track samples from scratch: - Multiply the number of seconds by the number of the track's sample rate in Hz.</p> <ul> <li>e.g. Let's say my file has a sample rate of 44100 Hz and I want the loop point to be at 1 minute and 20 seconds. That is, at 80<sup>th</sup> second. So I need to multiply 80 x 44100. I will get 3528000 and this is the number I need to put into Nova Chrysalia, into the Loop Start (Sample) box, or Loop End (Sample) box.</li> </ul>"},{"location":"user-guide/importing-bgm-with-looping/#step-4-putting-your-audio-in-game-replacing-the-games-files","title":"Step 4 putting your audio in game, replacing the game's files","text":"<ul> <li> <p>Now there are more ways to do this, but the easiest and safest is to use Nova Chrysalia of course. Under the \"Game Launcher\" tab, see the 4<sup>th</sup> column. There on the bottom you can see two buttons: \"Unpack Game Data (EN Audio)\" and \"Unpack Game Data (JP Audio)\". Select one, depending on which audio version you want to import your music to, and wait till the process is done. It can take some time.</p> </li> <li> <p>Once the process is finished navigate to \"Your Steam Installation Path \\Steam\\steamapps\\common\\FINAL FANTASY XIII\\white_data\\sound\\pack\\8000\". In here you can see all the games background music.</p> </li> <li> <p>Here you need to locate the music track you want to replace, give your .SCD file the exact same name and... well, replace it.</p> </li> <li> <p>That's it. You can listen to your custom music ingame now.</p> </li> </ul> <p>N.B.To identify which audio you are replacing, you can simply use Nova Chrysalia's mod tools to \"Convert SCD File\" to .OGG or use foobar with the vgmstream plugin.</p>"},{"location":"user-guide/installing-mods/","title":"Types of Nova mods","text":"<p>This guide covers the process of installing a nova mod with the Nova mod manager.</p> <p>Note</p> <p>There are mainly two types of Mods that are made to work with Nova Chrysalia's Unpacked filesystem mode function. </p> <ul> <li> <p>Mod files that are packed in a .ncmp file format which has to be installed through Nova</p> </li> <li> <p>Mod files that modify or replace the unpacked game files which only work when the game is running in Unpacked mode.    You will find this type of mods linked in the Discord server in the #releases channel</p> </li> </ul> <p>All of these mods will require the game data to be Unpacked and will only work if the game is launched through Nova, with the Filesystem set to Unpacked Mode.</p>"},{"location":"user-guide/installing-mods/#installing-a-ncmp-mod","title":"Installing a NCMP mod","text":"<p>Here is a demo which will help to identify and install a .ncmp mod file with Nova.</p> <ol> <li> <p>Download the Core mods.zip file from the #announcements channel in the Discord server.</p> </li> <li> <p>Extract the zip file that you downloaded and you will get lots of .ncmp files. Take notice of the filenames and you will see the short names that are used to refer to the games from the FFXIII trilogy (as explained in the Setting up the Nova Chrysalia Mod manager guide page).</p> </li> <li> <p>We will install a relatively simple mod for this tutorial :a mod for LIGHTNING RETURNS: FINAL FANTASY XIII that will change the in game button prompts to PS3 button Prompts.  Make sure that you have the LIGHTNING RETURNS: FINAL FANTASY XIII game data unpacked and setup with Nova before proceeding any further.</p> </li> <li> <p>In the Nova Chrysalia mod manager, click on the ModPack Manager tab at the top, then click on the Add ModPack option.</p> </li> <li> <p>In the small window, navigate to the folder where the ncmp files are present and double click on the [FFXIII-LR] PS3 Button Prompts file. Doing this will add the mod to the mod list and you will have to double click on the mod from this list to select it.</p> </li> <li> <p>Once you see the preview image of the mod appear on the right side, click on the Install Mod option and you will be prompted whether to install the mod or not.  Click Yes and wait for the \"Installation successful\" prompt to appear. If that prompt appears then the mod has been installed correctly. </p> </li> <li> <p>Now click on the Game Launcher section and ensure that the Filesystem option is set to Unpacked. In the first row, set the dot to Final Fantasy XIII: Lightning Returns and then click on the Launch Game option. </p> </li> <li> <p>This should launch the game with the PS3 buttons now replacing the default in game buttons.</p> </li> </ol> <p>With this I hope you now have an understanding of how to install an .ncmp mod with Nova. Summing it up you add an .ncmp mod file to Nova through the Add ModPack option in the ModPack Manager tab and once its added you select it and then install it.</p> <p>Now some of the mods won't have the short name of the respective game in their filename, making it difficult to identify which game it belongs to in the FFXIII trilogy. In this case you will have to read the mod creator's instructions on which game their ncmp mod file works on.</p>"},{"location":"user-guide/setting-up-nova/","title":"Getting started","text":"<p>This guide covers the process of setting up the Nova mod manager for the PC version of the XIII trilogy.</p> <p>Note</p> <p>Each game in the trilogy is sometimes referred to shortly by the modding community as follows:</p> <ul> <li> <p>FINAL FANTASY XIII is known as XIII-1</p> </li> <li> <p>FINAL FANTASY XIII-2 is known as XIII-2</p> </li> <li> <p>LIGHTNING RETURNS: FINAL FANTASY XIII is known as XIII-LR or just LR</p> </li> </ul>"},{"location":"user-guide/setting-up-nova/#game-files-verification","title":"Game files verification","text":"<p>Before proceeding any further, you need to make sure that your PC version games files are clean and unmodified. You need to do this separately for each game that you own.</p> <ul> <li>Open your Steam application and in your Library section, right click on either XIII-1, or XIII-2, or LR. (just the one you have installed or the one you wish to do the setup for now).</li> <li>In the small menu that appears, click on Properties.</li> <li>Then in the new small window that opens, go to the INSTALLED FILES section and there click on the 'Verify integrity of game files' option. This should do the verification on the game files and if there is any file that was modified before, then it will be re downloaded by Steam. Once the verification and the re downloading is complete, please move to the next section.</li> </ul>"},{"location":"user-guide/setting-up-nova/#installing-nova","title":"Installing Nova","text":"<ol> <li> <p>From your steam library, launch the game and close it as soon as you reach the game's title screen. this step is important as the game would need to create some default configuration settings which will only happen after it has launched once. remember that the game you launch has to be the same one for which you are setting it up with Nova. if you are setting up Nova for all the three games, then launch each game from your steam library separately and close it at the title screen. make sure not to launch all of them at the same time.</p> </li> <li> <p>Download the Nova Chrysalia.zip file from the #announcements channel in the Discord server.</p> </li> <li> <p>Extract the zip file that you downloaded with WinRAR or 7Zip software and open the NovaChrysalia.exe file. This should open the Mod manager.</p> </li> <li> <p>In the Game Launcher tab in Nova, set the Install directory for the games that you own by clicking on the Browse button and navigate to the respective game's directory or the root folder.  For XIII-1 it will be the FINAL FANTASY XIII folder, for XIII-2 it will be the FINAL FANTASY XIII-2 folder and for LR it will be the LIGHTNING RETURNS FINAL FANTASY XIII folder.</p> </li> <li> <p>Once you have located the folder in the small navigation window, click on it and then click the Select folder option in the navigation window.</p> </li> <li> <p>In the Final Fantasy XIII and Final Fantasy XIII-2 settings row, customize the graphic settings for your game as well as the Voice over settings too. </p> </li> <li> <p>We shall now proceed to the Unpacking process. </p> </li> </ol> <p>The game files are stored in large BIN files and have a separate set for English and Japanese audio. We will need to unpack these files to make it more modding friendly and this unpacking will require some free space in the drive where you have the game installed. </p> <p>You will need 110gb of free space for XIII, 60gb for XIII-2 and 50gb for XIII-LR. These are the approximate sizes if you want to unpack the files for the two language options. If you are going to unpack for a single language option, then the size is going to be reduced.</p> <p>In the first row and right above the Launch game option, you have to set the dot to the game that you want to launch or do the Unpacking. so set the dot to the one you want to Unpack for now and in the last row, set the Filesystem to Unpacked Mode</p> <ol> <li>In that same row where the Filesystem option was present, click on either the Unpack Game Data (EN Audio) or the Unpack Game data (JP audio) options. You can only unpack one of them at a time, so click on the one you want to unpack first.</li> </ol> <p>Click on the Yes option in the prompt that appears and the Unpacking process will start. This process will take some time to complete and once it's done you'll be notified by a prompt. Click on the Ok button to close it.</p> <p>If the unpacking process completes too quickly then you probably have the ASIA/JP region version of the game that only ships with Japanese audio files. If this is the case, then click on the Unpack Game data (JP audio) option and wait for the Unpacking process to be done.</p> <ol> <li> <p>We shall now do a test run. In the first row, set the dot to the one you have the game files unpacked or the one you want to launch now for a test run. After setting the dot to your respective game, click on the Launch Game option below and see if the game opens properly. </p> </li> <li> <p>If the game opens properly, then you have been successful with setting up this mod manager. yay! good job.</p> </li> </ol>"},{"location":"user-resource/","title":"User Resource","text":"<p>This section contains general user information about the game files and other additional modding tools apart from the NovaChrysalia mod manager</p> <ul> <li> Additional-Tools \u2013 List of additional modding tools</li> <li> Directory-Info \u2013 Information about the main game directories</li> <li> File-IDs \u2013 List of internal file ids</li> <li> File-Info \u2013 Information on some of the game files</li> <li> Internal-IDs-Info \u2013 List of internal ids</li> <li> Zone-Info \u2013 Information on each zone id mapping</li> </ul>"},{"location":"user-resource/additional-tools/","title":"Additional Tools","text":"<ul> <li> <p>ff13-save-editor-software - save editor tool for XIII (PC version only).</p> </li> <li> <p>FF13CrystalRE - allows you to edit the crystarium wdb files from XIII (PC version only).</p> </li> <li> <p>FFXIII-2PCSaveEditor - save editor tool for XIII-2 (PC version only).</p> </li> <li> <p>TxbImageTool - allows you to extract and convert image files to the format that is supported by the trilogy. </p> </li> <li> <p>TRBtool - allows you to unpack and repack the TRB files present in the trilogy.</p> </li> <li> <p>WDBJsonTool - allows you to extract WDB files to Json format as well as convert the Json file back to WDB format.</p> </li> <li> <p>WDBXlsxTool - allows you to extract WDB files to excel (.xlsx) format as well as convert the xlsx file back to WDB format.</p> </li> <li> <p>WDBXlsxConverter [depreciated] - allows you to convert the WDB files to Xlsx format.</p> </li> <li> <p>WhiteBinTools - allows you to manage the filelist and white archive files present in the trilogy.</p> </li> <li> <p>WhiteCryptTool - allows you to decrypt and encrypt filelist and clb files present in the trilogy.</p> </li> <li> <p>WhiteFilelistManager - allows you to manage the filelist files present in the trilogy.</p> </li> <li> <p>WPDtool - allows you to unpack and repack.bin (not the filelist and white archives), .wdb, .wpd, .wpk, .xfv, .xgr, .xwb, and .xwp files, present in the trilogy.</p> </li> <li> <p>ZTRtool - allows you to manage the ZTR files present in the trilogy</p> </li> </ul>"},{"location":"user-resource/dirs-info/","title":"Directory Info","text":"<p>This page contains information on what all types of files are stored in each of the root directories present in each game from the trilogy.</p>"},{"location":"user-resource/dirs-info/#final-fantasy-xiii","title":"FINAL FANTASY XIII","text":"<p>Root folder is <code>white_data</code></p> <pre><code>\"ac\"        // mini cutscenes setup/schedule files\n\"bg\"        // map model files\n\"btscene\"   // battle scene setup database files\n\"chr\"       // characters, npc, summons, enemies and small object model files\n\"db\"        // database files\n\"event\"     // main cutscene setup/schedule files\n\"gui\"       // image files used in UI elements \n\"mot\"       // animation files\n\"movie\"     // Pre-rendered movie files\n\"prog\"      // game exe and libraries\n\"railcam\"   // camera related files\n\"scene\"     // layout setup files\n\"sound\"     // sound files\n\"sys\"       // main filelists and archive files, core scripts, and savedata images\n\"txtres\"    // ztr text files\n\"vfx\"       // vfx files\n\"zone\"      // zone filelists, scripts, and database files\n</code></pre>"},{"location":"user-resource/dirs-info/#final-fantasy-xiii-2","title":"FINAL FANTASY XIII-2","text":"<p>Root folder is <code>alba_data</code></p> <pre><code>\"ac\"         // mini cutscenes setup/schedule files\n\"bg\"         // map model files\n\"btscene\"    // battle scene setup database files\n\"chr\"        // characters, npc, summons, enemies and small object model files\n\"db\"         // database files\n\"event\"      // main cutscene setup/schedule files\n\"gui\"        // image files used in UI elements \n\"mot\"        // animation files\n\"movie\"      // movie archive files. ignored if running in unpacked mode\n\"movie_win\"  // Pre-rendered movie files\n\"prog\"       // game exe and libraries\n\"railcam\"    // camera related files\n\"scene\"      // layout setup files\n\"sound\"      // sound files\n\"sys\"        // main filelists and archive files, core scripts, and savedata images\n\"txtres\"     // ztr text files\n\"udp\"        // filelist and archive files containing sound related data\n\"vfx\"        // vfx files\n\"zone\"       // zone filelists, scripts, and database files\n</code></pre>"},{"location":"user-resource/dirs-info/#lightning-returns-final-fantasy-xiii","title":"LIGHTNING RETURNS FINAL FANTASY XIII","text":"<p>Root folder is <code>weiss_data</code></p> <pre><code>\"bg\"         // map model files\n\"btscene\"    // battle scene setup database files\n\"chr\"        // characters, npc, summons, enemies and small object model files\n\"db\"         // database and sidequest ztr text files\n\"dlc\"        // filelist and archive files for dlc content\n\"event\"      // main cutscene setup/schedule files\n\"gui\"        // image files used in UI elements \n\"mot\"        // animation files\n\"movie\"      // Pre-rendered movie files\n\"scene\"      // layout setup files\n\"sound\"      // sound files\n\"sys\"        // main filelists and archive files, core scripts, and savedata images\n\"txtres\"     // ztr text files\n\"vfx\"        // vfx files\n\"zone\"       // zone filelists, scripts, and database files\n</code></pre>"},{"location":"user-resource/file-ids/","title":"File IDs","text":"<p>These docs contain information on file IDs that are used by some of files in their filecodes. you can use these IDs as a reference when generating new filepaths for these types of files with the WhiteFilelistManager tool.</p>"},{"location":"user-resource/file-ids/#sound-files","title":"Sound files","text":"<p>Files referenced in this doc, can be found in the <code>sound/pack</code> folder. </p> <p>Only the internal names of the sound files are given in the doc and as these are internal names, they do not have the platform identifier <code>.win32</code> string suffix at the end of the name.</p> <p>XIII and XIII-2 have an additional sheet called <code>_us</code> which includes a separate set of ids for all the files when included with the english audio files. because of this reason, there can be cases where the same filename would use a different id, when included with the english audio files.</p> <p>https://docs.google.com/spreadsheets/d/1PMMfSZoC8hdHAyj44lbHZRgIFOy3qBH1/edit?usp=sharing&amp;ouid=112587727855369967531&amp;rtpof=true&amp;sd=true</p>"},{"location":"user-resource/file-ids/#vfx-files","title":"Vfx files","text":"<p>Files referenced in this doc, can be found in the <code>vfx/event</code> folder.</p> <p>https://docs.google.com/spreadsheets/d/1nsjubGxKgoMa9Cotd8oaPhrHfOcmXR6S/edit?usp=sharing&amp;ouid=112587727855369967531&amp;rtpof=true&amp;sd=true</p>"},{"location":"user-resource/file-info/","title":"File Info","text":"<p>These docs contain information on some of the game files from the trilogy. </p> <p>Currently only Lightning Returns and a small bit of data from Final Fantasy XIII-2 has some documentation on its doc sheets. this includes information for main characters models, garb models, weapon models, monster models, and some environment models.</p>"},{"location":"user-resource/file-info/#final-fantasy-xiii-1","title":"FINAL FANTASY XIII-1","text":"<p>https://docs.google.com/spreadsheets/d/1UZLhk0g2Bbx6REYOW-OZmTUPQ4YDRBeicWdUZTuW-as/edit?usp=sharing</p>"},{"location":"user-resource/file-info/#final-fantasy-xiii-2","title":"FINAL FANTASY XIII-2","text":"<p>https://docs.google.com/spreadsheets/d/1KTL35B5hBfbYWyJ1prAG9ziuBZOQKKmObiR8R34iH_0/edit?usp=sharing</p>"},{"location":"user-resource/file-info/#lightning-returns-final-fantasy-xiii","title":"LIGHTNING RETURNS FINAL FANTASY XIII","text":"<p>https://docs.google.com/spreadsheets/d/1cIH9rrzQXHLDC8yGtpb8u34P6qg03HvBpRy-aKqPwS0/edit?usp=sharing</p>"},{"location":"user-resource/internal-ids-info/","title":"Internal IDs Info","text":"<p>This page contains links to internal ids used for representing abilities, items, and stats used by each game from the trilogy</p>"},{"location":"user-resource/internal-ids-info/#links","title":"Links","text":"<ul> <li> <p>XIII IDs</p> </li> <li> <p>XIII-2 IDs</p> </li> <li> <p>LR IDs</p> </li> </ul>"},{"location":"user-resource/internal-ids-xiii/","title":"Internal IDs XIII","text":""},{"location":"user-resource/internal-ids-xiii/#abilities","title":"Abilities","text":"ID Name ade740_00 Adrenaline mb400_00 Aero mb420_00 Aeroga mb410_00 Aerora at010_40 Aquastrike c000_at900_00 Army of One - Lightning at010_00 Attack c000_at010_00 Attack - Lightning c002_at010_00 Attack - Sazh c003_at010_00 Attack - Hope c004_at010_00 Attack - Vanille me530_00 Barfire me540_00 Barfrost me550_00 Barthunder me560_00 Barwater aat540_00 Blindside ac004_at540_00 Blindside - Vanille at520_00 Blitz c002_at520_00 Blitz - Sazh c003_at520_00 Blitz - Hope mb120_00 Blizzaga mb110_00 Blizzara mb100_00 Blizzard ade850_00 Boon me200_00 Bravera me000_00 Bravery ac110_00 Challenge c002_at900_00 Cold Blood - Sazh ade110_00 Counter mw010_00 Cura mw030_00 Curaja mw020_00 Curasa mw000_00 Cure mg530_00 Curse mg730_00 Cursega mg540_00 Daze mg740_00 Dazega ms400_00 Death ade710_00 Deathblow ade600_00 Deathward mg000_00 Deprotect mg200_00 Deprotega mg010_00 Deshell mg210_00 Deshellga mg240_00 Dispel tp300_00 Dispelga gd210_00 Elude me030_00 Enfire me040_00 Enfrost me050_00 Enthunder c003_gd410_00 Entrench - Hope c004_gd410_00 Entrench - Vanille gd410_00 Entrench me060_00 Enwater mw200_00 Esuna ade010_00 Evade me010_00 Faith me210_00 Faithra ade730_00 Faultsiphon ade800_00 Fearsiphon mb010_00 Fira mb020_00 Firaga mb000_00 Fire at010_10 Flamestrike c002_at010_10 Flamestrike - Sazh mg510_00 Fog mg710_00 Fogga ade610_00 Fringeward at010_20 Froststrike me020_00 Haste c005_at900_00 Highwind - Fang mg030_00 Imperil mg230_00 Imperilga ade700_00 Jeopardize ade900_00 Jinx ms200_00 Last Resort aat500_00 Launch tp100_00 Libra ade720_00 Lifesiphon gd110_00 Mediguard ade810_00 Overwhelm mg520_00 Pain mg720_00 Painga mg020_00 Poison mg220_00 Poisonga aat550_00 Powerchain me500_00 Protect me700_00 Protectra ac100_00 Provoke tp400_00 Quake mw100_00 Raise aat530_00 Ravage ac003_at530_00 Ravage - Hope tp000_00 Renew ade620_00 Reprieve ma000_00 Ruin ma020_00 Ruinga aat570_00 Scourge ac003_at570_00 Scourge - Hope ac004_at570_00 Scourge - Vanille me510_00 Shell me710_00 Shellra mg500_00 Slow mg700_00 Slowga aat560_00 Smite c001_at900_00 Sovereign Fist - Snow at010_30 Sparkstrike c002_at010_30 Sparkstrike - Sazh gd010_00 Steelguard tp200_00 Stopga mb220_00 Thundaga mb200_00 Thunder mb210_00 Thundera me520_00 Veil c002_gd310_00 Vendetta - Sazh c003_gd310_00 Vendetta - Hope gd310_00 Vendetta me070_00 Vigilance ade820_00 Vigor mb300_00 Water mb310_00 Watera mb320_00 Waterga"},{"location":"user-resource/internal-ids-xiii/#accessories","title":"Accessories","text":"ID Name acc_000_000 Iron Bangle acc_000_001 Silver Bangle acc_000_002 Tungsten Bangle acc_000_003 Titanium Bangle acc_000_004 Gold Bangle acc_000_005 Mythril Bangle acc_000_006 Platinum Bangle acc_000_007 Diamond Bangle acc_000_008 Adamant Bangle acc_000_009 Wurtzite Bangle acc_000_100 Power Wristband acc_000_101 Brawler's Wristband acc_000_102 Warrior's Wristband acc_000_103 Power Glove acc_000_104 Kaiser Knuckles acc_000_200 Magician's Mark acc_000_201 Shaman's Mark acc_000_202 Sorcerer's Mark acc_000_203 Weirding Glyph acc_000_204 Magistral Crest acc_000_300 Black Belt acc_000_301 General Belt acc_000_302 Champion's Belt acc_000_400 Rune Braclet acc_000_401 Witch's Bracelet acc_000_402 Magus's Bracelet acc_000_500 Royal Armlet acc_000_501 Imperial Armlet acc_001_000 Ember Ring acc_001_001 Blaze Ring acc_001_002 Salamandrine Ring acc_002_000 Frost Ring acc_002_001 Icicle Ring acc_002_002 Boreal Ring acc_003_000 Spark Ring acc_003_001 Fulmen Ring acc_003_002 Raijen Ring acc_004_000 Aqua Ring acc_004_001 Riptide Ring acc_004_002 Nereid Ring acc_005_000 Clay Ring acc_005_001 Siltstone Ring acc_005_002 Gaian Ring acc_006_000 Zephyr Ring acc_006_001 Gale Ring acc_006_002 Sylphid Ring acc_007_000 Entite Ring acc_009_000 Giant's Glove acc_009_001 Warlord's Glove acc_010_000 Glass Buckle acc_010_001 Tektite Buckle acc_011_000 Metal Armband acc_011_001 Ceramic Armband acc_012_000 Serenity Sachet acc_012_001 Safeguard Sachet acc_013_000 Glass Orb acc_013_001 Dragonfly Orb acc_014_000 Star Pendant acc_014_001 Starfall Pendant acc_015_000 Pearl Necklace acc_015_001 Gemstone Necklace acc_016_000 Warding Talisman acc_016_001 Hexbane Talisman acc_017_000 Pain Dampener acc_017_001 Pain Deflector acc_018_000 White Cape acc_018_001 Effulgent Cape acc_019_000 Rainbow Anklet acc_019_001 Moonbow Anklet acc_020_000 Cherub's Crown acc_020_001 Seraph's Crown acc_023_000 Ribbon acc_023_001 Super Ribbon acc_025_000 Guardian Amulet acc_025_001 Shield Talisman acc_026_000 Auric Amulet acc_026_001 Soulfont Talisman acc_027_000 Watchman's Amulet acc_027_001 Shrouding Talisman acc_028_000 Hero's Amulet acc_028_001 Morale Talisman acc_029_000 Saint's Amulet acc_029_001 Blessed Talisman acc_030_000 Hermes Sandals acc_030_001 Sprint Shoes acc_031_000 Flamebane Brooch acc_031_001 Flameshield Earring acc_032_000 Frostbane Brooch acc_032_001 Frostshield Earring acc_033_000 Sparkbane Brooch acc_033_001 Sparkshield Earring acc_034_000 Aquabane Brooch acc_034_001 Aquashield Earring acc_035_000 Zealot's Amulet acc_035_001 Battle Talisman acc_036_000 Tetradic Crown acc_036_001 Tetradic Tiara acc_037_000 Whistlewind Scarf acc_037_001 Aurora Scarf acc_038_000 Nimbletoe Boots acc_039_000 Collectors Catalog acc_039_001 Connoisseur Catalog acc_040_000 Gold Watch acc_040_001 Champion's Badge acc_040_002 Survivalist Catalog acc_041_000 Hunter's Friend acc_041_001 Speed Sash acc_041_002 Energy Sash acc_042_001 Genji Glove acc_045_000 Growth Egg acc_046_000 Twenty-sided Die acc_047_000 Fire Charm acc_048_000 Ice Charm acc_049_000 Lightning Charm acc_050_000 Water Charm acc_051_000 Wind Charm acc_052_000 Earth Charm acc_053_000 Doctor's Code acc_054_000 Goddess's Favor"},{"location":"user-resource/internal-ids-xiii/#consumables","title":"Consumables","text":"ID Name it_antidote Antidote it_barsmoke Aegisol it_elixir Elixir it_holywater Holy Water it_libra Libra Scope it_phenxtal Phoenix Down it_potion Potion it_powersmoke Fortisol it_sedative Painkiller it_sneaksmoke Deceptisol it_stinkwater Foul Liquid it_tonkati Mallet it_tpsmoke Ethersol it_wax Wax"},{"location":"user-resource/internal-ids-xiii/#keys","title":"Keys","text":"ID Name key_c_alexa Eidolon Alexander key_c_baha Eidolon Bahamut key_c_bryn Eidolon Brynhildr key_c_hecat Eidolon Hecatoncheir key_c_odin Eidolon Odin key_c_shiva Eidolon Shiva key_commun Communicator key_ctool Omni-Tool key_field_00 Gysahl Reins - Chocobos key_field_01 Aspheric Lens key_field_02 Trochoid Gear key_field_03 Metal Plates key_field_04 Power Cable key_field_05 Battery Pack key_ggear key_knife Serah's Present key_receiver key_shop_00 Unicorn Mart key_shop_01 Eden Pharmaceuticals key_shop_02 Up In Arms key_shop_03 Plautus's Workshop key_shop_05 Gilgamesh key_shop_06 B&amp;W Outfitters key_shop_07 Magical Moments key_shop_08 Moogleworks key_shop_09 Sanctum Labs key_shop_10 Creature Comforts key_shop_11 The Motherload key_shop_12 Lenora's Garage key_shop_13 R&amp;D Depot key_tears Serah\u2019s Tear"},{"location":"user-resource/internal-ids-xiii/#materials","title":"Materials","text":"ID Name material_j000 Insulated Cabling material_j001 Fiber-Optic Cable material_j002 Liquid Crystal Lens material_j003 Ring Joint material_j004 Epicyclic Gear material_j005 Crankshaft material_j006 Electrolytic Capacitor material_j007 Flywheel material_j008 Sprocket material_j009 Actuator material_j010 Spark Plug material_j011 Iridium Plug material_j012 Needle Valve material_j013 Butterfly Valve material_j014 Analog Circuit material_j015 Digital Circuit material_j016 Gyroscope material_j017 Electrode material_j018 Ceramic Armor material_j019 Chobham Armor material_j020 Radial Bearing material_j021 Thrust Bearing material_j022 Turboprop material_j023 Mobius Coil material_j024 Tungsten Tube material_j025 Titanium Tube material_j026 Passive Detector material_j027 Active Detector material_j028 Transformer material_j029 Amplifier material_j030 Carburetor material_j031 Supercharger material_j032 Piezoelectric Elements material_j033 Crystal Oscillator material_j034 Paraffin Oil material_j035 Silicone Oil material_j036 Synthetic Muscle material_j037 Passive Detector material_j038 Turbojet material_j039 Tesla Turbine material_j040 Polymer Emulsion material_j041 Ferroelectric Film material_j042 Superconductor material_j043 Perfect Conductor material_j044 Particle Accelerator material_j045 Ultracompact Reactor material_j046 Credit Chip material_j047 Incentive Chip material_j048 Cactuar Doll material_j049 Moogle Puppet material_j050 Tonberry Figurine material_j051 Plush Chocobo material_m000 Begrimed Claws material_m001 Bestial Claws material_m002 Gargantuan Claw material_m003 Hellish Talon material_m004 Shattered Bone material_m005 Sturdy Bone material_m006 Otherworldly Bone material_m007 Ancient Bone material_m009 Moistened Scale material_m010 Seapetal Scale material_m011 Abyssal Scales material_m012 Seaking's Beard material_m013 Segmented Carapaces material_m014 Iron Shell material_m015 Armored Shell material_m016 Regenerating Carapace material_m017 Chipped Fang material_m018 Wicked Fang material_m019 Monstrous Fang material_m020 Sinister Fang material_m021 Severed Wing material_m022 Scaled Wing material_m023 Abominable Wing material_m024 Menacing Wing material_m025 Molted Tail material_m026 Barbed Tail material_m027 Diabolic Tail material_m028 Entrancing Tail material_m029 Torn Leather material_m030 Thickened Hide material_m031 Smooth Hide material_m032 Supple Leather material_m033 Gummy Oil material_m034 Fragrant Oil material_m035 Medicinal Oil material_m036 Esoteric Oil material_m037 Scraggly Wool material_m038 Rough Wool material_m039 Thick Wool material_m040 Fluffy Wool material_m041 Bomb Ashes? material_m042 Bomb Fragment material_m043 Bomb Core material_m044 Bomb Shell material_m045 Murky Ooze material_m046 Vibrant Ooze material_m047 Transparent Ooze material_m048 Wonder Gel material_m049 Fractured Horn material_m050 Spined Horn material_m051 Fiendish Horn material_m052 Infernal Horn material_m053 Strange Fluid material_m054 Enigmatic Fluid material_m055 Mysterious Fluid material_m056 Ineffable Fluid material_m057 Cie'th Tear material_m058 Tears of Frustration material_m059 Tears of Remorse material_m060 Tear of Woe material_m061 Chocobo Plume material_m062 Chocobo Tail Feather material_m063 Green Needle material_m064 Dawnlight Dew material_m065 Dusklight Dew material_m066 Gloomstalk material_m067 Sunpetals material_m068 Red Mycelia material_m069 Blue Mycelia material_m070 White Mycelia material_m071 Black Mycelia material_m072 Succulent Fruit material_m073 Malodorous Fruits material_m074 Moonblossom Seed material_m075 Starblossom Seed material_m076 Perfume material_o000 Millerite material_o001 Rhodochrosite material_o002 Cobalite material_o003 Perovskite material_o004 Uranite material_o005 Mnar Stone material_o006 Scarletite material_o007 Adamantite material_o008 Dark Matter material_o009 Trapozohedran material_o010 Gold Dust material_o011 Gold Nugget material_o012 Platinum Ingot"},{"location":"user-resource/internal-ids-xiii/#stats","title":"Stats","text":"Stat ID Health 1 Strength 5 Magic 6 Evade 9 Resilience 10 Resist Physical 16 Resist Magic 17 Resist Fire 18 Resist Frost 19 Resist Lightning 20 Resist Water 21 Resist Earth 22 Resist Air 23 Resist Fog 24 Resist Slow 25 Resist Imperil 26 Resist Pain 27 Resist Curse 28 Resist Daze 29 Resist Poison 30 Resist Deprotect 32 Resist Deshell 33 Resist Debrave 37 Resist Defaith 38 Resist Death 52 Resist Elements 60"},{"location":"user-resource/internal-ids-xiii/#synthesized-abilities","title":"Synthesized Abilities","text":"Ability Ability Power ID High HP High HP: Power Surge 1 Low HP Low HP: Power Surge 2 Physical Defense Physical Wall 3 Magic Defense Magic Wall 4 Damage Reduction Damage Wall 7 Ultimate Physic Ethereal Mantle 9 Ultimate Magic Magic Damper 10 Fire Resistance Fire Damage 11 Ice Resistance Ice Damage 12 Lightning Resistance Lightning Damage 13 Water Resistance Water Damage 14 Wind Resistance Wind Damage 15 Earth Resistance Earth Damage 16 Debrave Resistance Debrave Duration 17 Defaith Resistance Defaith Duration 18 Deprotect Resistance Deprotect Duration 19 Deshell Resistance Deshell Duration 20 Slow Resistance Slow Duration 21 Poison Resistance Poison Duration 22 Imperil Resistance Imperil Duration 23 Curse Resistance Curse Duration 24 Pain Resistance Pain Duration 25 Fog Resistance Fog Duration 26 Daze Resistance Daze Duration 27 Boost ATB Rate 30 Gestalt Random: Instant Chain / Gestalt / TP Boost 31 Positive Effect Buff Duration 32 Adamancy Vampiric Strike 33 Independent - 34"},{"location":"user-resource/internal-ids-xiii/#weapons","title":"Weapons","text":"ID Name wea_fan_000 Longinus (Not in Game) wea_fan_001 Bladed Lance wea_fan_002 Glaive wea_fan_003 Dragoon Lance wea_fan_004 Dragonhorn wea_fan_005 Partisan wea_fan_006 Rhomphaia wea_fan_007 Shamanic Spear wea_fan_008 Heretic's Halberd wea_fan_009 Punisher wea_fan_010 Banescissor Spear wea_fan_011 Pandoran Spear wea_fan_012 Calamity Spear wea_fan_013 Taming Pole wea_fan_014 Venus Gospel wea_fan_015 Gae Bolg wea_fan_016 Gungnir wea_fan_017 Kain's Lance (Bladed Lance) wea_fan_018 Kain's Lance (Dragoon Lance) wea_fan_019 Kain's Lance (Partisan) wea_fan_020 Kain's Lance (Shamanic Spear) wea_fan_021 Kain's Lance (Punisher) wea_fan_022 Kain's Lance (Pandoran Spear) wea_fan_023 Kain's Lance (Taming Pole) wea_fan_024 Kain's Lance (Gae Bolg) wea_hop_000 Rising Sun (Not in Game) wea_hop_001 Airwing wea_hop_002 Skycutter wea_hop_003 Hawkeye wea_hop_004 Eagletalon wea_hop_005 Otshirvani wea_hop_006 Urubutsin wea_hop_007 Ninurta wea_hop_008 Jatayu wea_hop_009 Vidofnir wea_hop_010 Hresvelgr wea_hop_011 Simurgh wea_hop_012 Tezcatlipoca wea_hop_013 Malphas wea_hop_014 Naberius wea_hop_015 Alicanto wea_hop_016 Caladrius wea_hop_017 Nue (Airwing) wea_hop_018 Nue (Eagletalon) wea_hop_019 Nue (Otshirvani) wea_hop_020 Nue (Ninurta) wea_hop_021 Nue (Vidofnir) wea_hop_022 Nue (Simurgh) wea_hop_023 Nue (Malphas) wea_hop_024 Nue (Alicanto) wea_lig_000 Godslayer (Not in Game) wea_lig_001 Blazefire Saber wea_lig_002 Flamberge wea_lig_003 Axis Blade wea_lig_004 Enkindler wea_lig_005 Edged Carbine wea_lig_006 Razor Carbine wea_lig_007 Lifesaber wea_lig_008 Peacemaker wea_lig_009 Gladius wea_lig_010 Helter-skelter wea_lig_011 Organyx wea_lig_012 Apocalypse wea_lig_013 Hauteclaire wea_lig_014 Durandal wea_lig_015 Lionheart wea_lig_016 Ultima Weapon wea_lig_017 Omega Weapon (Blaxefire Saber) wea_lig_018 Omega Weapon (Axis Blade) wea_lig_019 Omega Weapon (Edged Carbine) wea_lig_020 Omega Weapon (Lifesaber) wea_lig_021 Omega Weapon (Gladius) wea_lig_022 Omega Weapon (Organyx) wea_lig_023 Omega Weapon (Hauteclaire) wea_lig_024 Omega Weapon (Lionheart) wea_saz_000 Death Penalties (Not in Game) wea_saz_001 Vega 42s wea_saz_002 Altairs wea_saz_003 Spica Defenders wea_saz_004 Sirius Sidearms wea_saz_005 Deneb Duellers wea_saz_006 Canopus AMPs wea_saz_007 Rigels wea_saz_008 Polaris Specials wea_saz_009 Aldebarans wea_saz_010 Sadalmeliks wea_saz_011 Pleiades Hi-Powers wea_saz_012 Hades Magnums wea_saz_013 Antares Deluxes wea_saz_014 Fomalhaut Elites wea_saz_015 Procyons wea_saz_016 Betelgeuse Customs wea_saz_017 Total Eclipses (Vega 42s) wea_saz_018 Total Eclipses (Spica Defenders) wea_saz_019 Total Eclipses (Deneb Duellers) wea_saz_020 Total Eclipses (Rigels) wea_saz_021 Total Eclipses (Aldebarans) wea_saz_022 Total Eclipses (Pleiades Hi-Powers) wea_saz_023 Total Eclipses (Antares Deluxes) wea_saz_024 Total Eclipses (Procyons) wea_sno_000 Omnipotence (Not in Game) wea_sno_001 Wild Bear wea_sno_002 Feral Pride wea_sno_003 Paladin wea_sno_004 Winged Saint wea_sno_005 Rebel Heart wea_sno_006 Warrior's Emblem wea_sno_007 Power Circle wea_sno_008 Battle Standard wea_sno_009 Feymark wea_sno_010 Soul Blazer wea_sno_011 Sacrificial Circle wea_sno_012 Indomitus wea_sno_013 Unsetting Sun wea_sno_014 Midnight Sun wea_sno_015 Umbra wea_sno_016 Solaris wea_sno_017 Save the Queen (Wild Bear) wea_sno_018 Save the Queen (Paladin) wea_sno_019 Save the Queen (Rebel Heart) wea_sno_020 Save the Queen (Power Circle) wea_sno_021 Save the Queen (Feymark) wea_sno_022 Save the Queen (Sacrificial Circle) wea_sno_023 Save the Queen (Unsetting Sun) wea_sno_024 Save the Queen (Umbra) wea_van_000 Faerie Tail (Not in Game) wea_van_001 Binding Rod wea_van_002 Hunter's Rod wea_van_003 Tigerclaw wea_van_004 Wyrmfang wea_van_005 Healer's Staff wea_van_006 Physician's Staff wea_van_007 Pearlwing Staff wea_van_008 Brightwing Staff wea_van_009 Rod of Thorns wea_van_010 Orochi Rod wea_van_011 Mistilteinn wea_van_012 Erinye's Cane wea_van_013 Belladonna Wand wea_van_014 Malboro Wand wea_van_015 Heavenly Axis wea_van_016 Abraxas wea_van_017 Nirvana (Binding Rod) wea_van_018 Nirvana (Tigerclaw) wea_van_019 Nirvana (Healer's Staff) wea_van_020 Nirvana (Pearlwing Staff) wea_van_021 Nirvana (Rod of Thorns) wea_van_022 Nirvana (Mistliteinn) wea_van_023 Nirvana (Belladonna Wand) wea_van_024 Nirvana (Heavenly Axis)"},{"location":"user-resource/internal-ids-xiii2/","title":"Internal IDs XIII-2","text":""},{"location":"user-resource/internal-ids-xiii2/#abilities","title":"Abilities","text":"ID Name ade600_00 Deathward ade610_00 Fringeward ade720_00 Lifesiphon ade740_00 Adrenaline ade800_00 Fearsiphon ade810_00 Overwhelm aat500_00 Launch aat540_00 Blindside aat550_00 Powerchain aat560_00 Smite aat570_00 Scourge aat630_00 Armor Breaker aat640_00 Mind Piercer aat650_00 Bloodthirsty aat660_00 Stagger Wound aat670_00 Stagger Drain aat720_00 Slow Chaser aat730_00 Deprotect Chaser aat740_00 Deshell Chaser aat750_00 Imperil Chaser aat760_00 Curse Chaser aat770_00 Fog Chaser aat780_00 Pain Chaser aat790_00 Poison Chase aat800_00 Bravery Feeder aat830_00 Protect Feeder aat840_00 Shell Feeder ac100_00 Provoke ac110_00 Challenge gd010_00 Steelguard gd110_00 Mediguard gd310_00 Vendetta gd410_00 Entrench gd510_00 Element Guard ma000_00 Ruin ma020_00 Ruinga at010_00 Attack at520_00 Blitz at620_00 Area Sweep mb000_00 Fire mb010_00 Fira mb020_00 Firaga mb100_00 Blizzard mb110_00 Blizzara mb120_00 Blizzaga mb200_00 Thunder mb210_00 Thundara mb220_00 Thundaga mb400_00 Aero mb410_00 Aerora mb420_00 Aeroga at010_10 Flamestrike at010_20 Froststrike at010_30 Sparkstrike at010_50 Galestrike at620_00 Heat Blitz at620_20 Ice Blitz at620_30 Electric Blitz at620_50 Aero Blitz me000_00 Bravery me010_00 Faith me030_00 Enfire me040_00 Enfrost me050_00 Enthunder me070_00 Vigilance me080_00 Enaero me220_00 Bravega me230_00 Faithga me500_00 Protect me510_00 Shell me520_00 Veil me720_00 Protectga me730_00 Shellga me740_00 Veilga me750_00 Vigilaga me800_00 Endless Blessings mg000_00 Deprotect mg010_00 Deshell mg020_00 Poison mg030_00 Imperil mg200_00 Deprotega mg210_00 Deshellga mg220_00 Poisonga mg230_00 Imperilga mg240_00 Dispel mg250_00 Dispelga mg510_00 Fog mg520_00 Pain mg530_00 Curse mg550_00 Wound mg710_00 Fogga mg720_00 Painga mg730_00 Cursega mg750_00 Woundga mg800_00 Endless Knightmare mg000_at Deprotect 2 mg010_at Deshell 2 mg020_at Poison 2 mg030_at Imperil 2 mg200_at Heavy Deprotega mg210_at Heavy Deshellga mg220_at Heavy Poisonga mg230_at Heavy Imperilga mg510_at Fog 2 mg520_at Pain 2 mg530_at Curse 2 mg710_at Heavy Fogga mg720_at Heavy Painga mg730_at Heavy Cursega mw000_00 Cure mw010_00 Cura mw020_00 Curasa mw100_00 Raise mw200_00 Esuna mw210_00 Esunada mw900_00 Cheer"},{"location":"user-resource/internal-ids-xiii2/#accessories","title":"Accessories","text":"ID Name acc_000_000 Iron Bangle acc_000_001 Silver Bangle acc_000_004 Gold Bangle acc_000_010 Delicate Iron Bangle acc_000_011 Durable Iron Bangle acc_000_012 Delicate Silver Bangle acc_000_013 Durable Silver Bangle acc_000_014 Delicate Gold Bangle acc_000_015 Durable Gold Bangle acc_000_100 Power Wristband acc_000_101 Brawler's Wristband acc_000_104 Kaiser Knuckles acc_000_105 Delicate Power Wristband acc_000_106 Durable Power Wristband acc_000_107 Delicate Brawler's Wristband acc_000_108 Durable Brawler's Wristband acc_000_109 Durable Kaiser Knuckles acc_000_200 Magician's Mark acc_000_201 Shaman's Mark acc_000_204 Magistral Crest acc_000_205 Delicate Magician's Mark acc_000_206 Durable Magician's Mark acc_000_207 Delicate Shaman's Mark acc_000_208 Durable Shaman's Mark acc_000_209 Durable Magistral Crest acc_000_300 Black Belt acc_000_301 General's Belt acc_000_303 Delicate Black Belt acc_000_304 Durable Black Belt acc_000_305 Delicate General's Belt acc_000_306 Durable General's Belt acc_000_400 Rune Bracelet acc_000_401 Witch's Bracelet acc_000_403 Delicate Rune Bracelet acc_000_404 Durable Rune Bracelet acc_000_405 Delicate Witch's Bracelet acc_000_406 Durable Witch's Bracelet acc_000_500 Royal Armlet acc_000_502 Delicate Royal Armlet acc_000_503 Durable Royal Armlet acc_001_000 Ember Ring acc_001_001 Blaze Ring acc_001_003 Delicate Ember Ring acc_001_004 Durable Ember Ring acc_001_005 Delicate Blaze Ring acc_001_006 Durable Blaze Ring acc_002_000 Frost Ring acc_002_001 Icicle Ring acc_002_003 Delicate Frost Ring acc_002_004 Durable Frost Ring acc_002_005 Delicate Icicle Ring acc_002_006 Durable Icicle Ring acc_003_000 Spark Ring acc_003_001 Fulmen Ring acc_003_003 Delicate Spark Ring acc_003_004 Durable Spark Ring acc_003_005 Delicate Fulmen Ring acc_003_006 Durable Fulmen Ring acc_005_000 Zephyr Ring acc_005_001 Gale Ring acc_005_003 Delicate Zephyr Ring acc_005_004 Durable Zephyr Ring acc_005_005 Delicate Gale Ring acc_005_006 Durable Gale Ring acc_007_000 Entite Ring acc_007_001 Delicate Entite Ring acc_007_002 Durable Entite Ring acc_011_000 Metal Armband acc_011_002 Delicate Metal Armband acc_011_003 Durable Metal Armband acc_012_000 Serenity Sachet acc_012_002 Delicate Serenity Sachet acc_012_003 Durable Serenity Sachet acc_014_000 Star Pendant acc_014_002 Delicate Star Pendant acc_014_003 Durable Star Pendant acc_015_000 Pearl Necklace acc_015_002 Delicate Pearl Necklace acc_015_003 Durable Pearl Necklace acc_016_000 Warding Talisman acc_016_002 Delicate Warding Talisman acc_016_003 Durable Warding Talisman acc_017_000 Pain Dampener acc_017_002 Delicate Pain Dampener acc_017_003 Durable Pain Dampener acc_018_000 White Cape acc_018_002 Delicate White Cape acc_018_003 Durable White Cape acc_021_000 Obsidian Choker acc_021_002 Delicate Obsidian Choker acc_021_003 Durable Obsidian Choker acc_023_000 Ribbon acc_023_003 Delicate Ribbon acc_025_000 Guardian Amulet acc_025_002 Delicate Guardian Amulet acc_025_003 Durable Guardian Amulet acc_026_000 Auric Amulet acc_026_002 Delicate Auric Amulet acc_026_003 Durable Auric Amulet acc_027_000 Watchman's Amulet acc_027_002 Delicate Watchman's Amulet acc_027_003 Durable Watchman's Amulet acc_028_000 Hero's Amulet acc_028_002 Delicate Hero's Amulet acc_028_003 Durable Hero's Amulet acc_029_000 Saint's Amulet acc_029_002 Delicate Saint's Amulet acc_029_003 Durable Saint's Amulet acc_030_000 Hermes Sandals acc_030_002 Delicate Hermes Sandals acc_030_003 Durable Hermes Sandals acc_035_000 Zealot's Amulet acc_035_002 Delicate Zealot's Amulet acc_035_003 Durable Zealot's Amulet acc_039_000 Collector Catalog acc_039_002 Delicate Collector Catalog acc_039_003 Durable Collector Catalog acc_055_000 Sniper's Eye acc_055_001 Delicate Sniper's Eye acc_055_002 Durable Sniper's Eye acc_056_000 Twist Headband acc_056_001 Delicate Twist Headband acc_056_002 Durable Twist Headband acc_057_000 Bloodguard acc_057_001 Delicate Bloodguard acc_057_002 Durable Bloodguard acc_058_000 Hypnocrown acc_058_001 Delicate Hypnocrown acc_058_002 Durable Hypnocrown acc_059_000 Grimoire Hat acc_059_001 Durable Grimoire Hat acc_060_000 Fire Aegis acc_060_001 Delicate Fire Aegis acc_061_000 Ice Aegis acc_061_001 Delicate Ice Aegis acc_062_000 Lightning Aegis acc_062_001 Delicate Lightning Aegis acc_063_000 Wind Aegis acc_063_001 Delicate Wind Aegis acc_064_000 Martyr's Badge acc_065_000 Martyr's Emblem acc_066_000 Berserker's Ruby acc_067_000 Blaster's Sapphire acc_068_000 Defender's Topaz acc_069_000 Impeder's Opal acc_070_000 Supporter's Amethyst acc_071_000 Healer's Emerald acc_075_000 Stiltzkin's Diary acc_075_001 Durable Stiltzkin's Diary acc_076_000 Diva's Microphone acc_076_001 Delicate Diva's Microphone acc_077_000 Diva's Headphones acc_077_001 Delicate Diva's Headphones acc_078_000 Goddess's Bangle acc_078_001 Delicate Goddess's Bangle acc_079_000 Goddess's Earring acc_079_001 Delicate Goddess's Earring acc_080_000 Genji Glove acc_080_001 Delicate Genji Glove acc_081_000 Genji Shield acc_081_001 Delicate Genji Shield acc_082_000 Lightning Cross acc_083_000 Sergeant's Badge acc_084_000 Genji Helm acc_084_001 Delicate Genji Helm acc_085_000 Bloody Medallion acc_086_000 Colonel's Glasses acc_087_000 Snow's Bandanna"},{"location":"user-resource/internal-ids-xiii2/#artefacts-gate-seals","title":"Artefacts &amp; Gate Seals","text":"ID Name opt_aaea02_sp Vagabond Artefact opt_aaea_re 'Promises' Gate Seal opt_acea01_gt Tower Artefact opt_acea_re 'Flight' Gate Seal opt_acfa_re 'Final Battle' Gate Seal opt_bjaa01_gy Eclipse Arterfact opt_bjaa02_sn Reunion Arterfact opt_bjaa_re 'Scars' Gate Seal opt_bjba_re 'Disaster' Gate Seal opt_bjda_re 'Labyrinth' Gate Seal opt_clza_re 'Prediction' Gate Seal opt_csza_re 'Eternity' Gate Seal opt_ddha_re 'Determination' Gate Seal opt_gdza_re 'The Calm' Gate Seal opt_ghaa_re 'The Fall' Gate Seal opt_ghsn01_cs Illusionary Artefact opt_ghsn02_ac Restoration Artefact opt_gtca01_aa Artefact of Rebirth opt_gtca_re 'Facts' Gate Seal opt_gtda_re 'Silence' Gate Seal opt_gwca01_gh Artefact of Origins opt_gwca_re 'Encounters' Gate Seal opt_gwda_re 'How Things Were' Gate Seal opt_gwea_re 'Hometown' Gate Seal opt_gyaa01_gw Hollow Artefact opt_gyaa_re 'Visions' Gate Seal opt_gyba_re 'Reminiscence' Gate Seal opt_gyca_re 'Maleficence' Gate Seal opt_hmaa01_bj Giant's Artefact opt_hmaa_re 'Leaving' Gate Seal opt_hmha01_ac Artefact of the Ark opt_silver Wild Artefact opt_snda01_cl Combat Artefact opt_snda02_gd Thundering Artefact opt_snda_re 'Farewells' Gate Seal opt_snea_re 'Thunderstruck' Gate Seal opt_spza_re 'Sisters' Gate Seal opt_vaza_re 'Hope' Gate Seal opt_vpba_re 'Afterimage' Gate Seal opt_vpca_re 'Return' Gate Seal"},{"location":"user-resource/internal-ids-xiii2/#adornments","title":"Adornments","text":"ID Name e003 Lucky Clover e004 Tropical Tree e010 Single Horn e011 Antler e013 Shooting Star e014 Cute Heart e015 Halo e016 Zweng Ring e019 Light Bulb e023 Cie'th Wing e024 Moogle Wing e026 Coronet e027 Crown e030 Chef e031 Train Conductor Beret e032 Wizard's Hat e033 Academic's Hat e034 Chef's Hat e037 Bunny Ears e038 Onion'  Knight's Helm e039 Gold Anchor e041 Tonberry's Lantern e042 Summoner's Mask e043 Ripe Apple e044 Pumpkin Head e046 Crystal Rose e047 Crystal Tear e048 Crystal Heart e049 Crystal Feather e050 Crystal Petal e051 Crystal Apple e052 Crystal Star e053 Musical Bell e060 Mark of the l'Cie e061 Mark of Lindzel e062 Mark of Etro e065 Rangda Crest e066 Leyak Crest e067 Behemoth Crest e068 Canned Sheep Logo e069 Canned Coyo Logo e070 Dajh's Patch e072 Unicorn Mart Logo e073 Stormy Motors Logo e074 Flower Pattern e078 Frying Pan e079 Grudge Knife e080 Staff of Judgment e081 Mog's Clock e083 Fragment Crystal e090 Cactuar Figurine e091 Cute Cactuar Figurine e092 Carbuncle Figurine e093 Mog Figurine e094 Mini Flan Figurine e096 Tonberry Figurine e097 Woolly Sheep Figurine e098 Afro e103 Bandaid e107 Caius's Sword e108 Serah Mask e109 Lightning Mask e110 Mog Mask e111 Retro Serah Mask e112 Retro Lightning Mask e113 Retro Mog Mask e200 Blue Flower e201 Pink Flower e202 White Flower e203 Purple Flower e204 White Tree e205 Suspicious Mushroom e206 Toxic Mushroom e207 Blue Butterfly e208 Yellow Butterfly e209 Gold Windup Key e210 Aqua Ribbon e211 Pink Ribbon e212 Gold Gear e213 Red Chocobo Figurine e214 Blue Chocobo Figurine e215 Purple Chocobo Figurine e216 White Chocobo Figurine e217 Black Chocobo Figurine e218 Silver Chocobo Figurine e219 Gold Chocobo Figurine e220 Youthful Parasol e221 Sentimental Parasol e222 Blue Propeller e223 Red Propeller e224 Blue Moogle Bobble e226 Aqua Fairy Wings e227 Snowy Fairy Wings e228 Orange Newsboy Cap e229 Pink Newsboy Cap e230 Red Silk Hat e231 Sky Blue Silk Hat e232 Blue Mage's Chapeau e233 Pink Party Hat e234 Blue Party Hat e235 Tranquil Headdress e236 Whimsical Headdress e237 Strawberry Ice Cream e238 Rum Raisin Ice Cream e239 Yellow Bow Tie e240 Orange Bow Tie e241 Yellow-Rimmed Glasses e242 Pink-Rimmed Glasses e243 Gold Shades e244 Violet Shades e245 Masquerade Mask e246 Carnival Mask e247 White Bushy Mustache e248 Brown Bushy Mustache e251 Lebreau's Black Tattoo e252 Lebreau's Olive Tattoo e253 Gadot's Black Emblem e254 Gadot's Blue Emblem e255 Black Tattoo e256 Pink Tattoo e257 Sky Blue NORA Symbol e258 Green NORA Symbol e259 Blue Feather Hairpin e260 Dusk Feather Hairpin e261 Long Gui Backpack e262 Sahagin Hide Backpack e263 Blue Beacon e264 Red Beacon e265 Guard's Ravager Badge e266 Red Commando Badge e267 Guard's Medic Badge e268 Blue Pilot's Badge e269 Orange Pilot's Badge e270 Green Pilot's Badge e271 Blue PSICOM Spaulders e272 Red PSICOM Spaulders e273 Green PSICOM Spaulders e274 Silver Medal e275 Bronze Medal e278 Red Chocobo Chick e279 Blue Chocobo Chick e280 Purple Chocobo Chick e281 White Chocobo Chick e282 Black Chocobo Chick e283 Silver Chocobo Chick e284 Gold Chocobo Chick e285 Afro &amp; Red Chick e286 Afro &amp; Blue Chick e287 Afro &amp; Purple Chick e288 Afro &amp; White Chick e289 Afro &amp; Black Chick e290 Afro &amp; Silver Chick e291 Afro &amp; Gold Chick e292 Silver Padlock e293 Long Gui's Shell e294 White Guitar e295 Blue Guitar e296 Lower Rank Insignia e297 PSICOM Lapel Pin e298 Gold Brooch e301 Golden Flower e302 Crimson Flower e303 Festive Tree e304 Delicious Mushroom e305 Orange Butterfly e306 Silver Windup Key e307 Yellow Ribbon e308 Silver Gear e309 Chocobo Figurine e310 Summery Parasol e311 Yellow Propeller e312 Pink Moogle Bobble e313 Fairy Wings e314 Sky Blue Newsboy Cap e315 Silk Hat e316 Red Mage's Chapeau e317 Party Hat e318 Headdress of Courage e319 Mint Chip Ice Cream e320 Red Bow Tie e321 Black-Rimmed Glasses e322 Vacationer's Shades e323 Queen's Mask e324 Bushy Mustache e326 Lebreau's Violet Tattoo e327 Gadot's Red Emblem e328 Tattoo e329 NORA Symbol e330 Chocobo Feather Pin e331 Dragon Hide Backpack e332 Orange Beacon e333 Guardian Corps Badge e334 Pilot's Badge e335 Silver PSICOM Spaulders e336 Gold Medal e338 Chocobo Chick e339 Yellow Chick in Afro e340 Gold Padlock e341 Adamantoise Shell e342 Electric Guitar e343 Upper Rank Insignia e344 PSICOM Officer Pin e345 Silver Brooch"},{"location":"user-resource/internal-ids-xiii2/#casino-items","title":"Casino Items","text":"ID Name cc_gysahl Gysahl Greens cs_chip_00 Casino Ticket cs_chip_01 Gold Casino Ticket cs_chip_02 Platinum Casino Ticket cs_cond_00 Chocoboost cs_cond_01 Chocobull cs_race_00 Shuffle cs_race_01 Shuffle (Common) cs_race_02 Shuffle (Graded)"},{"location":"user-resource/internal-ids-xiii2/#consumables","title":"Consumables","text":"ID Name it_antidote Antidote it_elixir Elixir it_holywater Holy Water it_hpotion Wound Potion it_libra Librascope Shinkansen it_phenxbl Phoenix Blood it_phenxtal Phoenix Down it_potion Potion it_sedative Painkiller it_tonkati Mallet it_unico Unicorn Horn it_universal Remedy it_wax Wax"},{"location":"user-resource/internal-ids-xiii2/#keys","title":"Keys","text":"ID Name key_a_code Supply Sphere Access Code key_a_secret Personal Notes key_access_13 Access Key 13 key_access_49 Access Key 49 key_access_50 Access Key 50 key_access_51 Access Key 51 key_access_52 Access Key 52 key_access_la Top Floor Access Key key_acdmycom Academy Communicator key_behi_fang Behemoth Fang key_black_flw Terrorists' Mark key_black_ystn Onyx Crystal key_c_tab Capsule key_casino_dice Setzer's Dice key_casino_prz Just 1 gill key_chaos_cly Chaos Crystal key_common_art Bulb of Hope key_f_colonel Commander's Report key_f_kioku Recording Device key_f_kit Medical Kit key_f_manual Service Manual key_f_message My Buddy's Message key_f_proof Technician's Note key_fenr_flw Fruit of Fenrir key_fortune Fortune Medal key_gowa_wool Rough Wool key_green_ystn Emerald Crystal key_kansoku Old Device key_l_knife Lightning's Knife key_lockjail Holding Cell Key key_lostcom Army Comm Device key_miss_art Tablet of Paddra key_miss_watch Outdoor Watch key_moko_wool Fluffy Wool key_mon_data Monster Analysis Report key_nuku_wool Thick Wool key_osonae Picture Frame key_para50f Paradox Agent Type A key_para52f Paradox Agent Type B key_paraxxf Paradox Agent Type C key_plsstone Eternal Crystal key_rem_ring Sealed Tablet key_s_neck Snow's Necklace key_search_pow Old Battery key_sone_info Thorne's Information key_tissue Toilet Paper Coupon key_unk_s_opt Mysterious Artefact key_unk_y_opt Mysterious Artefact key_wep_sozai Weapon Material key_white_ystn Ivory Crystal key_y_baggage Wedding Jewelry key_y_diary Comm Device key_yukimi Silver Petal"},{"location":"user-resource/internal-ids-xiii2/#maps","title":"Maps","text":"ID Name tmap_ac Map of Academia tmap_af Map of Academia 500AF tmap_bj Map of the Bresha Ruins tmap_cl Map of the Coliseum tmap_cs Map of Serendipity tmap_dd Map of a Dying World tmap_gd Map of the Steppe tmap_gt Map of Augusta Tower tmap_gw Map of Oerba tmap_gy Map of the Yaschas Massif tmap_hh Map of New Bodhum 700AF tmap_hm Map of New Bodhum tmap_sn Map of Sunleth Waterscape tmap_sp Map of the Void Beyond tmap_vp Map of the Vile Peaks"},{"location":"user-resource/internal-ids-xiii2/#materials","title":"Materials","text":"ID Name material_a000 Potent Droplet material_a001 Potent Sliver material_a002 Potent Orb material_a003 Potent Essence material_a004 Potent Crystal material_a005 Power Droplet material_a006 Power Sliver material_a007 Power Orb material_a008 Power Essence material_a009 Power Crystal material_a010 Mana Droplet material_a011 Mana Sliver material_a012 Mana Orb material_a013 Mana Essence material_a014 Mana Crystal material_a015 Vitality Droplet material_a016 Vitality Sliver material_a017 Vitality Orb material_a018 Vitality Essence material_a019 Vitality Crystal material_a020 Power Bolt material_a021 Power Chip material_a022 Power Engine material_a023 Power Booster material_a024 Power Generator material_a025 Mana Bolt material_a026 Mana Chip material_a027 Mana Engine material_a028 Mana Booster material_a029 Mana Generator material_a030 Vitality Bolt material_a031 Vitality Chip material_a032 Vitality Engine material_a033 Vitality Booster material_a034 Vitality Generator material_a035 Potent Bolt material_a036 Potent Chip material_a037 Potent Engine material_a038 Potent Booster material_a039 Potent Generator material_b000 Gogmagog Nail material_b001 Gogmagogite material_b002 Chronomist material_b003 Giant Knuckle material_b004 Crystal Turbine material_b005 Mutant Extract material_b006 Ripened Flanjuice material_b007 Faeryl Fang material_j000 Insulated Cabling material_j001 Fiber-optic Cable material_j002 Liquid Crystal Lens material_j003 Ring Joint material_j004 Epicyclic Gear material_j005 Crankshaft material_j006 Electrolytic Capacitor material_j007 Flywheel material_j008 Sprocket material_j009 Actuator material_j010 Spark Plug material_j011 Iridium Plug material_j012 Needle Valve material_j013 Butterfly Valve material_j014 Analog Circuit material_j015 Digital Circuit material_j016 Gyroscope material_j017 Electrode material_j018 Ceramic Armor material_j019 Chobham Armor material_j020 Radial Bearing material_j021 Thrust Bearing material_j022 Solenoid material_j023 Mobius Coil material_j024 Tungsten Tube material_j025 Titanium Tube material_j026 Passive Detector material_j027 Active Detector material_j028 Transformer material_j029 Amplifier material_j030 Carburetor material_j031 Supercharger material_j032 Piezoelectric Element material_j033 Crystal Oscillator material_j034 Paraffin Oil material_j035 Silicone Oil material_j036 Synthetic Muscle material_j037 Turboprop material_j038 Turbojet material_j039 Tesla Turbine material_j040 Polymer Emulsion material_j041 Ferroelectric Film material_j042 Superconductor material_j043 Perfect Conductor material_j044 Particle Accelerator material_j045 Ultracompact Reactor material_m000 Begrimed Claw material_m001 Bestial Claw material_m002 Gargantuan Claw material_m003 Hellish Talon material_m004 Shattered Bone material_m005 Sturdy Bone material_m006 Otherworldly Bone material_m007 Ancient Bone material_m009 Moistened Scale material_m010 Seapetal Scale material_m011 Abyssal Scale material_m012 Seaking's Beard material_m013 Segmented Carapace material_m014 Iron Shell material_m015 Armored Shell material_m016 Regenerating Carapace material_m017 Chipped Fang material_m018 Wicked Fang material_m019 Monstrous Fang material_m020 Sinister Fang material_m021 Severed Wing material_m022 Scaled Wing material_m023 Abominable Wing material_m024 Menacing Wing material_m025 Molted Tail material_m026 Barbed Tail material_m027 Diabolic Tail material_m028 Entrancing Tail material_m029 Torn Leather material_m030 Thickened Hide material_m031 Smooth Hide material_m032 Supple Leather material_m033 Gummy Oil material_m034 Fragrant Oil material_m035 Medicinal Oil material_m036 Esoteric Oil material_m041 Bomb Ashes material_m042 Bomb Fragment material_m043 Bomb Shell material_m044 Bomb Core material_m045 Murky Ooze material_m046 Vibrant Ooze material_m047 Transparent Ooze material_m048 Wonder Gel material_m049 Fractured Horn material_m050 Spined Horn material_m051 Fiendish Horn material_m052 Infernal Horn material_m053 Strange Fluid material_m054 Enigmatic Fluid material_m055 Mysterious Fluid material_m056 Ineffable Fluid material_m057 Cie'th Tear material_m058 Tear of Frustration material_m059 Tear of Remorse material_m060 Tear of Woe material_m061 Chocobo Plume material_m062 Chocobo Tail Feather material_m063 Green Needle material_m064 Dawnlight Dew material_m065 Dusklight Dew material_m066 Gloomstalk material_m067 Sunpetal material_m068 Red Mycelium material_m069 Blue Mycelium material_m070 White Mycelium material_m071 Black Mycelium material_m072 Succulent Fruit material_m073 Malodorous Fruit material_m074 Moonblossom Seed material_m075 Starblossom Seed material_m076 Perfume material_m077 Pot Shard material_m078 Fractal Pot material_o000 Millerite material_o001 Rhodochrosite material_o002 Cobaltite material_o003 Perovskite material_o004 Uraninite material_o005 Mnar Stone material_o006 Scarletite material_o007 Adamantite material_o008 Dark Matter material_o009 Trapezohedron material_o010 Gold Dust material_o011 Gold Nugget material_o012 Platinum Ingot"},{"location":"user-resource/internal-ids-xiii2/#monster-crystals","title":"Monster Crystals","text":"ID Name mcr_k002 Silver Lobo mcr_k003 Gorgonnopsid mcr_k005 Managarmr mcr_k008 Flanbanero mcr_k010 Flanborg mcr_k012 Dreadnought mcr_k015 Behemoth mcr_k018 Orion mcr_k036 Yaksha mcr_k037 Triffid mcr_k038 Vespid mcr_k039 Barbed Specter mcr_k040 Vespid Soldier mcr_k041 Gremlin mcr_k042 Imp mcr_k043 Zwerg Scandroid mcr_k045 Leyak mcr_k048 Garuda mcr_k054 Munchkin mcr_k056 Goblin Chieftain mcr_k057 Munchkin Boss mcr_k063 Pulse Soldier mcr_k064 Pulse Knight mcr_k065 Pulse Gladiator mcr_k066 Bomb mcr_k069 Navidon mcr_k071 Lucidon mcr_k072 Thermadon mcr_k075 Grand Behemoth mcr_k077 Proto-behemoth mcr_k079 Flanitor mcr_k094 Goblin mcr_k099 Crawler mcr_k102 Frag Leech mcr_k123 Bloodfang Bass mcr_k124 Breshan Bass mcr_k125 Hedge Frog mcr_k126 Mud Frog mcr_k127 Ceratosaur mcr_k128 Ceratoraptor mcr_k150 Thexteron mcr_k152 Viking mcr_k172 Phosphoric Ooze mcr_k173 Garchimacera mcr_k174 Rangda mcr_k182 Hoplite mcr_k185 Yakshini mcr_k190 Microchu mcr_k206 Ahriman mcr_k211 Zwerg Metro mcr_k213 Svarog mcr_k214 Circuitron mcr_k215 Cryohedron mcr_k253 Cactuar mcr_k254 Tonberry mcr_k255 Melligantuar mcr_k256 Cactrot mcr_k257 Gigantuar mcr_k270 Nekton mcr_k271 Meonekton mcr_k273 Cait Sith mcr_k275 Miniflan mcr_k400 Uridimmu mcr_k423 Nanochu mcr_k430 Luminous Puma mcr_k432 Seeping Brie mcr_k433 Albino Lobo mcr_k434 Flandit mcr_k435 Garganzola mcr_k436 Flangonzola mcr_k437 Fencer mcr_k438 Yeoman mcr_k441 Gandayaks mcr_k442 Gahongas mcr_k443 Clematis mcr_k444 Necrosis mcr_k445 Koboldroid Yin mcr_k446 Koboldroid Yang mcr_k447 Buccaboo mcr_k448 Gancanagh mcr_k449 Buccaboo Ace mcr_k450 Gancanagh Ace mcr_k451 Sahagin Prince mcr_k452 Cloudburst mcr_k453 Tempest mcr_k454 Debris mcr_k455 Reaver mcr_k456 Zaghnal mcr_k457 Narasimha mcr_k458 Vodianoi mcr_k459 Samovira mcr_k460 Shaguma mcr_k461 Haguma mcr_k462 Dendrobium mcr_k463 Mandrake mcr_k490 Mewmao mcr_k491 Shrodinger mcr_k492 Forked Cat mcr_k493 Clione mcr_k494 Pleuston mcr_k495 Chelicerata mcr_k496 Pantopoda mcr_k640 Bamapama mcr_k641 Mimi mcr_k642 Fachan mcr_k643 Unsaganashi mcr_k644 Amanojaku mcr_k645 Notsugo mcr_k646 Vouivre mcr_k647 Kanna Kamuy mcr_k649 Deathgaze mcr_k650 Moblin mcr_k651 Major Moblin mcr_k652 Swampmonk mcr_k653 Apkallu mcr_k654 Oannes mcr_k655 Glyptodon mcr_k656 Bunkerbeast mcr_k657 Calautidon mcr_k660 Sarracenia mcr_k661 Spiranthes mcr_k662 Caterchipillar mcr_k663 Exoray mcr_k664 Dragoon mcr_k665 Spiceacilian mcr_k666 Tabasco Toad mcr_k667 Pitterpatter mcr_k668 Chunerpetoh mcr_k672 Testudo mcr_k673 Scutari mcr_k677 Chichu mcr_k678 Xolotl mcr_k679 Miquiztli mcr_k681 Tezcatlipoca mcr_k682 Metallicactuar mcr_k683 Cactuaroni mcr_k684 Cactuarama mcr_k685 Cactuarina mcr_k686 Don Tonberry mcr_k851 Apotamkin mcr_k852 Illuyankas mcr_k853 Grenade mcr_k856 Lancer mcr_k861 Pink Lily mcr_k865 Golden Chocobo mcr_k866 Silver Chocobo mcr_k867 White Chocobo mcr_k868 Black Chocobo mcr_k869 Blue Chocobo mcr_k870 Red Chocobo mcr_k871 Green Chocobo mcr_k872 Purple Chocobo mcr_k882 Chocobo mcr_k895 Twilight Odin mcr_k950 Typhon mcr_k951 Ultros mcr_k952 Omega mcr_k953 Gilgamesh mcr_k954 Pupu mcr_k959 Valfodr mcr_k961 Nabaat mcr_k962 Amodar mcr_k969 Lightning mcr_k971 Lightning mcr_k973 Snow mcr_k974 Sazh"},{"location":"user-resource/internal-ids-xiii2/#passive-abilities","title":"Passive Abilities","text":"ID Name awp_all_250 Hindrance, runaway awp_all_350 Fettered Magic, second wind awp_c000_000 Attack Atb Charge, perseverance awp_c000_050 Attack Atb Charge 2, perseverance awp_c000_100 Improved Raise, perseverance awp_c000_150 Improved Raise 2, perserverance awp_c001_000 Improved Guard, supersonic awp_c001_050 Improved Guard 2?, supersonic awp_c001_100 critical Power Surge, supersonic awp_c001_150 critical Power Surge 2, supersonic awp_c001_200 Improved Ward, lightning bolt awp_c001_250 Improved Ward 2?, lightning bolt awp_c002_000 Augment Maintenance, no racing skill awp_c002_050 Augment Maintenance 2, no racing skill awp_c002_100 Chain Bonus Boost, lightning bolt awp_c002_150 Chain Bonus Boost 2, lightning bolt awp_c002_200 Stagger Maintenance, lightning bolt awp_c002_250 Stagger Maintenance 2, lightning bolt awp_c003_000 Critical Shield, turbo awp_c003_050 Critical Shield 2, turbo awp_c003_200 Defense Maintenance, turbo awp_c003_250 Defense Maintenance 2, turbo awp_c004_000 Improved Cure, turbo awp_c004_050 Improved Cure 2, turbo awp_c004_100 Ally KO Power Surge, blue streak awp_c004_150 Ally KO Power Surge 2, blue streak awp_c004_200 Improved Debuffing, blue streak awp_c004_250 Improved Debuffing 2. blue streak awp_c005_100 Improved Debilitation, no race skill might be second wind awp_c005_150 Improved Debilitation 2, no race skill might be second wind awp_c005_200 Improved Counter, second wind awp_c005_250 Improved Counter 2, second wind auto_00_0 ATB Advantage, sprinter auto_00_1 First Strike, sprinter auto_cp Double CP, health nut auto_crack Pressure 2, no race skill auto_keep Immovable 2, no race skill auto_law Jungle Law, runaway auto_rol Role Resonance, rocket blast auto_weeks Weak Spot, no racing skill auto_drop_0 Item Scavenger 2, dark horse auto_drop_1 Item Collector, dark horse auto_gilup Gilfinder 2, attention hog auto_amdef_s1 Resist phys/mag 5% auto_mdefp_1 Resist Magic 5% auto_mdefp_3 Resist Magic 15% auto_mdefp_6 Resist Magic 26% auto_defp_1 Resist Physical 5% auto_defp_3 Resist Physical 15% auto_defp_6 Resist Physical 26% auto_fdefp_1 Resist Fire 10% auto_fdefp_3 Resist Fire 33% auto_fdefp_6 Resist Fire 45% auto_idefp_1 Resist Ice 10% auto_idefp_3 Resist Ice 33% auto_idefp_6 Resist Ice 45% auto_adefp_1 Resist Wind 10% auto_adefp_3 Resist Wind 33% auto_adefp_6 Resist Wind 45% auto_ldefp_1 Resist Lightning 10% auto_ldefp_3 Resist Lightning 33% auto_ldefp_6 Resist Lightning 45% auto_6def_1 Resist Elements 5% auto_6def_3 Resist Elements 20% auto_6def_5 Resist Elements 30% auto_sdefp_dp1 Resist Deprotect 10% auto_sdefp_dp3 Resist Deprotect 44% auto_sdefp_dp4 Resist Deprotect 66% auto_sdefp_ds1 Resist Deshell 10% auto_sdefp_ds3 Resist Deshell 44% auto_sdefp_ds4 Resist Deshell 66% auto_sdefp_wk1 Resist Imperial 10% auto_sdefp_wk3 Resist Imperial 44% auto_sdefp_wk4 Resist Imperial 66% auto_sdefp_bi1 Resist Poison 10% auto_sdefp_bi3 Resist Poison 44% auto_sdefp_bi4 Resist Poison 66% auto_sdefp_sl1 Resist Slow 10% auto_sdefp_sl3 Resist Slow 44% auto_sdefp_sl4 Resist Slow 66% auto_sdefp_pn1 Resist Pain 10% auto_sdefp_pn3 Resist Pain 44% auto_sdefp_pn4 Resist Pain 66% auto_sdefp_fg1 Resist Fog 10% auto_sdefp_fg3 Resist Fog 44% auto_sdefp_fg4 Resist Fog 66% auto_sdefp_cs1 Resist Curse 10% auto_sdefp_cs3 Resist Curse 44% auto_sdefp_cs4 Resist Curse 66% auto_sdefp_de1 Resist Dispel 10% auto_sdefp_de3 Resist Dispel 44% auto_sdefp_de4 Resist Dispel 66% auto_def_s1 Resilience 10% auto_def_s3 Resilience 20% auto_def_s4 Resilience 40% auto_b_atb Kill ATB Charge, limelight auto_b_libra Kill Libra charge, limelight auto_shorten Rapid recovery, health nut auto_triplets Pack mentality, runaway auto_syncup Feral Speed 2, attention hog auto_syncmax Feral Surge, rocket blast auto_syncdanger Feral Fatigue, rocket blast auto_p_myte Critical Tetradefense, marathoner auto_myte Auto Tetradefense, free spirit auto_p_forc Critical Vigilance, marathoner auto_forc Auto Vigilance, free spirit auto_p_hast Critical Haste, no racing skill auto_hast Auto Haste, free spirit auto_p_prot Critical Protect, blue streak auto_prot Auto Protect, perserverance auto_p_shel Critical Shell, rocket blast auto_shel Auto Shell, perserverance auto_p_brav Critical Bravery, sprinter auto_brav Auto Bravery, free spirit auto_p_fait Critical Faith, free spirit auto_fait Auto Faith, free spirit auto_p_veil Critical Veil auto_veil Auto Veil, perserverance auto_hpp_2 10% HP buff auto_hpp_5 16% HP buff auto_hpp_8 25% HP buff auto_hpp_9 30% HP buff auto_att_2 10% STR buff auto_att_5 16% STR buff auto_att_6 20% STR buff auto_att_7 25% STR buff auto_att_8 35% STR buff auto_matt 2 10% Magic buff auto_matt 5 16% Magic buff auto_matt 6 20% Magic buff auto_matt_7 25% Magic buff auto_matt_8 35% Magic buff"},{"location":"user-resource/internal-ids-xiii2/#weapons","title":"Weapons","text":"ID Name wea_noe_001 Flame Fssil wea_noe_002 Howling Soul wea_noe_003 Volatile Spark wea_noe_004 Blazing Spirit wea_noe_005 Vajradanda wea_noe_006 Survivor's Edge wea_noe_007 Avenger's Edge wea_noe_008 Shellbreaker wea_noe_009 Fragarach wea_noe_010 Grasitha wea_noe_011 Rune Tooth wea_noe_012 Sargatanas wea_noe_013 Nomad's Machete wea_noe_014 Orochi wea_noe_015 Romulus &amp; Remus wea_noe_016 Guardian's Edge wea_noe_017 Blessed Blade wea_noe_018 Sacred Cross wea_noe_019 The Tower wea_noe_020 Mac an Luin wea_noe_021 In Paradisum wea_noe_022 Odinblade wea_noe_023 Muramasa wea_noe_024 Catastrophe Blade wea_noe_025 Catastrophe Blade: Epsilon wea_noe_026 Catastrophe Blade: Omega wea_noe_027 Catastrophe Blade: Infinity wea_noe_028 Muramasa: Kiku wea_noe_029 Muramasa: Sakura wea_noe_030 True Muramasa wea_ser_001 Starseeker wea_ser_002 Meteorblaze wea_ser_003 Lunar Stinger wea_ser_004 Raging Arc wea_ser_005 Izanami wea_ser_006 Amazon Bow wea_ser_007 Fellowship Arc wea_ser_008 Trollspike wea_ser_009 Fatal Barb wea_ser_010 Gandiva wea_ser_011 Faerie's Bow wea_ser_012 Rune Feather wea_ser_013 Angel's Bow wea_ser_014 Eurytos's Bow wea_ser_015 Indrajit wea_ser_016 Butterfly Bow wea_ser_017 Wild Chorus wea_ser_018 Chrysalis Arc wea_ser_019 Nagaraja wea_ser_020 Sagittarius wea_ser_021 Arcus Chronica wea_ser_022 Odinbolt wea_ser_023 Seraphic Wing wea_ser_024 Azrael wea_ser_025 Genji Bow wea_ser_026 Seraphic Wing: Epsilon wea_ser_027 Seraphic Wing: Omega wea_ser_028 Seraphic Wing: Infinity wea_ser_029 Azrael: Epsilon wea_ser_030 Azrael: Omega wea_ser_031 Azrael: Infinity wea_ser_032 Genji Bow: Kiku wea_ser_033 Genji Bow: Sakura wea_ser_034 True Genji Bow"},{"location":"user-resource/zone-info/","title":"Zone Info","text":"<p>These docs contain mappings of each zone id present throughout the trilogy</p>"},{"location":"user-resource/zone-info/#final-fantasy-xiii-1","title":"FINAL FANTASY XIII-1","text":"<p>https://docs.google.com/spreadsheets/d/1sfocGsocGr2wzW7frvbrIw-srm8Ko025qV-b3FFhHus/edit?usp=sharing</p>"},{"location":"user-resource/zone-info/#final-fantasy-xiii-2","title":"FINAL FANTASY XIII-2","text":"<p>https://docs.google.com/spreadsheets/d/1RSyY5doOtlUxhGqwu_mCRE05w79On7o1XrsEqIdIFJI/edit?usp=sharing</p>"},{"location":"user-resource/zone-info/#lightning-returns-final-fantasy-xiii","title":"LIGHTNING RETURNS FINAL FANTASY XIII","text":"<p>https://docs.google.com/spreadsheets/d/1xqGSPXjERl3_PWDmdkhLj0917mwA9T9UWZdD8Wtymyw/edit?usp=sharing</p>"}]}